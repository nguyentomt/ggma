"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/yet-another-react-lightbox";
exports.ids = ["vendor-chunks/yet-another-react-lightbox"];
exports.modules = {

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/captions/captions.css":
/*!************************************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/plugins/captions/captions.css ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"0bccefafe1ce\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveWV0LWFub3RoZXItcmVhY3QtbGlnaHRib3gvZGlzdC9wbHVnaW5zL2NhcHRpb25zL2NhcHRpb25zLmNzcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsY0FBYztBQUM3QixJQUFJLEtBQVUsRUFBRSxFQUF1QiIsInNvdXJjZXMiOlsid2VicGFjazovL2dnbWEvLi9ub2RlX21vZHVsZXMveWV0LWFub3RoZXItcmVhY3QtbGlnaHRib3gvZGlzdC9wbHVnaW5zL2NhcHRpb25zL2NhcHRpb25zLmNzcz84MWY0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiMGJjY2VmYWZlMWNlXCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/captions/captions.css\n");

/***/ }),

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/thumbnails/thumbnails.css":
/*!****************************************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/plugins/thumbnails/thumbnails.css ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"5f2412407627\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveWV0LWFub3RoZXItcmVhY3QtbGlnaHRib3gvZGlzdC9wbHVnaW5zL3RodW1ibmFpbHMvdGh1bWJuYWlscy5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxLQUFVLEVBQUUsRUFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nZ21hLy4vbm9kZV9tb2R1bGVzL3lldC1hbm90aGVyLXJlYWN0LWxpZ2h0Ym94L2Rpc3QvcGx1Z2lucy90aHVtYm5haWxzL3RodW1ibmFpbHMuY3NzP2ExYjYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCI1ZjI0MTI0MDc2MjdcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/thumbnails/thumbnails.css\n");

/***/ }),

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/styles.css":
/*!*****************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/styles.css ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"075a87508db5\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveWV0LWFub3RoZXItcmVhY3QtbGlnaHRib3gvZGlzdC9zdHlsZXMuY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ2dtYS8uL25vZGVfbW9kdWxlcy95ZXQtYW5vdGhlci1yZWFjdC1saWdodGJveC9kaXN0L3N0eWxlcy5jc3M/MGZkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjA3NWE4NzUwOGRiNVwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/styles.css\n");

/***/ }),

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACTION_CLOSE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_CLOSE),\n/* harmony export */   ACTION_NEXT: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT),\n/* harmony export */   ACTION_PREV: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV),\n/* harmony export */   ACTION_SWIPE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_SWIPE),\n/* harmony export */   ACTIVE_SLIDE_COMPLETE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTIVE_SLIDE_COMPLETE),\n/* harmony export */   ACTIVE_SLIDE_ERROR: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTIVE_SLIDE_ERROR),\n/* harmony export */   ACTIVE_SLIDE_LOADING: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTIVE_SLIDE_LOADING),\n/* harmony export */   ACTIVE_SLIDE_PLAYING: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTIVE_SLIDE_PLAYING),\n/* harmony export */   CLASS_FLEX_CENTER: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FLEX_CENTER),\n/* harmony export */   CLASS_FULLSIZE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FULLSIZE),\n/* harmony export */   CLASS_NO_SCROLL: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_NO_SCROLL),\n/* harmony export */   CLASS_NO_SCROLL_PADDING: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_NO_SCROLL_PADDING),\n/* harmony export */   CLASS_SLIDE_WRAPPER: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_SLIDE_WRAPPER),\n/* harmony export */   CLASS_SLIDE_WRAPPER_INTERACTIVE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_SLIDE_WRAPPER_INTERACTIVE),\n/* harmony export */   Carousel: () => (/* binding */ Carousel),\n/* harmony export */   CarouselModule: () => (/* binding */ CarouselModule),\n/* harmony export */   CloseIcon: () => (/* binding */ CloseIcon),\n/* harmony export */   Controller: () => (/* binding */ Controller),\n/* harmony export */   ControllerContext: () => (/* binding */ ControllerContext),\n/* harmony export */   ControllerModule: () => (/* binding */ ControllerModule),\n/* harmony export */   DocumentContext: () => (/* binding */ DocumentContext),\n/* harmony export */   DocumentContextProvider: () => (/* binding */ DocumentContextProvider),\n/* harmony export */   ELEMENT_BUTTON: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ELEMENT_BUTTON),\n/* harmony export */   ELEMENT_ICON: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ELEMENT_ICON),\n/* harmony export */   EVENT_ON_KEY_DOWN: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_KEY_DOWN),\n/* harmony export */   EVENT_ON_KEY_UP: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_KEY_UP),\n/* harmony export */   EVENT_ON_POINTER_CANCEL: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_CANCEL),\n/* harmony export */   EVENT_ON_POINTER_DOWN: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_DOWN),\n/* harmony export */   EVENT_ON_POINTER_LEAVE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_LEAVE),\n/* harmony export */   EVENT_ON_POINTER_MOVE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_MOVE),\n/* harmony export */   EVENT_ON_POINTER_UP: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_UP),\n/* harmony export */   EVENT_ON_WHEEL: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_WHEEL),\n/* harmony export */   ErrorIcon: () => (/* binding */ ErrorIcon),\n/* harmony export */   EventsContext: () => (/* binding */ EventsContext),\n/* harmony export */   EventsProvider: () => (/* binding */ EventsProvider),\n/* harmony export */   IMAGE_FIT_CONTAIN: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.IMAGE_FIT_CONTAIN),\n/* harmony export */   IMAGE_FIT_COVER: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.IMAGE_FIT_COVER),\n/* harmony export */   IconButton: () => (/* binding */ IconButton),\n/* harmony export */   ImageSlide: () => (/* binding */ ImageSlide),\n/* harmony export */   Lightbox: () => (/* binding */ Lightbox),\n/* harmony export */   LightboxDefaultProps: () => (/* binding */ LightboxDefaultProps),\n/* harmony export */   LightboxDispatchContext: () => (/* binding */ LightboxDispatchContext),\n/* harmony export */   LightboxPropsContext: () => (/* binding */ LightboxPropsContext),\n/* harmony export */   LightboxPropsProvider: () => (/* binding */ LightboxPropsProvider),\n/* harmony export */   LightboxRoot: () => (/* binding */ LightboxRoot),\n/* harmony export */   LightboxStateContext: () => (/* binding */ LightboxStateContext),\n/* harmony export */   LightboxStateProvider: () => (/* binding */ LightboxStateProvider),\n/* harmony export */   LoadingIcon: () => (/* binding */ LoadingIcon),\n/* harmony export */   MODULE_CAROUSEL: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_CAROUSEL),\n/* harmony export */   MODULE_CONTROLLER: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_CONTROLLER),\n/* harmony export */   MODULE_NAVIGATION: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_NAVIGATION),\n/* harmony export */   MODULE_NO_SCROLL: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_NO_SCROLL),\n/* harmony export */   MODULE_PORTAL: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_PORTAL),\n/* harmony export */   MODULE_ROOT: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_ROOT),\n/* harmony export */   MODULE_TOOLBAR: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_TOOLBAR),\n/* harmony export */   Navigation: () => (/* binding */ Navigation),\n/* harmony export */   NavigationButton: () => (/* binding */ NavigationButton),\n/* harmony export */   NavigationModule: () => (/* binding */ NavigationModule),\n/* harmony export */   NextIcon: () => (/* binding */ NextIcon),\n/* harmony export */   NoScroll: () => (/* binding */ NoScroll),\n/* harmony export */   NoScrollModule: () => (/* binding */ NoScrollModule),\n/* harmony export */   PLUGIN_CAPTIONS: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_CAPTIONS),\n/* harmony export */   PLUGIN_COUNTER: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_COUNTER),\n/* harmony export */   PLUGIN_DOWNLOAD: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_DOWNLOAD),\n/* harmony export */   PLUGIN_FULLSCREEN: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_FULLSCREEN),\n/* harmony export */   PLUGIN_INLINE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_INLINE),\n/* harmony export */   PLUGIN_SHARE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_SHARE),\n/* harmony export */   PLUGIN_SLIDESHOW: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_SLIDESHOW),\n/* harmony export */   PLUGIN_THUMBNAILS: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_THUMBNAILS),\n/* harmony export */   PLUGIN_ZOOM: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_ZOOM),\n/* harmony export */   Portal: () => (/* binding */ Portal),\n/* harmony export */   PortalModule: () => (/* binding */ PortalModule),\n/* harmony export */   PreviousIcon: () => (/* binding */ PreviousIcon),\n/* harmony export */   Root: () => (/* binding */ Root),\n/* harmony export */   RootModule: () => (/* binding */ RootModule),\n/* harmony export */   SLIDE_STATUS_COMPLETE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_COMPLETE),\n/* harmony export */   SLIDE_STATUS_ERROR: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_ERROR),\n/* harmony export */   SLIDE_STATUS_LOADING: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_LOADING),\n/* harmony export */   SLIDE_STATUS_PLACEHOLDER: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_PLACEHOLDER),\n/* harmony export */   SLIDE_STATUS_PLAYING: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_PLAYING),\n/* harmony export */   SwipeState: () => (/* binding */ SwipeState),\n/* harmony export */   TimeoutsContext: () => (/* binding */ TimeoutsContext),\n/* harmony export */   TimeoutsProvider: () => (/* binding */ TimeoutsProvider),\n/* harmony export */   Toolbar: () => (/* binding */ Toolbar),\n/* harmony export */   ToolbarModule: () => (/* binding */ ToolbarModule),\n/* harmony export */   UNKNOWN_ACTION_TYPE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.UNKNOWN_ACTION_TYPE),\n/* harmony export */   VK_ARROW_LEFT: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.VK_ARROW_LEFT),\n/* harmony export */   VK_ARROW_RIGHT: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.VK_ARROW_RIGHT),\n/* harmony export */   VK_ESCAPE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.VK_ESCAPE),\n/* harmony export */   activeSlideStatus: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.activeSlideStatus),\n/* harmony export */   addToolbarButton: () => (/* binding */ addToolbarButton),\n/* harmony export */   calculatePreload: () => (/* binding */ calculatePreload),\n/* harmony export */   cleanup: () => (/* binding */ cleanup),\n/* harmony export */   clsx: () => (/* binding */ clsx),\n/* harmony export */   composePrefix: () => (/* binding */ composePrefix),\n/* harmony export */   computeSlideRect: () => (/* binding */ computeSlideRect),\n/* harmony export */   createIcon: () => (/* binding */ createIcon),\n/* harmony export */   createIconDisabled: () => (/* binding */ createIconDisabled),\n/* harmony export */   createModule: () => (/* binding */ createModule),\n/* harmony export */   createNode: () => (/* binding */ createNode),\n/* harmony export */   cssClass: () => (/* binding */ cssClass),\n/* harmony export */   cssVar: () => (/* binding */ cssVar),\n/* harmony export */   \"default\": () => (/* binding */ Lightbox),\n/* harmony export */   devicePixelRatio: () => (/* binding */ devicePixelRatio),\n/* harmony export */   getSlide: () => (/* binding */ getSlide),\n/* harmony export */   getSlideIfPresent: () => (/* binding */ getSlideIfPresent),\n/* harmony export */   getSlideIndex: () => (/* binding */ getSlideIndex),\n/* harmony export */   getSlideKey: () => (/* binding */ getSlideKey),\n/* harmony export */   hasSlides: () => (/* binding */ hasSlides),\n/* harmony export */   hasWindow: () => (/* binding */ hasWindow),\n/* harmony export */   isImageFitCover: () => (/* binding */ isImageFitCover),\n/* harmony export */   isImageSlide: () => (/* binding */ isImageSlide),\n/* harmony export */   label: () => (/* binding */ label),\n/* harmony export */   makeComposePrefix: () => (/* binding */ makeComposePrefix),\n/* harmony export */   makeUseContext: () => (/* binding */ makeUseContext),\n/* harmony export */   parseInt: () => (/* binding */ parseInt),\n/* harmony export */   parseLengthPercentage: () => (/* binding */ parseLengthPercentage),\n/* harmony export */   round: () => (/* binding */ round),\n/* harmony export */   setRef: () => (/* binding */ setRef),\n/* harmony export */   stopNavigationEventsPropagation: () => (/* binding */ stopNavigationEventsPropagation),\n/* harmony export */   useAnimation: () => (/* binding */ useAnimation),\n/* harmony export */   useContainerRect: () => (/* binding */ useContainerRect),\n/* harmony export */   useController: () => (/* binding */ useController),\n/* harmony export */   useDelay: () => (/* binding */ useDelay),\n/* harmony export */   useDocumentContext: () => (/* binding */ useDocumentContext),\n/* harmony export */   useEventCallback: () => (/* binding */ useEventCallback),\n/* harmony export */   useEvents: () => (/* binding */ useEvents),\n/* harmony export */   useForkRef: () => (/* binding */ useForkRef),\n/* harmony export */   useKeyboardNavigation: () => (/* binding */ useKeyboardNavigation),\n/* harmony export */   useLayoutEffect: () => (/* binding */ useLayoutEffect),\n/* harmony export */   useLightboxDispatch: () => (/* binding */ useLightboxDispatch),\n/* harmony export */   useLightboxProps: () => (/* binding */ useLightboxProps),\n/* harmony export */   useLightboxState: () => (/* binding */ useLightboxState),\n/* harmony export */   useLoseFocus: () => (/* binding */ useLoseFocus),\n/* harmony export */   useMotionPreference: () => (/* binding */ useMotionPreference),\n/* harmony export */   useNavigationState: () => (/* binding */ useNavigationState),\n/* harmony export */   usePointerEvents: () => (/* binding */ usePointerEvents),\n/* harmony export */   usePointerSwipe: () => (/* binding */ usePointerSwipe),\n/* harmony export */   usePreventWheelDefaults: () => (/* binding */ usePreventWheelDefaults),\n/* harmony export */   useRTL: () => (/* binding */ useRTL),\n/* harmony export */   useSensors: () => (/* binding */ useSensors),\n/* harmony export */   useThrottle: () => (/* binding */ useThrottle),\n/* harmony export */   useTimeouts: () => (/* binding */ useTimeouts),\n/* harmony export */   useWheelSwipe: () => (/* binding */ useWheelSwipe),\n/* harmony export */   withPlugins: () => (/* binding */ withPlugins)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/types.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* __next_internal_client_entry_do_not_use__ ACTIVE_SLIDE_COMPLETE,ACTIVE_SLIDE_ERROR,ACTIVE_SLIDE_LOADING,ACTIVE_SLIDE_PLAYING,CLASS_FULLSIZE,CLASS_SLIDE_WRAPPER_INTERACTIVE,PLUGIN_CAPTIONS,PLUGIN_COUNTER,PLUGIN_DOWNLOAD,PLUGIN_FULLSCREEN,PLUGIN_INLINE,PLUGIN_SHARE,PLUGIN_SLIDESHOW,PLUGIN_THUMBNAILS,PLUGIN_ZOOM,SLIDE_STATUS_PLAYING,ACTION_CLOSE,ACTION_NEXT,ACTION_PREV,ACTION_SWIPE,CLASS_FLEX_CENTER,CLASS_NO_SCROLL,CLASS_NO_SCROLL_PADDING,CLASS_SLIDE_WRAPPER,Carousel,CarouselModule,CloseIcon,Controller,ControllerContext,ControllerModule,DocumentContext,DocumentContextProvider,ELEMENT_BUTTON,ELEMENT_ICON,EVENT_ON_KEY_DOWN,EVENT_ON_KEY_UP,EVENT_ON_POINTER_CANCEL,EVENT_ON_POINTER_DOWN,EVENT_ON_POINTER_LEAVE,EVENT_ON_POINTER_MOVE,EVENT_ON_POINTER_UP,EVENT_ON_WHEEL,ErrorIcon,EventsContext,EventsProvider,IMAGE_FIT_CONTAIN,IMAGE_FIT_COVER,IconButton,ImageSlide,Lightbox,LightboxDefaultProps,LightboxDispatchContext,LightboxPropsContext,LightboxPropsProvider,LightboxRoot,LightboxStateContext,LightboxStateProvider,LoadingIcon,MODULE_CAROUSEL,MODULE_CONTROLLER,MODULE_NAVIGATION,MODULE_NO_SCROLL,MODULE_PORTAL,MODULE_ROOT,MODULE_TOOLBAR,Navigation,NavigationButton,NavigationModule,NextIcon,NoScroll,NoScrollModule,Portal,PortalModule,PreviousIcon,Root,RootModule,SLIDE_STATUS_COMPLETE,SLIDE_STATUS_ERROR,SLIDE_STATUS_LOADING,SLIDE_STATUS_PLACEHOLDER,SwipeState,TimeoutsContext,TimeoutsProvider,Toolbar,ToolbarModule,UNKNOWN_ACTION_TYPE,VK_ARROW_LEFT,VK_ARROW_RIGHT,VK_ESCAPE,activeSlideStatus,addToolbarButton,calculatePreload,cleanup,clsx,composePrefix,computeSlideRect,createIcon,createIconDisabled,createModule,createNode,cssClass,cssVar,default,devicePixelRatio,getSlide,getSlideIfPresent,getSlideIndex,getSlideKey,hasSlides,hasWindow,isImageFitCover,isImageSlide,label,makeComposePrefix,makeUseContext,parseInt,parseLengthPercentage,round,setRef,stopNavigationEventsPropagation,useAnimation,useContainerRect,useController,useDelay,useDocumentContext,useEventCallback,useEvents,useForkRef,useKeyboardNavigation,useLayoutEffect,useLightboxDispatch,useLightboxProps,useLightboxState,useLoseFocus,useMotionPreference,useNavigationState,usePointerEvents,usePointerSwipe,usePreventWheelDefaults,useRTL,useSensors,useThrottle,useTimeouts,useWheelSwipe,withPlugins auto */ \n\n\n\nconst cssPrefix$3 = \"yarl__\";\nfunction clsx(...classes) {\n    return [\n        ...classes\n    ].filter(Boolean).join(\" \");\n}\nfunction cssClass(name) {\n    return `${cssPrefix$3}${name}`;\n}\nfunction cssVar(name) {\n    return `--${cssPrefix$3}${name}`;\n}\nfunction composePrefix(base, prefix) {\n    return `${base}${prefix ? `_${prefix}` : \"\"}`;\n}\nfunction makeComposePrefix(base) {\n    return (prefix)=>composePrefix(base, prefix);\n}\nfunction label(labels, defaultLabel) {\n    var _a;\n    return (_a = labels === null || labels === void 0 ? void 0 : labels[defaultLabel]) !== null && _a !== void 0 ? _a : defaultLabel;\n}\nfunction cleanup(...cleaners) {\n    return ()=>{\n        cleaners.forEach((cleaner)=>{\n            cleaner();\n        });\n    };\n}\nfunction makeUseContext(name, contextName, context) {\n    return ()=>{\n        const ctx = react__WEBPACK_IMPORTED_MODULE_0__.useContext(context);\n        if (!ctx) {\n            throw new Error(`${name} must be used within a ${contextName}.Provider`);\n        }\n        return ctx;\n    };\n}\nfunction hasWindow() {\n    return \"undefined\" !== \"undefined\";\n}\nfunction round(value, decimals = 0) {\n    const factor = 10 ** decimals;\n    return Math.round((value + Number.EPSILON) * factor) / factor;\n}\nfunction isImageSlide(slide) {\n    return slide.type === undefined || slide.type === \"image\";\n}\nfunction isImageFitCover(image, imageFit) {\n    return image.imageFit === _types_js__WEBPACK_IMPORTED_MODULE_2__.IMAGE_FIT_COVER || image.imageFit !== _types_js__WEBPACK_IMPORTED_MODULE_2__.IMAGE_FIT_CONTAIN && imageFit === _types_js__WEBPACK_IMPORTED_MODULE_2__.IMAGE_FIT_COVER;\n}\nfunction parseInt(value) {\n    return typeof value === \"string\" ? Number.parseInt(value, 10) : value;\n}\nfunction parseLengthPercentage(input) {\n    if (typeof input === \"number\") {\n        return {\n            pixel: input\n        };\n    }\n    if (typeof input === \"string\") {\n        const value = parseInt(input);\n        return input.endsWith(\"%\") ? {\n            percent: value\n        } : {\n            pixel: value\n        };\n    }\n    return {\n        pixel: 0\n    };\n}\nfunction computeSlideRect(containerRect, padding) {\n    const paddingValue = parseLengthPercentage(padding);\n    const paddingPixels = paddingValue.percent !== undefined ? containerRect.width / 100 * paddingValue.percent : paddingValue.pixel;\n    return {\n        width: Math.max(containerRect.width - 2 * paddingPixels, 0),\n        height: Math.max(containerRect.height - 2 * paddingPixels, 0)\n    };\n}\nfunction devicePixelRatio() {\n    return (hasWindow() ? window === null || window === void 0 ? void 0 : window.devicePixelRatio : undefined) || 1;\n}\nfunction getSlideIndex(index, slidesCount) {\n    return slidesCount > 0 ? (index % slidesCount + slidesCount) % slidesCount : 0;\n}\nfunction hasSlides(slides) {\n    return slides.length > 0;\n}\nfunction getSlide(slides, index) {\n    return slides[getSlideIndex(index, slides.length)];\n}\nfunction getSlideIfPresent(slides, index) {\n    return hasSlides(slides) ? getSlide(slides, index) : undefined;\n}\nfunction getSlideKey(slide) {\n    return isImageSlide(slide) ? slide.src : undefined;\n}\nfunction addToolbarButton(toolbar, key, button) {\n    if (!button) return toolbar;\n    const { buttons, ...restToolbar } = toolbar;\n    const index = buttons.findIndex((item)=>item === key);\n    const buttonWithKey = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(button) ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(button, {\n        key\n    }, null) : button;\n    if (index >= 0) {\n        const result = [\n            ...buttons\n        ];\n        result.splice(index, 1, buttonWithKey);\n        return {\n            buttons: result,\n            ...restToolbar\n        };\n    }\n    return {\n        buttons: [\n            buttonWithKey,\n            ...buttons\n        ],\n        ...restToolbar\n    };\n}\nfunction stopNavigationEventsPropagation() {\n    const stopPropagation = (event)=>{\n        event.stopPropagation();\n    };\n    return {\n        onPointerDown: stopPropagation,\n        onKeyDown: stopPropagation,\n        onWheel: stopPropagation\n    };\n}\nfunction calculatePreload(carousel, slides, minimum = 0) {\n    return Math.min(carousel.preload, Math.max(carousel.finite ? slides.length - 1 : Math.floor(slides.length / 2), minimum));\n}\nconst LightboxDefaultProps = {\n    open: false,\n    close: ()=>{},\n    index: 0,\n    slides: [],\n    render: {},\n    plugins: [],\n    toolbar: {\n        buttons: [\n            _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_CLOSE\n        ]\n    },\n    labels: {},\n    animation: {\n        fade: 250,\n        swipe: 500,\n        easing: {\n            fade: \"ease\",\n            swipe: \"ease-out\",\n            navigation: \"ease-in-out\"\n        }\n    },\n    carousel: {\n        finite: false,\n        preload: 2,\n        padding: \"16px\",\n        spacing: \"30%\",\n        imageFit: _types_js__WEBPACK_IMPORTED_MODULE_2__.IMAGE_FIT_CONTAIN,\n        imageProps: {}\n    },\n    controller: {\n        ref: null,\n        focus: true,\n        aria: false,\n        touchAction: \"none\",\n        closeOnPullUp: false,\n        closeOnPullDown: false,\n        closeOnBackdropClick: false,\n        preventDefaultWheelX: true,\n        preventDefaultWheelY: false\n    },\n    portal: {},\n    noScroll: {\n        disabled: false\n    },\n    on: {},\n    styles: {},\n    className: \"\"\n};\nfunction createModule(name, component) {\n    return {\n        name,\n        component\n    };\n}\nfunction createNode(module, children) {\n    return {\n        module,\n        children\n    };\n}\nfunction traverseNode(node, target, apply) {\n    if (node.module.name === target) {\n        return apply(node);\n    }\n    if (node.children) {\n        return [\n            createNode(node.module, node.children.flatMap((n)=>{\n                var _a;\n                return (_a = traverseNode(n, target, apply)) !== null && _a !== void 0 ? _a : [];\n            }))\n        ];\n    }\n    return [\n        node\n    ];\n}\nfunction traverse(nodes, target, apply) {\n    return nodes.flatMap((node)=>{\n        var _a;\n        return (_a = traverseNode(node, target, apply)) !== null && _a !== void 0 ? _a : [];\n    });\n}\nfunction withPlugins(root, plugins = [], augmentations = []) {\n    let config = root;\n    const contains = (target)=>{\n        const nodes = [\n            ...config\n        ];\n        while(nodes.length > 0){\n            const node = nodes.pop();\n            if ((node === null || node === void 0 ? void 0 : node.module.name) === target) return true;\n            if (node === null || node === void 0 ? void 0 : node.children) nodes.push(...node.children);\n        }\n        return false;\n    };\n    const addParent = (target, module)=>{\n        if (target === \"\") {\n            config = [\n                createNode(module, config)\n            ];\n            return;\n        }\n        config = traverse(config, target, (node)=>[\n                createNode(module, [\n                    node\n                ])\n            ]);\n    };\n    const append = (target, module)=>{\n        config = traverse(config, target, (node)=>[\n                createNode(node.module, [\n                    createNode(module, node.children)\n                ])\n            ]);\n    };\n    const addChild = (target, module, precede)=>{\n        config = traverse(config, target, (node)=>{\n            var _a;\n            return [\n                createNode(node.module, [\n                    ...precede ? [\n                        createNode(module)\n                    ] : [],\n                    ...(_a = node.children) !== null && _a !== void 0 ? _a : [],\n                    ...!precede ? [\n                        createNode(module)\n                    ] : []\n                ])\n            ];\n        });\n    };\n    const addSibling = (target, module, precede)=>{\n        config = traverse(config, target, (node)=>[\n                ...precede ? [\n                    createNode(module)\n                ] : [],\n                node,\n                ...!precede ? [\n                    createNode(module)\n                ] : []\n            ]);\n    };\n    const addModule = (module)=>{\n        append(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_CONTROLLER, module);\n    };\n    const replace = (target, module)=>{\n        config = traverse(config, target, (node)=>[\n                createNode(module, node.children)\n            ]);\n    };\n    const remove = (target)=>{\n        config = traverse(config, target, (node)=>node.children);\n    };\n    const augment = (augmentation)=>{\n        augmentations.push(augmentation);\n    };\n    plugins.forEach((plugin)=>{\n        plugin({\n            contains,\n            addParent,\n            append,\n            addChild,\n            addSibling,\n            addModule,\n            replace,\n            remove,\n            augment\n        });\n    });\n    return {\n        config,\n        augmentation: (props)=>augmentations.reduce((acc, augmentation)=>augmentation(acc), props)\n    };\n}\nconst DocumentContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useDocumentContext = makeUseContext(\"useDocument\", \"DocumentContext\", DocumentContext);\nfunction DocumentContextProvider({ nodeRef, children }) {\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        const getOwnerDocument = (node)=>{\n            var _a;\n            return ((_a = node || nodeRef.current) === null || _a === void 0 ? void 0 : _a.ownerDocument) || document;\n        };\n        const getOwnerWindow = (node)=>{\n            var _a;\n            return ((_a = getOwnerDocument(node)) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n        };\n        return {\n            getOwnerDocument,\n            getOwnerWindow\n        };\n    }, [\n        nodeRef\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DocumentContext.Provider, {\n        value: context\n    }, children);\n}\nconst EventsContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useEvents = makeUseContext(\"useEvents\", \"EventsContext\", EventsContext);\nfunction EventsProvider({ children }) {\n    const [subscriptions] = react__WEBPACK_IMPORTED_MODULE_0__.useState({});\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>()=>{\n            Object.keys(subscriptions).forEach((topic)=>delete subscriptions[topic]);\n        }, [\n        subscriptions\n    ]);\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        const unsubscribe = (topic, callback)=>{\n            var _a;\n            (_a = subscriptions[topic]) === null || _a === void 0 ? void 0 : _a.splice(0, subscriptions[topic].length, ...subscriptions[topic].filter((cb)=>cb !== callback));\n        };\n        const subscribe = (topic, callback)=>{\n            if (!subscriptions[topic]) {\n                subscriptions[topic] = [];\n            }\n            subscriptions[topic].push(callback);\n            return ()=>unsubscribe(topic, callback);\n        };\n        const publish = (...[topic, event])=>{\n            var _a;\n            (_a = subscriptions[topic]) === null || _a === void 0 ? void 0 : _a.forEach((callback)=>callback(event));\n        };\n        return {\n            publish,\n            subscribe,\n            unsubscribe\n        };\n    }, [\n        subscriptions\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(EventsContext.Provider, {\n        value: context\n    }, children);\n}\nconst LightboxPropsContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useLightboxProps = makeUseContext(\"useLightboxProps\", \"LightboxPropsContext\", LightboxPropsContext);\nfunction LightboxPropsProvider({ children, ...props }) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LightboxPropsContext.Provider, {\n        value: props\n    }, children);\n}\nconst LightboxStateContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useLightboxState = makeUseContext(\"useLightboxState\", \"LightboxStateContext\", LightboxStateContext);\nconst LightboxDispatchContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useLightboxDispatch = makeUseContext(\"useLightboxDispatch\", \"LightboxDispatchContext\", LightboxDispatchContext);\nfunction reducer(state, action) {\n    switch(action.type){\n        case \"swipe\":\n            {\n                const { slides } = state;\n                const increment = (action === null || action === void 0 ? void 0 : action.increment) || 0;\n                const globalIndex = state.globalIndex + increment;\n                const currentIndex = getSlideIndex(globalIndex, slides.length);\n                const currentSlide = getSlideIfPresent(slides, currentIndex);\n                const animation = increment || action.duration ? {\n                    increment,\n                    duration: action.duration,\n                    easing: action.easing\n                } : undefined;\n                return {\n                    slides,\n                    currentIndex,\n                    globalIndex,\n                    currentSlide,\n                    animation\n                };\n            }\n        case \"update\":\n            if (action.slides !== state.slides || action.index !== state.currentIndex) {\n                return {\n                    slides: action.slides,\n                    currentIndex: action.index,\n                    globalIndex: action.index,\n                    currentSlide: getSlideIfPresent(action.slides, action.index)\n                };\n            }\n            return state;\n        default:\n            throw new Error(_types_js__WEBPACK_IMPORTED_MODULE_2__.UNKNOWN_ACTION_TYPE);\n    }\n}\nfunction LightboxStateProvider({ slides, index, children }) {\n    const [state, dispatch] = react__WEBPACK_IMPORTED_MODULE_0__.useReducer(reducer, {\n        slides,\n        currentIndex: index,\n        globalIndex: index,\n        currentSlide: getSlideIfPresent(slides, index)\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        dispatch({\n            type: \"update\",\n            slides,\n            index\n        });\n    }, [\n        slides,\n        index\n    ]);\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>({\n            ...state,\n            state,\n            dispatch\n        }), [\n        state,\n        dispatch\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LightboxDispatchContext.Provider, {\n        value: dispatch\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LightboxStateContext.Provider, {\n        value: context\n    }, children));\n}\nconst TimeoutsContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useTimeouts = makeUseContext(\"useTimeouts\", \"TimeoutsContext\", TimeoutsContext);\nfunction TimeoutsProvider({ children }) {\n    const [timeouts] = react__WEBPACK_IMPORTED_MODULE_0__.useState([]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>()=>{\n            timeouts.forEach((tid)=>window.clearTimeout(tid));\n            timeouts.splice(0, timeouts.length);\n        }, [\n        timeouts\n    ]);\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        const removeTimeout = (id)=>{\n            timeouts.splice(0, timeouts.length, ...timeouts.filter((tid)=>tid !== id));\n        };\n        const setTimeout = (fn, delay)=>{\n            const id = window.setTimeout(()=>{\n                removeTimeout(id);\n                fn();\n            }, delay);\n            timeouts.push(id);\n            return id;\n        };\n        const clearTimeout = (id)=>{\n            if (id !== undefined) {\n                removeTimeout(id);\n                window.clearTimeout(id);\n            }\n        };\n        return {\n            setTimeout,\n            clearTimeout\n        };\n    }, [\n        timeouts\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(TimeoutsContext.Provider, {\n        value: context\n    }, children);\n}\nconst IconButton = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function IconButton({ label: label$1, className, icon: Icon, renderIcon, onClick, style, ...rest }, ref) {\n    const { styles, labels } = useLightboxProps();\n    const buttonLabel = label(labels, label$1);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n        ref: ref,\n        type: \"button\",\n        title: buttonLabel,\n        \"aria-label\": buttonLabel,\n        className: clsx(cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.ELEMENT_BUTTON), className),\n        onClick: onClick,\n        style: {\n            ...style,\n            ...styles.button\n        },\n        ...rest\n    }, renderIcon ? renderIcon() : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icon, {\n        className: cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.ELEMENT_ICON),\n        style: styles.icon\n    }));\n});\nfunction svgIcon(name, children) {\n    const icon = (props)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            viewBox: \"0 0 24 24\",\n            width: \"24\",\n            height: \"24\",\n            \"aria-hidden\": \"true\",\n            focusable: \"false\",\n            ...props\n        }, children);\n    icon.displayName = name;\n    return icon;\n}\nfunction createIcon(name, glyph) {\n    return svgIcon(name, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n        fill: \"currentColor\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0 0h24v24H0z\",\n        fill: \"none\"\n    }), glyph));\n}\nfunction createIconDisabled(name, glyph) {\n    return svgIcon(name, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"defs\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"mask\", {\n        id: \"strike\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0 0h24v24H0z\",\n        fill: \"white\"\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0 0L24 24\",\n        stroke: \"black\",\n        strokeWidth: 4\n    }))), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0.70707 2.121320L21.878680 23.292883\",\n        stroke: \"currentColor\",\n        strokeWidth: 2\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n        fill: \"currentColor\",\n        mask: \"url(#strike)\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0 0h24v24H0z\",\n        fill: \"none\"\n    }), glyph)));\n}\nconst CloseIcon = createIcon(\"Close\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}));\nconst PreviousIcon = createIcon(\"Previous\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"\n}));\nconst NextIcon = createIcon(\"Next\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}));\nconst LoadingIcon = createIcon(\"Loading\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, Array.from({\n    length: 8\n}).map((_, index, array)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"line\", {\n        key: index,\n        x1: \"12\",\n        y1: \"6.5\",\n        x2: \"12\",\n        y2: \"1.8\",\n        strokeLinecap: \"round\",\n        strokeWidth: \"2.6\",\n        stroke: \"currentColor\",\n        strokeOpacity: 1 / array.length * (index + 1),\n        transform: `rotate(${360 / array.length * index}, 12, 12)`\n    }))));\nconst ErrorIcon = createIcon(\"Error\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M21.9,21.9l-8.49-8.49l0,0L3.59,3.59l0,0L2.1,2.1L0.69,3.51L3,5.83V19c0,1.1,0.9,2,2,2h13.17l2.31,2.31L21.9,21.9z M5,18 l3.5-4.5l2.5,3.01L12.17,15l3,3H5z M21,18.17L5.83,3H19c1.1,0,2,0.9,2,2V18.17z\"\n}));\nconst useLayoutEffect = hasWindow() ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;\nfunction useMotionPreference() {\n    const [reduceMotion, setReduceMotion] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        var _a, _b;\n        const mediaQuery = (_a = window.matchMedia) === null || _a === void 0 ? void 0 : _a.call(window, \"(prefers-reduced-motion: reduce)\");\n        setReduceMotion(mediaQuery === null || mediaQuery === void 0 ? void 0 : mediaQuery.matches);\n        const listener = (event)=>setReduceMotion(event.matches);\n        (_b = mediaQuery === null || mediaQuery === void 0 ? void 0 : mediaQuery.addEventListener) === null || _b === void 0 ? void 0 : _b.call(mediaQuery, \"change\", listener);\n        return ()=>{\n            var _a;\n            return (_a = mediaQuery === null || mediaQuery === void 0 ? void 0 : mediaQuery.removeEventListener) === null || _a === void 0 ? void 0 : _a.call(mediaQuery, \"change\", listener);\n        };\n    }, []);\n    return reduceMotion;\n}\nfunction currentTransformation(node) {\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    const matrix = window.getComputedStyle(node).transform;\n    const matcher = matrix.match(/matrix.*\\((.+)\\)/);\n    if (matcher) {\n        const values = matcher[1].split(\",\").map(parseInt);\n        if (values.length === 6) {\n            x = values[4];\n            y = values[5];\n        } else if (values.length === 16) {\n            x = values[12];\n            y = values[13];\n            z = values[14];\n        }\n    }\n    return {\n        x,\n        y,\n        z\n    };\n}\nfunction useAnimation(nodeRef, computeAnimation) {\n    const snapshot = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const animation = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const reduceMotion = useMotionPreference();\n    useLayoutEffect(()=>{\n        var _a, _b, _c;\n        if (nodeRef.current && snapshot.current !== undefined && !reduceMotion) {\n            const { keyframes, duration, easing, onfinish } = computeAnimation(snapshot.current, nodeRef.current.getBoundingClientRect(), currentTransformation(nodeRef.current)) || {};\n            if (keyframes && duration) {\n                (_a = animation.current) === null || _a === void 0 ? void 0 : _a.cancel();\n                animation.current = undefined;\n                try {\n                    animation.current = (_c = (_b = nodeRef.current).animate) === null || _c === void 0 ? void 0 : _c.call(_b, keyframes, {\n                        duration,\n                        easing\n                    });\n                } catch (err) {\n                    console.error(err);\n                }\n                if (animation.current) {\n                    animation.current.onfinish = ()=>{\n                        animation.current = undefined;\n                        onfinish === null || onfinish === void 0 ? void 0 : onfinish();\n                    };\n                }\n            }\n        }\n        snapshot.current = undefined;\n    });\n    return {\n        prepareAnimation: (currentSnapshot)=>{\n            snapshot.current = currentSnapshot;\n        },\n        isAnimationPlaying: ()=>{\n            var _a;\n            return ((_a = animation.current) === null || _a === void 0 ? void 0 : _a.playState) === \"running\";\n        }\n    };\n}\nfunction useContainerRect() {\n    const containerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const observerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const [containerRect, setContainerRect] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const setContainerRef = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((node)=>{\n        containerRef.current = node;\n        if (observerRef.current) {\n            observerRef.current.disconnect();\n            observerRef.current = undefined;\n        }\n        const updateContainerRect = ()=>{\n            if (node) {\n                const styles = window.getComputedStyle(node);\n                const parse = (value)=>parseFloat(value) || 0;\n                setContainerRect({\n                    width: Math.round(node.clientWidth - parse(styles.paddingLeft) - parse(styles.paddingRight)),\n                    height: Math.round(node.clientHeight - parse(styles.paddingTop) - parse(styles.paddingBottom))\n                });\n            } else {\n                setContainerRect(undefined);\n            }\n        };\n        updateContainerRect();\n        if (node && typeof ResizeObserver !== \"undefined\") {\n            observerRef.current = new ResizeObserver(updateContainerRect);\n            observerRef.current.observe(node);\n        }\n    }, []);\n    return {\n        setContainerRef,\n        containerRef,\n        containerRect\n    };\n}\nfunction useDelay() {\n    const timeoutId = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const { setTimeout, clearTimeout } = useTimeouts();\n    return react__WEBPACK_IMPORTED_MODULE_0__.useCallback((callback, delay)=>{\n        clearTimeout(timeoutId.current);\n        timeoutId.current = setTimeout(callback, delay > 0 ? delay : 0);\n    }, [\n        setTimeout,\n        clearTimeout\n    ]);\n}\nfunction useEventCallback(fn) {\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(fn);\n    useLayoutEffect(()=>{\n        ref.current = fn;\n    });\n    return react__WEBPACK_IMPORTED_MODULE_0__.useCallback((...args)=>{\n        var _a;\n        return (_a = ref.current) === null || _a === void 0 ? void 0 : _a.call(ref, ...args);\n    }, []);\n}\nfunction setRef(ref, value) {\n    if (typeof ref === \"function\") {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\nfunction useForkRef(refA, refB) {\n    return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>refA == null && refB == null ? null : (refValue)=>{\n            setRef(refA, refValue);\n            setRef(refB, refValue);\n        }, [\n        refA,\n        refB\n    ]);\n}\nfunction useLoseFocus(focus, disabled = false) {\n    const focused = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    useLayoutEffect(()=>{\n        if (disabled && focused.current) {\n            focused.current = false;\n            focus();\n        }\n    }, [\n        disabled,\n        focus\n    ]);\n    const onFocus = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        focused.current = true;\n    }, []);\n    const onBlur = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        focused.current = false;\n    }, []);\n    return {\n        onFocus,\n        onBlur\n    };\n}\nfunction useRTL() {\n    const [isRTL, setIsRTL] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    useLayoutEffect(()=>{\n        setIsRTL(window.getComputedStyle(window.document.documentElement).direction === \"rtl\");\n    }, []);\n    return isRTL;\n}\nfunction useSensors() {\n    const [subscribers] = react__WEBPACK_IMPORTED_MODULE_0__.useState({});\n    const notifySubscribers = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((type, event)=>{\n        var _a;\n        (_a = subscribers[type]) === null || _a === void 0 ? void 0 : _a.forEach((listener)=>{\n            if (!event.isPropagationStopped()) listener(event);\n        });\n    }, [\n        subscribers\n    ]);\n    const registerSensors = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>({\n            onPointerDown: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_DOWN, event),\n            onPointerMove: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_MOVE, event),\n            onPointerUp: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_UP, event),\n            onPointerLeave: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_LEAVE, event),\n            onPointerCancel: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_CANCEL, event),\n            onKeyDown: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_KEY_DOWN, event),\n            onKeyUp: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_KEY_UP, event),\n            onWheel: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_WHEEL, event)\n        }), [\n        notifySubscribers\n    ]);\n    const subscribeSensors = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((type, callback)=>{\n        if (!subscribers[type]) {\n            subscribers[type] = [];\n        }\n        subscribers[type].unshift(callback);\n        return ()=>{\n            const listeners = subscribers[type];\n            if (listeners) {\n                listeners.splice(0, listeners.length, ...listeners.filter((el)=>el !== callback));\n            }\n        };\n    }, [\n        subscribers\n    ]);\n    return {\n        registerSensors,\n        subscribeSensors\n    };\n}\nfunction useThrottle(callback, delay) {\n    const lastCallbackTime = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const delayCallback = useDelay();\n    const executeCallback = useEventCallback((...args)=>{\n        lastCallbackTime.current = Date.now();\n        callback(args);\n    });\n    return react__WEBPACK_IMPORTED_MODULE_0__.useCallback((...args)=>{\n        delayCallback(()=>{\n            executeCallback(args);\n        }, delay - (Date.now() - lastCallbackTime.current));\n    }, [\n        delay,\n        executeCallback,\n        delayCallback\n    ]);\n}\nconst slidePrefix = makeComposePrefix(\"slide\");\nconst slideImagePrefix = makeComposePrefix(\"slide_image\");\nfunction ImageSlide({ slide: image, offset, render, rect, imageFit, imageProps, onClick, onLoad, onError, style }) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const [status, setStatus] = react__WEBPACK_IMPORTED_MODULE_0__.useState(_types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_LOADING);\n    const { publish } = useEvents();\n    const { setTimeout } = useTimeouts();\n    const imageRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (offset === 0) {\n            publish((0,_types_js__WEBPACK_IMPORTED_MODULE_2__.activeSlideStatus)(status));\n        }\n    }, [\n        offset,\n        status,\n        publish\n    ]);\n    const handleLoading = useEventCallback((img)=>{\n        (\"decode\" in img ? img.decode() : Promise.resolve()).catch(()=>{}).then(()=>{\n            if (!img.parentNode) {\n                return;\n            }\n            setStatus(_types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_COMPLETE);\n            setTimeout(()=>{\n                onLoad === null || onLoad === void 0 ? void 0 : onLoad(img);\n            }, 0);\n        });\n    });\n    const setImageRef = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((img)=>{\n        imageRef.current = img;\n        if (img === null || img === void 0 ? void 0 : img.complete) {\n            handleLoading(img);\n        }\n    }, [\n        handleLoading\n    ]);\n    const handleOnLoad = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event)=>{\n        handleLoading(event.currentTarget);\n    }, [\n        handleLoading\n    ]);\n    const handleOnError = useEventCallback(()=>{\n        setStatus(_types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_ERROR);\n        onError === null || onError === void 0 ? void 0 : onError();\n    });\n    const cover = isImageFitCover(image, imageFit);\n    const nonInfinite = (value, fallback)=>Number.isFinite(value) ? value : fallback;\n    const maxWidth = nonInfinite(Math.max(...((_b = (_a = image.srcSet) === null || _a === void 0 ? void 0 : _a.map((x)=>x.width)) !== null && _b !== void 0 ? _b : []).concat(image.width ? [\n        image.width\n    ] : []).filter(Boolean)), ((_c = imageRef.current) === null || _c === void 0 ? void 0 : _c.naturalWidth) || 0);\n    const maxHeight = nonInfinite(Math.max(...((_e = (_d = image.srcSet) === null || _d === void 0 ? void 0 : _d.map((x)=>x.height)) !== null && _e !== void 0 ? _e : []).concat(image.height ? [\n        image.height\n    ] : []).filter(Boolean)), ((_f = imageRef.current) === null || _f === void 0 ? void 0 : _f.naturalHeight) || 0);\n    const defaultStyle = maxWidth && maxHeight ? {\n        maxWidth: `min(${maxWidth}px, 100%)`,\n        maxHeight: `min(${maxHeight}px, 100%)`\n    } : {\n        maxWidth: \"100%\",\n        maxHeight: \"100%\"\n    };\n    const srcSet = (_g = image.srcSet) === null || _g === void 0 ? void 0 : _g.sort((a, b)=>a.width - b.width).map((item)=>`${item.src} ${item.width}w`).join(\", \");\n    const estimateActualWidth = ()=>rect && !cover && image.width && image.height ? rect.height / image.height * image.width : Number.MAX_VALUE;\n    const sizes = srcSet && rect && hasWindow() ? `${Math.round(Math.min(estimateActualWidth(), rect.width))}px` : undefined;\n    const { style: imagePropsStyle, className: imagePropsClassName, ...restImageProps } = imageProps || {};\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", {\n        ref: setImageRef,\n        onLoad: handleOnLoad,\n        onError: handleOnError,\n        onClick: onClick,\n        draggable: false,\n        className: clsx(cssClass(slideImagePrefix()), cover && cssClass(slideImagePrefix(\"cover\")), status !== _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_COMPLETE && cssClass(slideImagePrefix(\"loading\")), imagePropsClassName),\n        style: {\n            ...defaultStyle,\n            ...style,\n            ...imagePropsStyle\n        },\n        ...restImageProps,\n        alt: image.alt,\n        sizes: sizes,\n        srcSet: srcSet,\n        src: image.src\n    }), status !== _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_COMPLETE && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: cssClass(slidePrefix(_types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_PLACEHOLDER))\n    }, status === _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_LOADING && ((render === null || render === void 0 ? void 0 : render.iconLoading) ? render.iconLoading() : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LoadingIcon, {\n        className: clsx(cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.ELEMENT_ICON), cssClass(slidePrefix(_types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_LOADING)))\n    })), status === _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_ERROR && ((render === null || render === void 0 ? void 0 : render.iconError) ? render.iconError() : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorIcon, {\n        className: clsx(cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.ELEMENT_ICON), cssClass(slidePrefix(_types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_ERROR)))\n    }))));\n}\nconst LightboxRoot = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function LightboxRoot({ className, children, ...rest }, ref) {\n    const nodeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DocumentContextProvider, {\n        nodeRef: nodeRef\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: useForkRef(ref, nodeRef),\n        className: clsx(cssClass(\"root\"), className),\n        ...rest\n    }, children));\n});\nvar SwipeState;\n(function(SwipeState) {\n    SwipeState[SwipeState[\"NONE\"] = 0] = \"NONE\";\n    SwipeState[SwipeState[\"SWIPE\"] = 1] = \"SWIPE\";\n    SwipeState[SwipeState[\"PULL\"] = 2] = \"PULL\";\n    SwipeState[SwipeState[\"ANIMATION\"] = 3] = \"ANIMATION\";\n})(SwipeState || (SwipeState = {}));\nfunction usePointerEvents(subscribeSensors, onPointerDown, onPointerMove, onPointerUp, disabled) {\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>!disabled ? cleanup(subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_DOWN, onPointerDown), subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_MOVE, onPointerMove), subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_UP, onPointerUp), subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_LEAVE, onPointerUp), subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_CANCEL, onPointerUp)) : ()=>{}, [\n        subscribeSensors,\n        onPointerDown,\n        onPointerMove,\n        onPointerUp,\n        disabled\n    ]);\n}\nvar Gesture;\n(function(Gesture) {\n    Gesture[Gesture[\"NONE\"] = 0] = \"NONE\";\n    Gesture[Gesture[\"SWIPE\"] = 1] = \"SWIPE\";\n    Gesture[Gesture[\"PULL\"] = 2] = \"PULL\";\n})(Gesture || (Gesture = {}));\nconst SWIPE_THRESHOLD = 30;\nfunction usePointerSwipe(subscribeSensors, isSwipeValid, containerWidth, swipeAnimationDuration, onSwipeStart, onSwipeProgress, onSwipeFinish, onSwipeCancel, pullUpEnabled, pullDownEnabled, onPullStart, onPullProgress, onPullFinish, onPullCancel) {\n    const offset = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const pointers = react__WEBPACK_IMPORTED_MODULE_0__.useRef([]);\n    const activePointer = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const startTime = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const gesture = react__WEBPACK_IMPORTED_MODULE_0__.useRef(Gesture.NONE);\n    const clearPointer = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event)=>{\n        if (activePointer.current === event.pointerId) {\n            activePointer.current = undefined;\n            gesture.current = Gesture.NONE;\n        }\n        const currentPointers = pointers.current;\n        currentPointers.splice(0, currentPointers.length, ...currentPointers.filter((p)=>p.pointerId !== event.pointerId));\n    }, []);\n    const addPointer = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event)=>{\n        clearPointer(event);\n        event.persist();\n        pointers.current.push(event);\n    }, [\n        clearPointer\n    ]);\n    const onPointerDown = useEventCallback((event)=>{\n        addPointer(event);\n    });\n    const exceedsPullThreshold = (value, threshold)=>pullDownEnabled && value > threshold || pullUpEnabled && value < -threshold;\n    const onPointerUp = useEventCallback((event)=>{\n        if (pointers.current.find((x)=>x.pointerId === event.pointerId) && activePointer.current === event.pointerId) {\n            const duration = Date.now() - startTime.current;\n            const currentOffset = offset.current;\n            if (gesture.current === Gesture.SWIPE) {\n                if (Math.abs(currentOffset) > 0.3 * containerWidth || Math.abs(currentOffset) > 5 && duration < swipeAnimationDuration) {\n                    onSwipeFinish(currentOffset, duration);\n                } else {\n                    onSwipeCancel(currentOffset);\n                }\n            } else if (gesture.current === Gesture.PULL) {\n                if (exceedsPullThreshold(currentOffset, 2 * SWIPE_THRESHOLD)) {\n                    onPullFinish(currentOffset, duration);\n                } else {\n                    onPullCancel(currentOffset);\n                }\n            }\n            offset.current = 0;\n            gesture.current = Gesture.NONE;\n        }\n        clearPointer(event);\n    });\n    const onPointerMove = useEventCallback((event)=>{\n        const pointer = pointers.current.find((p)=>p.pointerId === event.pointerId);\n        if (pointer) {\n            const isCurrentPointer = activePointer.current === event.pointerId;\n            if (event.buttons === 0) {\n                if (isCurrentPointer && offset.current !== 0) {\n                    onPointerUp(event);\n                } else {\n                    clearPointer(pointer);\n                }\n                return;\n            }\n            const deltaX = event.clientX - pointer.clientX;\n            const deltaY = event.clientY - pointer.clientY;\n            if (activePointer.current === undefined) {\n                const startGesture = (newGesture)=>{\n                    addPointer(event);\n                    activePointer.current = event.pointerId;\n                    startTime.current = Date.now();\n                    gesture.current = newGesture;\n                };\n                if (Math.abs(deltaX) > Math.abs(deltaY) && Math.abs(deltaX) > SWIPE_THRESHOLD && isSwipeValid(deltaX)) {\n                    startGesture(Gesture.SWIPE);\n                    onSwipeStart();\n                } else if (Math.abs(deltaY) > Math.abs(deltaX) && exceedsPullThreshold(deltaY, SWIPE_THRESHOLD)) {\n                    startGesture(Gesture.PULL);\n                    onPullStart();\n                }\n            } else if (isCurrentPointer) {\n                if (gesture.current === Gesture.SWIPE) {\n                    offset.current = deltaX;\n                    onSwipeProgress(deltaX);\n                } else if (gesture.current === Gesture.PULL) {\n                    offset.current = deltaY;\n                    onPullProgress(deltaY);\n                }\n            }\n        }\n    });\n    usePointerEvents(subscribeSensors, onPointerDown, onPointerMove, onPointerUp);\n}\nfunction usePreventWheelDefaults({ preventDefaultWheelX, preventDefaultWheelY }) {\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const listener = useEventCallback((event)=>{\n        const horizontal = Math.abs(event.deltaX) > Math.abs(event.deltaY);\n        if (horizontal && preventDefaultWheelX || !horizontal && preventDefaultWheelY || event.ctrlKey) {\n            event.preventDefault();\n        }\n    });\n    return react__WEBPACK_IMPORTED_MODULE_0__.useCallback((node)=>{\n        var _a;\n        if (node) {\n            node.addEventListener(\"wheel\", listener, {\n                passive: false\n            });\n        } else {\n            (_a = ref.current) === null || _a === void 0 ? void 0 : _a.removeEventListener(\"wheel\", listener);\n        }\n        ref.current = node;\n    }, [\n        listener\n    ]);\n}\nfunction useWheelSwipe(swipeState, subscribeSensors, isSwipeValid, containerWidth, swipeAnimationDuration, onSwipeStart, onSwipeProgress, onSwipeFinish, onSwipeCancel) {\n    const offset = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const intent = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const intentCleanup = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const resetCleanup = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const wheelResidualMomentum = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const startTime = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const { setTimeout, clearTimeout } = useTimeouts();\n    const cancelSwipeIntentCleanup = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        if (intentCleanup.current) {\n            clearTimeout(intentCleanup.current);\n            intentCleanup.current = undefined;\n        }\n    }, [\n        clearTimeout\n    ]);\n    const cancelSwipeResetCleanup = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        if (resetCleanup.current) {\n            clearTimeout(resetCleanup.current);\n            resetCleanup.current = undefined;\n        }\n    }, [\n        clearTimeout\n    ]);\n    const handleCleanup = useEventCallback(()=>{\n        if (swipeState !== SwipeState.SWIPE) {\n            offset.current = 0;\n            startTime.current = 0;\n            cancelSwipeIntentCleanup();\n            cancelSwipeResetCleanup();\n        }\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(handleCleanup, [\n        swipeState,\n        handleCleanup\n    ]);\n    const handleCancelSwipe = useEventCallback((currentSwipeOffset)=>{\n        resetCleanup.current = undefined;\n        if (offset.current === currentSwipeOffset) {\n            onSwipeCancel(offset.current);\n        }\n    });\n    const onWheel = useEventCallback((event)=>{\n        if (event.ctrlKey) {\n            return;\n        }\n        if (Math.abs(event.deltaY) > Math.abs(event.deltaX)) {\n            return;\n        }\n        if (swipeState === SwipeState.NONE) {\n            if (Math.abs(event.deltaX) <= 1.2 * Math.abs(wheelResidualMomentum.current)) {\n                wheelResidualMomentum.current = event.deltaX;\n                return;\n            }\n            if (!isSwipeValid(-event.deltaX)) {\n                return;\n            }\n            intent.current += event.deltaX;\n            cancelSwipeIntentCleanup();\n            if (Math.abs(intent.current) > 30) {\n                intent.current = 0;\n                wheelResidualMomentum.current = 0;\n                startTime.current = Date.now();\n                onSwipeStart();\n            } else {\n                const currentSwipeIntent = intent.current;\n                intentCleanup.current = setTimeout(()=>{\n                    intentCleanup.current = undefined;\n                    if (currentSwipeIntent === intent.current) {\n                        intent.current = 0;\n                    }\n                }, swipeAnimationDuration);\n            }\n        } else if (swipeState === SwipeState.SWIPE) {\n            let newSwipeOffset = offset.current - event.deltaX;\n            newSwipeOffset = Math.min(Math.abs(newSwipeOffset), containerWidth) * Math.sign(newSwipeOffset);\n            offset.current = newSwipeOffset;\n            onSwipeProgress(newSwipeOffset);\n            cancelSwipeResetCleanup();\n            if (Math.abs(newSwipeOffset) > 0.2 * containerWidth) {\n                wheelResidualMomentum.current = event.deltaX;\n                onSwipeFinish(newSwipeOffset, Date.now() - startTime.current);\n                return;\n            }\n            resetCleanup.current = setTimeout(()=>handleCancelSwipe(newSwipeOffset), 2 * swipeAnimationDuration);\n        } else {\n            wheelResidualMomentum.current = event.deltaX;\n        }\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_WHEEL, onWheel), [\n        subscribeSensors,\n        onWheel\n    ]);\n}\nconst cssContainerPrefix = makeComposePrefix(\"container\");\nconst ControllerContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useController = makeUseContext(\"useController\", \"ControllerContext\", ControllerContext);\nfunction Controller({ children, ...props }) {\n    var _a;\n    const { carousel, animation, controller, on, styles, render } = props;\n    const { closeOnPullUp, closeOnPullDown, preventDefaultWheelX, preventDefaultWheelY } = controller;\n    const [toolbarWidth, setToolbarWidth] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const state = useLightboxState();\n    const dispatch = useLightboxDispatch();\n    const [swipeState, setSwipeState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(SwipeState.NONE);\n    const swipeOffset = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const pullOffset = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const pullOpacity = react__WEBPACK_IMPORTED_MODULE_0__.useRef(1);\n    const { registerSensors, subscribeSensors } = useSensors();\n    const { subscribe, publish } = useEvents();\n    const cleanupAnimationIncrement = useDelay();\n    const cleanupSwipeOffset = useDelay();\n    const cleanupPullOffset = useDelay();\n    const { containerRef, setContainerRef, containerRect } = useContainerRect();\n    const handleContainerRef = useForkRef(usePreventWheelDefaults({\n        preventDefaultWheelX,\n        preventDefaultWheelY\n    }), setContainerRef);\n    const carouselRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const setCarouselRef = useForkRef(carouselRef, undefined);\n    const { getOwnerDocument } = useDocumentContext();\n    const isRTL = useRTL();\n    const rtl = (value)=>(isRTL ? -1 : 1) * (typeof value === \"number\" ? value : 1);\n    const focus = useEventCallback(()=>{\n        var _a;\n        return (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    });\n    const getLightboxProps = useEventCallback(()=>props);\n    const getLightboxState = useEventCallback(()=>state);\n    const prev = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((params)=>publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV, params), [\n        publish\n    ]);\n    const next = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((params)=>publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT, params), [\n        publish\n    ]);\n    const close = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_CLOSE), [\n        publish\n    ]);\n    const isSwipeValid = (offset)=>!(carousel.finite && (rtl(offset) > 0 && state.currentIndex === 0 || rtl(offset) < 0 && state.currentIndex === state.slides.length - 1));\n    const setSwipeOffset = (offset)=>{\n        var _a;\n        swipeOffset.current = offset;\n        (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.style.setProperty(cssVar(\"swipe_offset\"), `${Math.round(offset)}px`);\n    };\n    const setPullOffset = (offset)=>{\n        var _a, _b;\n        pullOffset.current = offset;\n        pullOpacity.current = (()=>{\n            const threshold = 60;\n            const minOpacity = 0.5;\n            const offsetValue = (()=>{\n                if (closeOnPullDown && offset > 0) return offset;\n                if (closeOnPullUp && offset < 0) return -offset;\n                return 0;\n            })();\n            return Math.min(Math.max(round(1 - offsetValue / threshold * (1 - minOpacity), 2), minOpacity), 1);\n        })();\n        (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.style.setProperty(cssVar(\"pull_offset\"), `${Math.round(offset)}px`);\n        (_b = containerRef.current) === null || _b === void 0 ? void 0 : _b.style.setProperty(cssVar(\"pull_opacity\"), `${pullOpacity.current}`);\n    };\n    const { prepareAnimation: preparePullAnimation } = useAnimation(carouselRef, (snapshot, rect, translate)=>{\n        if (carouselRef.current && containerRect) {\n            return {\n                keyframes: [\n                    {\n                        transform: `translate(0, ${snapshot.rect.y - rect.y + translate.y}px)`,\n                        opacity: snapshot.opacity\n                    },\n                    {\n                        transform: \"translate(0, 0)\",\n                        opacity: 1\n                    }\n                ],\n                duration: snapshot.duration,\n                easing: animation.easing.fade\n            };\n        }\n        return undefined;\n    });\n    const pull = (offset, cancel)=>{\n        if (closeOnPullUp || closeOnPullDown) {\n            setPullOffset(offset);\n            let duration = 0;\n            if (carouselRef.current) {\n                duration = animation.fade * (cancel ? 2 : 1);\n                preparePullAnimation({\n                    rect: carouselRef.current.getBoundingClientRect(),\n                    opacity: pullOpacity.current,\n                    duration\n                });\n            }\n            cleanupPullOffset(()=>{\n                setPullOffset(0);\n                setSwipeState(SwipeState.NONE);\n            }, duration);\n            setSwipeState(SwipeState.ANIMATION);\n            if (!cancel) {\n                close();\n            }\n        }\n    };\n    const { prepareAnimation, isAnimationPlaying } = useAnimation(carouselRef, (snapshot, rect, translate)=>{\n        var _a;\n        if (carouselRef.current && containerRect && ((_a = state.animation) === null || _a === void 0 ? void 0 : _a.duration)) {\n            const parsedSpacing = parseLengthPercentage(carousel.spacing);\n            const spacingValue = (parsedSpacing.percent ? parsedSpacing.percent * containerRect.width / 100 : parsedSpacing.pixel) || 0;\n            return {\n                keyframes: [\n                    {\n                        transform: `translate(${rtl(state.globalIndex - snapshot.index) * (containerRect.width + spacingValue) + snapshot.rect.x - rect.x + translate.x}px, 0)`\n                    },\n                    {\n                        transform: \"translate(0, 0)\"\n                    }\n                ],\n                duration: state.animation.duration,\n                easing: state.animation.easing\n            };\n        }\n        return undefined;\n    });\n    const swipe = useEventCallback((action)=>{\n        var _a, _b;\n        const currentSwipeOffset = action.offset || 0;\n        const swipeDuration = !currentSwipeOffset ? (_a = animation.navigation) !== null && _a !== void 0 ? _a : animation.swipe : animation.swipe;\n        const swipeEasing = !currentSwipeOffset && !isAnimationPlaying() ? animation.easing.navigation : animation.easing.swipe;\n        let { direction } = action;\n        const count = (_b = action.count) !== null && _b !== void 0 ? _b : 1;\n        let newSwipeState = SwipeState.ANIMATION;\n        let newSwipeAnimationDuration = swipeDuration * count;\n        if (!direction) {\n            const containerWidth = containerRect === null || containerRect === void 0 ? void 0 : containerRect.width;\n            const elapsedTime = action.duration || 0;\n            const expectedTime = containerWidth ? swipeDuration / containerWidth * Math.abs(currentSwipeOffset) : swipeDuration;\n            if (count !== 0) {\n                if (elapsedTime < expectedTime) {\n                    newSwipeAnimationDuration = newSwipeAnimationDuration / expectedTime * Math.max(elapsedTime, expectedTime / 5);\n                } else if (containerWidth) {\n                    newSwipeAnimationDuration = swipeDuration / containerWidth * (containerWidth - Math.abs(currentSwipeOffset));\n                }\n                direction = rtl(currentSwipeOffset) > 0 ? _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV : _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT;\n            } else {\n                newSwipeAnimationDuration = swipeDuration / 2;\n            }\n        }\n        let increment = 0;\n        if (direction === _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV) {\n            if (isSwipeValid(rtl(1))) {\n                increment = -count;\n            } else {\n                newSwipeState = SwipeState.NONE;\n                newSwipeAnimationDuration = swipeDuration;\n            }\n        } else if (direction === _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT) {\n            if (isSwipeValid(rtl(-1))) {\n                increment = count;\n            } else {\n                newSwipeState = SwipeState.NONE;\n                newSwipeAnimationDuration = swipeDuration;\n            }\n        }\n        newSwipeAnimationDuration = Math.round(newSwipeAnimationDuration);\n        cleanupSwipeOffset(()=>{\n            setSwipeOffset(0);\n            setSwipeState(SwipeState.NONE);\n        }, newSwipeAnimationDuration);\n        if (carouselRef.current) {\n            prepareAnimation({\n                rect: carouselRef.current.getBoundingClientRect(),\n                index: state.globalIndex\n            });\n        }\n        setSwipeState(newSwipeState);\n        publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_SWIPE, {\n            type: \"swipe\",\n            increment,\n            duration: newSwipeAnimationDuration,\n            easing: swipeEasing\n        });\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        var _a, _b;\n        if (((_a = state.animation) === null || _a === void 0 ? void 0 : _a.increment) && ((_b = state.animation) === null || _b === void 0 ? void 0 : _b.duration)) {\n            cleanupAnimationIncrement(()=>dispatch({\n                    type: \"swipe\",\n                    increment: 0\n                }), state.animation.duration);\n        }\n    }, [\n        state.animation,\n        dispatch,\n        cleanupAnimationIncrement\n    ]);\n    const swipeParams = [\n        subscribeSensors,\n        isSwipeValid,\n        (containerRect === null || containerRect === void 0 ? void 0 : containerRect.width) || 0,\n        animation.swipe,\n        ()=>setSwipeState(SwipeState.SWIPE),\n        (offset)=>setSwipeOffset(offset),\n        (offset, duration)=>swipe({\n                offset,\n                duration,\n                count: 1\n            }),\n        (offset)=>swipe({\n                offset,\n                count: 0\n            })\n    ];\n    const pullParams = [\n        ()=>{\n            if (closeOnPullDown) {\n                setSwipeState(SwipeState.PULL);\n            }\n        },\n        (offset)=>setPullOffset(offset),\n        (offset)=>pull(offset),\n        (offset)=>pull(offset, true)\n    ];\n    usePointerSwipe(...swipeParams, closeOnPullUp, closeOnPullDown, ...pullParams);\n    useWheelSwipe(swipeState, ...swipeParams);\n    const focusOnMount = useEventCallback(()=>{\n        if (controller.focus && getOwnerDocument().querySelector(`.${cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_PORTAL)} .${cssClass(cssContainerPrefix())}`)) {\n            focus();\n        }\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(focusOnMount, [\n        focusOnMount\n    ]);\n    const onViewCallback = useEventCallback(()=>{\n        var _a;\n        (_a = on.view) === null || _a === void 0 ? void 0 : _a.call(on, {\n            index: state.currentIndex\n        });\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(onViewCallback, [\n        state.globalIndex,\n        onViewCallback\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>cleanup(subscribe(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV, (action)=>swipe({\n                direction: _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV,\n                ...action\n            })), subscribe(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT, (action)=>swipe({\n                direction: _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT,\n                ...action\n            })), subscribe(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_SWIPE, (action)=>dispatch(action))), [\n        subscribe,\n        swipe,\n        dispatch\n    ]);\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>({\n            prev,\n            next,\n            close,\n            focus,\n            slideRect: containerRect ? computeSlideRect(containerRect, carousel.padding) : {\n                width: 0,\n                height: 0\n            },\n            containerRect: containerRect || {\n                width: 0,\n                height: 0\n            },\n            subscribeSensors,\n            containerRef,\n            setCarouselRef,\n            toolbarWidth,\n            setToolbarWidth\n        }), [\n        prev,\n        next,\n        close,\n        focus,\n        subscribeSensors,\n        containerRect,\n        containerRef,\n        setCarouselRef,\n        toolbarWidth,\n        setToolbarWidth,\n        carousel.padding\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle(controller.ref, ()=>({\n            prev,\n            next,\n            close,\n            focus,\n            getLightboxProps,\n            getLightboxState\n        }), [\n        prev,\n        next,\n        close,\n        focus,\n        getLightboxProps,\n        getLightboxState\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: handleContainerRef,\n        className: clsx(cssClass(cssContainerPrefix()), cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FLEX_CENTER)),\n        style: {\n            ...swipeState === SwipeState.SWIPE ? {\n                [cssVar(\"swipe_offset\")]: `${Math.round(swipeOffset.current)}px`\n            } : null,\n            ...swipeState === SwipeState.PULL ? {\n                [cssVar(\"pull_offset\")]: `${Math.round(pullOffset.current)}px`,\n                [cssVar(\"pull_opacity\")]: `${pullOpacity.current}`\n            } : null,\n            ...controller.touchAction !== \"none\" ? {\n                [cssVar(\"controller_touch_action\")]: controller.touchAction\n            } : null,\n            ...styles.container\n        },\n        ...controller.aria ? {\n            role: \"presentation\",\n            \"aria-live\": \"polite\"\n        } : null,\n        tabIndex: -1,\n        ...registerSensors\n    }, containerRect && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ControllerContext.Provider, {\n        value: context\n    }, children, (_a = render.controls) === null || _a === void 0 ? void 0 : _a.call(render)));\n}\nconst ControllerModule = createModule(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_CONTROLLER, Controller);\nfunction cssPrefix$2(value) {\n    return composePrefix(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_CAROUSEL, value);\n}\nfunction cssSlidePrefix(value) {\n    return composePrefix(\"slide\", value);\n}\nfunction CarouselSlide({ slide, offset }) {\n    const containerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const { currentIndex } = useLightboxState();\n    const { slideRect, close } = useController();\n    const { render, carousel: { imageFit, imageProps }, on: { click: onClick }, controller: { closeOnBackdropClick }, styles: { slide: style } } = useLightboxProps();\n    const renderSlide = ()=>{\n        var _a, _b, _c, _d;\n        let rendered = (_a = render.slide) === null || _a === void 0 ? void 0 : _a.call(render, {\n            slide,\n            offset,\n            rect: slideRect\n        });\n        if (!rendered && isImageSlide(slide)) {\n            rendered = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ImageSlide, {\n                slide: slide,\n                offset: offset,\n                render: render,\n                rect: slideRect,\n                imageFit: imageFit,\n                imageProps: imageProps,\n                onClick: offset === 0 ? ()=>onClick === null || onClick === void 0 ? void 0 : onClick({\n                        index: currentIndex\n                    }) : undefined\n            });\n        }\n        return rendered ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (_b = render.slideHeader) === null || _b === void 0 ? void 0 : _b.call(render, {\n            slide\n        }), ((_c = render.slideContainer) !== null && _c !== void 0 ? _c : ({ children })=>children)({\n            slide,\n            children: rendered\n        }), (_d = render.slideFooter) === null || _d === void 0 ? void 0 : _d.call(render, {\n            slide\n        })) : null;\n    };\n    const handleBackdropClick = (event)=>{\n        const container = containerRef.current;\n        const target = event.target instanceof HTMLElement ? event.target : undefined;\n        if (closeOnBackdropClick && target && container && (target === container || Array.from(container.children).find((x)=>x === target) && target.classList.contains(cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_SLIDE_WRAPPER)))) {\n            close();\n        }\n    };\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: containerRef,\n        className: clsx(cssClass(cssSlidePrefix()), offset === 0 && cssClass(cssSlidePrefix(\"current\")), cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FLEX_CENTER)),\n        \"aria-hidden\": offset !== 0,\n        onClick: handleBackdropClick,\n        style: style\n    }, renderSlide());\n}\nfunction Placeholder() {\n    const style = useLightboxProps().styles.slide;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: cssClass(\"slide\"),\n        style: style\n    });\n}\nfunction Carousel({ carousel }) {\n    const { slides, currentIndex, globalIndex } = useLightboxState();\n    const { setCarouselRef } = useController();\n    const spacingValue = parseLengthPercentage(carousel.spacing);\n    const paddingValue = parseLengthPercentage(carousel.padding);\n    const preload = calculatePreload(carousel, slides, 1);\n    const items = [];\n    if (hasSlides(slides)) {\n        for(let index = currentIndex - preload; index <= currentIndex + preload; index += 1){\n            const slide = getSlide(slides, index);\n            const key = globalIndex - currentIndex + index;\n            const placeholder = carousel.finite && (index < 0 || index > slides.length - 1);\n            items.push(!placeholder ? {\n                key: [\n                    `${key}`,\n                    getSlideKey(slide)\n                ].filter(Boolean).join(\"|\"),\n                offset: index - currentIndex,\n                slide\n            } : {\n                key\n            });\n        }\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: setCarouselRef,\n        className: clsx(cssClass(cssPrefix$2()), items.length > 0 && cssClass(cssPrefix$2(\"with_slides\"))),\n        style: {\n            [`${cssVar(cssPrefix$2(\"slides_count\"))}`]: items.length,\n            [`${cssVar(cssPrefix$2(\"spacing_px\"))}`]: spacingValue.pixel || 0,\n            [`${cssVar(cssPrefix$2(\"spacing_percent\"))}`]: spacingValue.percent || 0,\n            [`${cssVar(cssPrefix$2(\"padding_px\"))}`]: paddingValue.pixel || 0,\n            [`${cssVar(cssPrefix$2(\"padding_percent\"))}`]: paddingValue.percent || 0\n        }\n    }, items.map(({ key, slide, offset })=>slide ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CarouselSlide, {\n            key: key,\n            slide: slide,\n            offset: offset\n        }) : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Placeholder, {\n            key: key\n        })));\n}\nconst CarouselModule = createModule(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_CAROUSEL, Carousel);\nfunction useNavigationState() {\n    const { carousel } = useLightboxProps();\n    const { slides, currentIndex } = useLightboxState();\n    const prevDisabled = slides.length === 0 || carousel.finite && currentIndex === 0;\n    const nextDisabled = slides.length === 0 || carousel.finite && currentIndex === slides.length - 1;\n    return {\n        prevDisabled,\n        nextDisabled\n    };\n}\nfunction useKeyboardNavigation(subscribeSensors) {\n    var _a;\n    const isRTL = useRTL();\n    const { publish } = useEvents();\n    const { animation } = useLightboxProps();\n    const { prevDisabled, nextDisabled } = useNavigationState();\n    const throttle = ((_a = animation.navigation) !== null && _a !== void 0 ? _a : animation.swipe) / 2;\n    const prev = useThrottle(()=>publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV), throttle);\n    const next = useThrottle(()=>publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT), throttle);\n    const handleKeyDown = useEventCallback((event)=>{\n        switch(event.key){\n            case _types_js__WEBPACK_IMPORTED_MODULE_2__.VK_ESCAPE:\n                publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_CLOSE);\n                break;\n            case _types_js__WEBPACK_IMPORTED_MODULE_2__.VK_ARROW_LEFT:\n                if (!(isRTL ? nextDisabled : prevDisabled)) (isRTL ? next : prev)();\n                break;\n            case _types_js__WEBPACK_IMPORTED_MODULE_2__.VK_ARROW_RIGHT:\n                if (!(isRTL ? prevDisabled : nextDisabled)) (isRTL ? prev : next)();\n                break;\n            default:\n        }\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_KEY_DOWN, handleKeyDown), [\n        subscribeSensors,\n        handleKeyDown\n    ]);\n}\nfunction NavigationButton({ label, icon, renderIcon, action, onClick, disabled, style }) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(IconButton, {\n        label: label,\n        icon: icon,\n        renderIcon: renderIcon,\n        className: cssClass(`navigation_${action}`),\n        disabled: disabled,\n        onClick: onClick,\n        style: style,\n        ...useLoseFocus(useController().focus, disabled)\n    });\n}\nfunction Navigation({ render: { buttonPrev, buttonNext, iconPrev, iconNext }, styles }) {\n    const { prev, next, subscribeSensors } = useController();\n    const { prevDisabled, nextDisabled } = useNavigationState();\n    useKeyboardNavigation(subscribeSensors);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, buttonPrev ? buttonPrev() : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NavigationButton, {\n        label: \"Previous\",\n        action: _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV,\n        icon: PreviousIcon,\n        renderIcon: iconPrev,\n        style: styles.navigationPrev,\n        disabled: prevDisabled,\n        onClick: prev\n    }), buttonNext ? buttonNext() : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NavigationButton, {\n        label: \"Next\",\n        action: _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT,\n        icon: NextIcon,\n        renderIcon: iconNext,\n        style: styles.navigationNext,\n        disabled: nextDisabled,\n        onClick: next\n    }));\n}\nconst NavigationModule = createModule(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_NAVIGATION, Navigation);\nconst noScroll = cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_NO_SCROLL);\nconst noScrollPadding = cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_NO_SCROLL_PADDING);\nfunction isHTMLElement(element) {\n    return \"style\" in element;\n}\nfunction padScrollbar(element, padding, rtl) {\n    const styles = window.getComputedStyle(element);\n    const property = rtl ? \"padding-left\" : \"padding-right\";\n    const computedValue = rtl ? styles.paddingLeft : styles.paddingRight;\n    const originalValue = element.style.getPropertyValue(property);\n    element.style.setProperty(property, `${(parseInt(computedValue) || 0) + padding}px`);\n    return ()=>{\n        if (originalValue) {\n            element.style.setProperty(property, originalValue);\n        } else {\n            element.style.removeProperty(property);\n        }\n    };\n}\nfunction NoScroll({ noScroll: { disabled }, children }) {\n    const rtl = useRTL();\n    const { getOwnerDocument, getOwnerWindow } = useDocumentContext();\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (disabled) return ()=>{};\n        const cleanup = [];\n        const ownerWindow = getOwnerWindow();\n        const { body, documentElement } = getOwnerDocument();\n        const scrollbar = Math.round(ownerWindow.innerWidth - documentElement.clientWidth);\n        if (scrollbar > 0) {\n            cleanup.push(padScrollbar(body, scrollbar, rtl));\n            const elements = body.getElementsByTagName(\"*\");\n            for(let i = 0; i < elements.length; i += 1){\n                const element = elements[i];\n                if (isHTMLElement(element) && ownerWindow.getComputedStyle(element).getPropertyValue(\"position\") === \"fixed\" && !element.classList.contains(noScrollPadding)) {\n                    cleanup.push(padScrollbar(element, scrollbar, rtl));\n                }\n            }\n        }\n        body.classList.add(noScroll);\n        return ()=>{\n            body.classList.remove(noScroll);\n            cleanup.forEach((clean)=>clean());\n        };\n    }, [\n        rtl,\n        disabled,\n        getOwnerDocument,\n        getOwnerWindow\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children);\n}\nconst NoScrollModule = createModule(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_NO_SCROLL, NoScroll);\nfunction cssPrefix$1(value) {\n    return composePrefix(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_PORTAL, value);\n}\nfunction setAttribute(element, attribute, value) {\n    const previousValue = element.getAttribute(attribute);\n    element.setAttribute(attribute, value);\n    return ()=>{\n        if (previousValue) {\n            element.setAttribute(attribute, previousValue);\n        } else {\n            element.removeAttribute(attribute);\n        }\n    };\n}\nfunction Portal({ children, animation, styles, className, on, portal, close }) {\n    const [mounted, setMounted] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const [visible, setVisible] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const cleanup = react__WEBPACK_IMPORTED_MODULE_0__.useRef([]);\n    const restoreFocus = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const { setTimeout } = useTimeouts();\n    const { subscribe } = useEvents();\n    const reduceMotion = useMotionPreference();\n    const animationDuration = !reduceMotion ? animation.fade : 0;\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        setMounted(true);\n        return ()=>{\n            setMounted(false);\n            setVisible(false);\n        };\n    }, []);\n    const handleCleanup = useEventCallback(()=>{\n        cleanup.current.forEach((clean)=>clean());\n        cleanup.current = [];\n    });\n    const handleClose = useEventCallback(()=>{\n        var _a;\n        setVisible(false);\n        handleCleanup();\n        (_a = on.exiting) === null || _a === void 0 ? void 0 : _a.call(on);\n        setTimeout(()=>{\n            var _a;\n            (_a = on.exited) === null || _a === void 0 ? void 0 : _a.call(on);\n            close();\n        }, animationDuration);\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>subscribe(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_CLOSE, handleClose), [\n        subscribe,\n        handleClose\n    ]);\n    const handleEnter = useEventCallback((node)=>{\n        var _a, _b, _c;\n        node.scrollTop;\n        setVisible(true);\n        (_a = on.entering) === null || _a === void 0 ? void 0 : _a.call(on);\n        const elements = (_c = (_b = node.parentNode) === null || _b === void 0 ? void 0 : _b.children) !== null && _c !== void 0 ? _c : [];\n        for(let i = 0; i < elements.length; i += 1){\n            const element = elements[i];\n            if ([\n                \"TEMPLATE\",\n                \"SCRIPT\",\n                \"STYLE\"\n            ].indexOf(element.tagName) === -1 && element !== node) {\n                cleanup.current.push(setAttribute(element, \"inert\", \"true\"));\n                cleanup.current.push(setAttribute(element, \"aria-hidden\", \"true\"));\n            }\n        }\n        cleanup.current.push(()=>{\n            var _a, _b;\n            (_b = (_a = restoreFocus.current) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n        });\n        setTimeout(()=>{\n            var _a;\n            (_a = on.entered) === null || _a === void 0 ? void 0 : _a.call(on);\n        }, animationDuration);\n    });\n    const handleRef = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((node)=>{\n        if (node) {\n            handleEnter(node);\n        } else {\n            handleCleanup();\n        }\n    }, [\n        handleEnter,\n        handleCleanup\n    ]);\n    return mounted ? /*#__PURE__*/ (0,react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal)(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LightboxRoot, {\n        ref: handleRef,\n        className: clsx(className, cssClass(cssPrefix$1()), cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_NO_SCROLL_PADDING), visible && cssClass(cssPrefix$1(\"open\"))),\n        role: \"presentation\",\n        \"aria-live\": \"polite\",\n        style: {\n            ...animation.fade !== LightboxDefaultProps.animation.fade ? {\n                [cssVar(\"fade_animation_duration\")]: `${animationDuration}ms`\n            } : null,\n            ...animation.easing.fade !== LightboxDefaultProps.animation.easing.fade ? {\n                [cssVar(\"fade_animation_timing_function\")]: animation.easing.fade\n            } : null,\n            ...styles.root\n        },\n        onFocus: (event)=>{\n            if (!restoreFocus.current) {\n                restoreFocus.current = event.relatedTarget;\n            }\n        }\n    }, children), portal.root || document.body) : null;\n}\nconst PortalModule = createModule(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_PORTAL, Portal);\nfunction Root({ children }) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children);\n}\nconst RootModule = createModule(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_ROOT, Root);\nfunction cssPrefix(value) {\n    return composePrefix(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_TOOLBAR, value);\n}\nfunction Toolbar({ toolbar: { buttons }, render: { buttonClose, iconClose }, styles }) {\n    const { close, setToolbarWidth } = useController();\n    const { setContainerRef, containerRect } = useContainerRect();\n    useLayoutEffect(()=>{\n        setToolbarWidth(containerRect === null || containerRect === void 0 ? void 0 : containerRect.width);\n    }, [\n        setToolbarWidth,\n        containerRect === null || containerRect === void 0 ? void 0 : containerRect.width\n    ]);\n    const renderCloseButton = ()=>{\n        if (buttonClose) return buttonClose();\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(IconButton, {\n            key: _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_CLOSE,\n            label: \"Close\",\n            icon: CloseIcon,\n            renderIcon: iconClose,\n            onClick: close\n        });\n    };\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: setContainerRef,\n        style: styles.toolbar,\n        className: cssClass(cssPrefix())\n    }, buttons === null || buttons === void 0 ? void 0 : buttons.map((button)=>button === _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_CLOSE ? renderCloseButton() : button));\n}\nconst ToolbarModule = createModule(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_TOOLBAR, Toolbar);\nfunction renderNode(node, props) {\n    var _a;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(node.module.component, {\n        key: node.module.name,\n        ...props\n    }, (_a = node.children) === null || _a === void 0 ? void 0 : _a.map((child)=>renderNode(child, props)));\n}\nfunction mergeAnimation(defaultAnimation, animation = {}) {\n    const { easing: defaultAnimationEasing, ...restDefaultAnimation } = defaultAnimation;\n    const { easing, ...restAnimation } = animation;\n    return {\n        easing: {\n            ...defaultAnimationEasing,\n            ...easing\n        },\n        ...restDefaultAnimation,\n        ...restAnimation\n    };\n}\nfunction Lightbox({ carousel, animation, render, toolbar, controller, noScroll, on, plugins, slides, index, ...restProps }) {\n    const { animation: defaultAnimation, carousel: defaultCarousel, render: defaultRender, toolbar: defaultToolbar, controller: defaultController, noScroll: defaultNoScroll, on: defaultOn, slides: defaultSlides, index: defaultIndex, plugins: defaultPlugins, ...restDefaultProps } = LightboxDefaultProps;\n    const { config, augmentation } = withPlugins([\n        createNode(PortalModule, [\n            createNode(NoScrollModule, [\n                createNode(ControllerModule, [\n                    createNode(CarouselModule),\n                    createNode(ToolbarModule),\n                    createNode(NavigationModule)\n                ])\n            ])\n        ])\n    ], plugins || defaultPlugins);\n    const props = augmentation({\n        animation: mergeAnimation(defaultAnimation, animation),\n        carousel: {\n            ...defaultCarousel,\n            ...carousel\n        },\n        render: {\n            ...defaultRender,\n            ...render\n        },\n        toolbar: {\n            ...defaultToolbar,\n            ...toolbar\n        },\n        controller: {\n            ...defaultController,\n            ...controller\n        },\n        noScroll: {\n            ...defaultNoScroll,\n            ...noScroll\n        },\n        on: {\n            ...defaultOn,\n            ...on\n        },\n        ...restDefaultProps,\n        ...restProps\n    });\n    if (!props.open) return null;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LightboxPropsProvider, {\n        ...props\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LightboxStateProvider, {\n        slides: slides || defaultSlides,\n        index: parseInt(index || defaultIndex)\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(TimeoutsProvider, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(EventsProvider, null, renderNode(createNode(RootModule, config), props)))));\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/captions/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/plugins/captions/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Captions)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/index.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../types.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/types.js\");\n\n\n\nconst cssPrefix = (className)=>(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(`slide_${className}`);\nconst defaultCaptionsProps = {\n    descriptionTextAlign: \"start\",\n    descriptionMaxLines: 3,\n    showToggle: false,\n    hidden: false\n};\nconst resolveCaptionsProps = (captions)=>({\n        ...defaultCaptionsProps,\n        ...captions\n    });\nfunction useCaptionsProps() {\n    const { captions } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    return resolveCaptionsProps(captions);\n}\nconst CaptionsContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useCaptions = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.makeUseContext)(\"useCaptions\", \"CaptionsContext\", CaptionsContext);\nfunction CaptionsContextProvider({ captions, children }) {\n    const { ref, hidden } = resolveCaptionsProps(captions);\n    const [visible, setVisible] = react__WEBPACK_IMPORTED_MODULE_0__.useState(!hidden);\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>({\n            visible,\n            show: ()=>setVisible(true),\n            hide: ()=>setVisible(false)\n        }), [\n        visible\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle(ref, ()=>context, [\n        context\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CaptionsContext.Provider, {\n        value: context\n    }, children);\n}\nfunction Title({ title }) {\n    const { toolbarWidth } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useController)();\n    const { styles } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    const { visible } = useCaptions();\n    if (!visible) return null;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        style: styles.captionsTitleContainer,\n        className: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.clsx)(cssPrefix(\"captions_container\"), cssPrefix(\"title_container\"))\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: cssPrefix(\"title\"),\n        style: {\n            ...toolbarWidth ? {\n                [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(\"toolbar_width\")]: `${toolbarWidth}px`\n            } : null,\n            ...styles.captionsTitle\n        }\n    }, title));\n}\nfunction Description({ description }) {\n    const { descriptionTextAlign, descriptionMaxLines } = useCaptionsProps();\n    const { styles } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    const { visible } = useCaptions();\n    if (!visible) return null;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        style: styles.captionsDescriptionContainer,\n        className: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.clsx)(cssPrefix(\"captions_container\"), cssPrefix(\"description_container\"))\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: cssPrefix(\"description\"),\n        style: {\n            ...descriptionTextAlign !== defaultCaptionsProps.descriptionTextAlign || descriptionMaxLines !== defaultCaptionsProps.descriptionMaxLines ? {\n                [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(\"slide_description_text_align\")]: descriptionTextAlign,\n                [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(\"slide_description_max_lines\")]: descriptionMaxLines\n            } : null,\n            ...styles.captionsDescription\n        }\n    }, typeof description === \"string\" ? description.split(\"\\n\").flatMap((line, index)=>[\n            ...index > 0 ? [\n                /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"br\", {\n                    key: index\n                })\n            ] : [],\n            line\n        ]) : description));\n}\nconst captionsIcon = ()=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        strokeWidth: 2,\n        stroke: \"currentColor\",\n        strokeLinejoin: \"round\",\n        fill: \"none\",\n        d: \"M3 5l18 0l0 14l-18 0l0-14z\"\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M7 15h3c.55 0 1-.45 1-1v-1H9.5v.5h-2v-3h2v.5H11v-1c0-.55-.45-1-1-1H7c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1zm7 0h3c.55 0 1-.45 1-1v-1h-1.5v.5h-2v-3h2v.5H18v-1c0-.55-.45-1-1-1h-3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1z\"\n    }));\nconst CaptionsVisible = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIcon)(\"CaptionsVisible\", captionsIcon());\nconst CaptionsHidden = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIconDisabled)(\"CaptionsVisible\", captionsIcon());\nfunction CaptionsButton() {\n    const { visible, show, hide } = useCaptions();\n    const { render } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    if (render.buttonCaptions) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, render.buttonCaptions({\n            visible,\n            show,\n            hide\n        }));\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.IconButton, {\n        label: visible ? \"Hide captions\" : \"Show captions\",\n        icon: visible ? CaptionsVisible : CaptionsHidden,\n        renderIcon: visible ? render.iconCaptionsVisible : render.iconCaptionsHidden,\n        onClick: visible ? hide : show\n    });\n}\nfunction Captions({ augment, addModule }) {\n    augment(({ captions: captionsProps, render: { slideFooter: renderFooter, ...restRender }, toolbar, ...restProps })=>{\n        const captions = resolveCaptionsProps(captionsProps);\n        return {\n            render: {\n                slideFooter: ({ slide })=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, renderFooter === null || renderFooter === void 0 ? void 0 : renderFooter({\n                        slide\n                    }), slide.title && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Title, {\n                        title: slide.title\n                    }), slide.description && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Description, {\n                        description: slide.description\n                    })),\n                ...restRender\n            },\n            toolbar: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addToolbarButton)(toolbar, _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_CAPTIONS, captions.showToggle ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CaptionsButton, null) : null),\n            captions,\n            ...restProps\n        };\n    });\n    addModule((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createModule)(_types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_CAPTIONS, CaptionsContextProvider));\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/captions/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/counter/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/plugins/counter/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Counter)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/index.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../types.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/types.js\");\n\n\n\nconst defaultCounterProps = {\n    separator: \"/\",\n    container: {}\n};\nconst resolveCounterProps = (counter)=>({\n        ...defaultCounterProps,\n        ...counter\n    });\nfunction CounterComponent({ counter }) {\n    const { slides, currentIndex } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxState)();\n    const { separator, container: { className, ...rest }, className: legacyClassName, ...legacyRest } = resolveCounterProps(counter);\n    if (slides.length === 0) return null;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.clsx)((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(\"counter\"), className || legacyClassName),\n        ...legacyRest,\n        ...rest\n    }, currentIndex + 1, \" \", separator, \" \", slides.length);\n}\nfunction Counter({ augment, addChild }) {\n    augment(({ counter, ...restProps })=>({\n            counter: resolveCounterProps(counter),\n            ...restProps\n        }));\n    addChild(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_CONTROLLER, (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createModule)(_types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_COUNTER, CounterComponent));\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveWV0LWFub3RoZXItcmVhY3QtbGlnaHRib3gvZGlzdC9wbHVnaW5zL2NvdW50ZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUErQjtBQUNpRDtBQUNiO0FBRW5FLE1BQU1PLHNCQUFzQjtJQUN4QkMsV0FBVztJQUNYQyxXQUFXLENBQUM7QUFDaEI7QUFDQSxNQUFNQyxzQkFBc0IsQ0FBQ0MsVUFBYTtRQUN0QyxHQUFHSixtQkFBbUI7UUFDdEIsR0FBR0ksT0FBTztJQUNkO0FBRUEsU0FBU0MsaUJBQWlCLEVBQUVELE9BQU8sRUFBRTtJQUNqQyxNQUFNLEVBQUVFLE1BQU0sRUFBRUMsWUFBWSxFQUFFLEdBQUdiLDJEQUFnQkE7SUFDakQsTUFBTSxFQUFFTyxTQUFTLEVBQUVDLFdBQVcsRUFBRU0sU0FBUyxFQUFFLEdBQUdDLE1BQU0sRUFBRUQsV0FBV0UsZUFBZSxFQUFFLEdBQUdDLFlBQVksR0FBR1Isb0JBQW9CQztJQUN4SCxJQUFJRSxPQUFPTSxNQUFNLEtBQUssR0FDbEIsT0FBTztJQUNYLHFCQUFRbkIsZ0RBQW1CLENBQUMsT0FBTztRQUFFZSxXQUFXYiwrQ0FBSUEsQ0FBQ0MsbURBQVFBLENBQUMsWUFBWVksYUFBYUU7UUFBa0IsR0FBR0MsVUFBVTtRQUFFLEdBQUdGLElBQUk7SUFBQyxHQUM1SEYsZUFBZSxHQUNmLEtBQ0FOLFdBQ0EsS0FDQUssT0FBT00sTUFBTTtBQUNyQjtBQUNBLFNBQVNFLFFBQVEsRUFBRUMsT0FBTyxFQUFFQyxRQUFRLEVBQUU7SUFDbENELFFBQVEsQ0FBQyxFQUFFWCxPQUFPLEVBQUUsR0FBR2EsV0FBVyxHQUFNO1lBQ3BDYixTQUFTRCxvQkFBb0JDO1lBQzdCLEdBQUdhLFNBQVM7UUFDaEI7SUFDQUQsU0FBU2xCLHdEQUFpQkEsRUFBRUQsdURBQVlBLENBQUNFLHFEQUFjQSxFQUFFTTtBQUM3RDtBQUU4QiIsInNvdXJjZXMiOlsid2VicGFjazovL2dnbWEvLi9ub2RlX21vZHVsZXMveWV0LWFub3RoZXItcmVhY3QtbGlnaHRib3gvZGlzdC9wbHVnaW5zL2NvdW50ZXIvaW5kZXguanM/M2Y0NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VMaWdodGJveFN0YXRlLCBjbHN4LCBjc3NDbGFzcywgY3JlYXRlTW9kdWxlIH0gZnJvbSAnLi4vLi4vaW5kZXguanMnO1xuaW1wb3J0IHsgTU9EVUxFX0NPTlRST0xMRVIsIFBMVUdJTl9DT1VOVEVSIH0gZnJvbSAnLi4vLi4vdHlwZXMuanMnO1xuXG5jb25zdCBkZWZhdWx0Q291bnRlclByb3BzID0ge1xuICAgIHNlcGFyYXRvcjogXCIvXCIsXG4gICAgY29udGFpbmVyOiB7fSxcbn07XG5jb25zdCByZXNvbHZlQ291bnRlclByb3BzID0gKGNvdW50ZXIpID0+ICh7XG4gICAgLi4uZGVmYXVsdENvdW50ZXJQcm9wcyxcbiAgICAuLi5jb3VudGVyLFxufSk7XG5cbmZ1bmN0aW9uIENvdW50ZXJDb21wb25lbnQoeyBjb3VudGVyIH0pIHtcbiAgICBjb25zdCB7IHNsaWRlcywgY3VycmVudEluZGV4IH0gPSB1c2VMaWdodGJveFN0YXRlKCk7XG4gICAgY29uc3QgeyBzZXBhcmF0b3IsIGNvbnRhaW5lcjogeyBjbGFzc05hbWUsIC4uLnJlc3QgfSwgY2xhc3NOYW1lOiBsZWdhY3lDbGFzc05hbWUsIC4uLmxlZ2FjeVJlc3QgfSA9IHJlc29sdmVDb3VudGVyUHJvcHMoY291bnRlcik7XG4gICAgaWYgKHNsaWRlcy5sZW5ndGggPT09IDApXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogY2xzeChjc3NDbGFzcyhcImNvdW50ZXJcIiksIGNsYXNzTmFtZSB8fCBsZWdhY3lDbGFzc05hbWUpLCAuLi5sZWdhY3lSZXN0LCAuLi5yZXN0IH0sXG4gICAgICAgIGN1cnJlbnRJbmRleCArIDEsXG4gICAgICAgIFwiIFwiLFxuICAgICAgICBzZXBhcmF0b3IsXG4gICAgICAgIFwiIFwiLFxuICAgICAgICBzbGlkZXMubGVuZ3RoKSk7XG59XG5mdW5jdGlvbiBDb3VudGVyKHsgYXVnbWVudCwgYWRkQ2hpbGQgfSkge1xuICAgIGF1Z21lbnQoKHsgY291bnRlciwgLi4ucmVzdFByb3BzIH0pID0+ICh7XG4gICAgICAgIGNvdW50ZXI6IHJlc29sdmVDb3VudGVyUHJvcHMoY291bnRlciksXG4gICAgICAgIC4uLnJlc3RQcm9wcyxcbiAgICB9KSk7XG4gICAgYWRkQ2hpbGQoTU9EVUxFX0NPTlRST0xMRVIsIGNyZWF0ZU1vZHVsZShQTFVHSU5fQ09VTlRFUiwgQ291bnRlckNvbXBvbmVudCkpO1xufVxuXG5leHBvcnQgeyBDb3VudGVyIGFzIGRlZmF1bHQgfTtcbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUxpZ2h0Ym94U3RhdGUiLCJjbHN4IiwiY3NzQ2xhc3MiLCJjcmVhdGVNb2R1bGUiLCJNT0RVTEVfQ09OVFJPTExFUiIsIlBMVUdJTl9DT1VOVEVSIiwiZGVmYXVsdENvdW50ZXJQcm9wcyIsInNlcGFyYXRvciIsImNvbnRhaW5lciIsInJlc29sdmVDb3VudGVyUHJvcHMiLCJjb3VudGVyIiwiQ291bnRlckNvbXBvbmVudCIsInNsaWRlcyIsImN1cnJlbnRJbmRleCIsImNsYXNzTmFtZSIsInJlc3QiLCJsZWdhY3lDbGFzc05hbWUiLCJsZWdhY3lSZXN0IiwibGVuZ3RoIiwiY3JlYXRlRWxlbWVudCIsIkNvdW50ZXIiLCJhdWdtZW50IiwiYWRkQ2hpbGQiLCJyZXN0UHJvcHMiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/counter/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/download/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/plugins/download/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Download)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/index.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../types.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/types.js\");\n\n\n\nconst defaultDownloadProps = {\n    download: undefined\n};\nconst resolveDownloadProps = (download)=>({\n        ...defaultDownloadProps,\n        ...download\n    });\nfunction download(url, name) {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url);\n    xhr.responseType = \"blob\";\n    xhr.onload = ()=>{\n        saveAs(xhr.response, name);\n    };\n    xhr.onerror = ()=>{\n        console.error(\"Failed to download file\");\n    };\n    xhr.send();\n}\nfunction corsEnabled(url) {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"HEAD\", url, false);\n    try {\n        xhr.send();\n    } catch (e) {}\n    return xhr.status >= 200 && xhr.status <= 299;\n}\nfunction click(link) {\n    try {\n        link.dispatchEvent(new MouseEvent(\"click\"));\n    } catch (e) {\n        const event = document.createEvent(\"MouseEvents\");\n        event.initMouseEvent(\"click\", true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null);\n        link.dispatchEvent(event);\n    }\n}\nfunction saveAs(source, name) {\n    const link = document.createElement(\"a\");\n    link.rel = \"noopener\";\n    link.download = name || \"\";\n    if (!link.download) {\n        link.target = \"_blank\";\n    }\n    if (typeof source === \"string\") {\n        link.href = source;\n        if (link.origin !== window.location.origin) {\n            if (corsEnabled(link.href)) {\n                download(source, name);\n            } else {\n                link.target = \"_blank\";\n                click(link);\n            }\n        } else {\n            click(link);\n        }\n    } else {\n        link.href = URL.createObjectURL(source);\n        setTimeout(()=>URL.revokeObjectURL(link.href), 30000);\n        setTimeout(()=>click(link), 0);\n    }\n}\nconst DownloadIcon = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIcon)(\"DownloadIcon\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M18 15v3H6v-3H4v3c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-3h-2zm-1-4-1.41-1.41L13 12.17V4h-2v8.17L8.41 9.59 7 11l5 5 5-5z\"\n}));\nfunction DownloadButton() {\n    const { render, on, download: downloadProps } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    const { download: customDownload } = resolveDownloadProps(downloadProps);\n    const { currentSlide, currentIndex } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxState)();\n    if (render.buttonDownload) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, render.buttonDownload());\n    }\n    const downloadUrl = currentSlide && (currentSlide.downloadUrl || typeof currentSlide.download === \"string\" && currentSlide.download || typeof currentSlide.download === \"object\" && currentSlide.download.url || (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.isImageSlide)(currentSlide) && currentSlide.src) || undefined;\n    const canDownload = customDownload ? (currentSlide === null || currentSlide === void 0 ? void 0 : currentSlide.download) !== false : Boolean(downloadUrl);\n    const defaultDownload = ()=>{\n        if (currentSlide && downloadUrl) {\n            const downloadFilename = currentSlide.downloadFilename || typeof currentSlide.download === \"object\" && currentSlide.download.filename || undefined;\n            saveAs(downloadUrl, downloadFilename);\n        }\n    };\n    const handleDownload = ()=>{\n        var _a;\n        if (currentSlide) {\n            (customDownload || defaultDownload)({\n                slide: currentSlide,\n                saveAs\n            });\n            (_a = on.download) === null || _a === void 0 ? void 0 : _a.call(on, {\n                index: currentIndex\n            });\n        }\n    };\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.IconButton, {\n        label: \"Download\",\n        icon: DownloadIcon,\n        renderIcon: render.iconDownload,\n        disabled: !canDownload,\n        onClick: handleDownload\n    });\n}\nfunction Download({ augment }) {\n    augment(({ toolbar, download, ...restProps })=>({\n            toolbar: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addToolbarButton)(toolbar, _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_DOWNLOAD, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DownloadButton, null)),\n            download: resolveDownloadProps(download),\n            ...restProps\n        }));\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/download/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/fullscreen/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/plugins/fullscreen/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Fullscreen)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/index.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../types.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/types.js\");\n\n\n\nconst defaultFullscreenProps = {\n    auto: false,\n    ref: null\n};\nconst resolveFullscreenProps = (fullscreen)=>({\n        ...defaultFullscreenProps,\n        ...fullscreen\n    });\nconst FullscreenContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useFullscreen = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.makeUseContext)(\"useFullscreen\", \"FullscreenContext\", FullscreenContext);\nfunction FullscreenContextProvider({ fullscreen: fullscreenProps, on, children }) {\n    const { auto, ref } = resolveFullscreenProps(fullscreenProps);\n    const containerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const [disabled, setDisabled] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const [fullscreen, setFullscreen] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const wasFullscreen = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const { getOwnerDocument } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useDocumentContext)();\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(()=>{\n        var _a, _b, _c, _d;\n        const ownerDocument = getOwnerDocument();\n        setDisabled(!((_d = (_c = (_b = (_a = ownerDocument.fullscreenEnabled) !== null && _a !== void 0 ? _a : ownerDocument.webkitFullscreenEnabled) !== null && _b !== void 0 ? _b : ownerDocument.mozFullScreenEnabled) !== null && _c !== void 0 ? _c : ownerDocument.msFullscreenEnabled) !== null && _d !== void 0 ? _d : false));\n    }, [\n        getOwnerDocument\n    ]);\n    const getFullscreenElement = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        var _a;\n        const ownerDocument = getOwnerDocument();\n        const fullscreenElement = ownerDocument.fullscreenElement || ownerDocument.webkitFullscreenElement || ownerDocument.mozFullScreenElement || ownerDocument.msFullscreenElement;\n        return ((_a = fullscreenElement === null || fullscreenElement === void 0 ? void 0 : fullscreenElement.shadowRoot) === null || _a === void 0 ? void 0 : _a.fullscreenElement) || fullscreenElement;\n    }, [\n        getOwnerDocument\n    ]);\n    const enter = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        const container = containerRef.current;\n        try {\n            if (container.requestFullscreen) {\n                container.requestFullscreen().catch(()=>{});\n            } else if (container.webkitRequestFullscreen) {\n                container.webkitRequestFullscreen();\n            } else if (container.mozRequestFullScreen) {\n                container.mozRequestFullScreen();\n            } else if (container.msRequestFullscreen) {\n                container.msRequestFullscreen();\n            }\n        } catch (err) {}\n    }, []);\n    const exit = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        if (!getFullscreenElement()) return;\n        const ownerDocument = getOwnerDocument();\n        try {\n            if (ownerDocument.exitFullscreen) {\n                ownerDocument.exitFullscreen().catch(()=>{});\n            } else if (ownerDocument.webkitExitFullscreen) {\n                ownerDocument.webkitExitFullscreen();\n            } else if (ownerDocument.mozCancelFullScreen) {\n                ownerDocument.mozCancelFullScreen();\n            } else if (ownerDocument.msExitFullscreen) {\n                ownerDocument.msExitFullscreen();\n            }\n        } catch (err) {}\n    }, [\n        getFullscreenElement,\n        getOwnerDocument\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const ownerDocument = getOwnerDocument();\n        const listener = ()=>{\n            setFullscreen(getFullscreenElement() === containerRef.current);\n        };\n        return (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cleanup)(...[\n            \"fullscreenchange\",\n            \"webkitfullscreenchange\",\n            \"mozfullscreenchange\",\n            \"MSFullscreenChange\"\n        ].map((event)=>{\n            ownerDocument.addEventListener(event, listener);\n            return ()=>ownerDocument.removeEventListener(event, listener);\n        }));\n    }, [\n        getFullscreenElement,\n        getOwnerDocument\n    ]);\n    const onEnterFullscreen = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(()=>{\n        var _a;\n        return (_a = on.enterFullscreen) === null || _a === void 0 ? void 0 : _a.call(on);\n    });\n    const onExitFullscreen = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(()=>{\n        var _a;\n        return (_a = on.exitFullscreen) === null || _a === void 0 ? void 0 : _a.call(on);\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (fullscreen) {\n            wasFullscreen.current = true;\n        }\n        if (wasFullscreen.current) {\n            (fullscreen ? onEnterFullscreen : onExitFullscreen)();\n        }\n    }, [\n        fullscreen,\n        onEnterFullscreen,\n        onExitFullscreen\n    ]);\n    const handleAutoFullscreen = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(()=>{\n        var _a;\n        (_a = auto ? enter : null) === null || _a === void 0 ? void 0 : _a();\n        return exit;\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(handleAutoFullscreen, [\n        handleAutoFullscreen\n    ]);\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>({\n            fullscreen,\n            disabled,\n            enter,\n            exit\n        }), [\n        fullscreen,\n        disabled,\n        enter,\n        exit\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle(ref, ()=>context, [\n        context\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: containerRef,\n        className: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.clsx)((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(_types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_FULLSCREEN), (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FULLSIZE))\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(FullscreenContext.Provider, {\n        value: context\n    }, children));\n}\nconst EnterFullscreenIcon = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIcon)(\"EnterFullscreen\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"\n}));\nconst ExitFullscreenIcon = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIcon)(\"ExitFullscreen\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z\"\n}));\nfunction FullscreenButton() {\n    var _a;\n    const { fullscreen, disabled, enter, exit } = useFullscreen();\n    const { render } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    if (disabled) return null;\n    if (render.buttonFullscreen) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (_a = render.buttonFullscreen) === null || _a === void 0 ? void 0 : _a.call(render, {\n            fullscreen,\n            disabled,\n            enter,\n            exit\n        }));\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.IconButton, {\n        disabled: disabled,\n        label: fullscreen ? \"Exit Fullscreen\" : \"Enter Fullscreen\",\n        icon: fullscreen ? ExitFullscreenIcon : EnterFullscreenIcon,\n        renderIcon: fullscreen ? render.iconExitFullscreen : render.iconEnterFullscreen,\n        onClick: fullscreen ? exit : enter\n    });\n}\nfunction Fullscreen({ augment, contains, addParent }) {\n    augment(({ fullscreen, toolbar, ...restProps })=>({\n            toolbar: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addToolbarButton)(toolbar, _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_FULLSCREEN, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(FullscreenButton, null)),\n            fullscreen: resolveFullscreenProps(fullscreen),\n            ...restProps\n        }));\n    addParent(contains(_types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_THUMBNAILS) ? _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_THUMBNAILS : _types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_CONTROLLER, (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createModule)(_types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_FULLSCREEN, FullscreenContextProvider));\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/fullscreen/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/inline/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/plugins/inline/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Inline)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../types.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/types.js\");\n\n\n\nfunction InlineContainer({ inline: { className, style, ...rest } = {}, styles, children }) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.LightboxRoot, {\n        className: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.clsx)((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(\"relative\"), className),\n        style: {\n            [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(\"controller_overscroll_behavior\")]: \"contain auto\",\n            ...styles.root,\n            ...style\n        },\n        ...rest\n    }, children);\n}\nfunction Inline({ augment, replace, remove }) {\n    augment(({ toolbar: { buttons, ...restToolbar }, open, close, controller: { focus, aria, touchAction, ...restController }, className, ...restProps })=>({\n            open: true,\n            close: ()=>{},\n            toolbar: {\n                buttons: buttons.filter((button)=>button !== _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_CLOSE),\n                ...restToolbar\n            },\n            inline: {\n                style: {\n                    width: \"100%\",\n                    height: \"100%\"\n                },\n                className\n            },\n            controller: {\n                focus: false,\n                aria: true,\n                touchAction: \"pan-y\",\n                ...restController\n            },\n            className,\n            ...restProps\n        }));\n    remove(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_NO_SCROLL);\n    replace(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_PORTAL, (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createModule)(_types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_INLINE, InlineContainer));\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveWV0LWFub3RoZXItcmVhY3QtbGlnaHRib3gvZGlzdC9wbHVnaW5zL2lubGluZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW9GO0FBQ3JEO0FBQytEO0FBRTlGLFNBQVNVLGdCQUFnQixFQUFFQyxRQUFRLEVBQUVDLFNBQVMsRUFBRUMsS0FBSyxFQUFFLEdBQUdDLE1BQU0sR0FBRyxDQUFDLENBQUMsRUFBRUMsTUFBTSxFQUFFQyxRQUFRLEVBQUU7SUFDckYscUJBQVFYLGdEQUFtQixDQUFDTCxtREFBWUEsRUFBRTtRQUFFWSxXQUFXWCwrQ0FBSUEsQ0FBQ0MsbURBQVFBLENBQUMsYUFBYVU7UUFBWUMsT0FBTztZQUFFLENBQUNWLGlEQUFNQSxDQUFDLGtDQUFrQyxFQUFFO1lBQWdCLEdBQUdZLE9BQU9HLElBQUk7WUFBRSxHQUFHTCxLQUFLO1FBQUM7UUFBRyxHQUFHQyxJQUFJO0lBQUMsR0FBR0U7QUFDOU07QUFFQSxTQUFTRyxPQUFPLEVBQUVDLE9BQU8sRUFBRUMsT0FBTyxFQUFFQyxNQUFNLEVBQUU7SUFDeENGLFFBQVEsQ0FBQyxFQUFFRyxTQUFTLEVBQUVDLE9BQU8sRUFBRSxHQUFHQyxhQUFhLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFQyxZQUFZLEVBQUVDLEtBQUssRUFBRUMsSUFBSSxFQUFFQyxXQUFXLEVBQUUsR0FBR0MsZ0JBQWdCLEVBQUVwQixTQUFTLEVBQUUsR0FBR3FCLFdBQVcsR0FBTTtZQUN0SlAsTUFBTTtZQUNOQyxPQUFPLEtBQVE7WUFDZkosU0FBUztnQkFDTEMsU0FBU0EsUUFBUVUsTUFBTSxDQUFDLENBQUNDLFNBQVdBLFdBQVc3QixtREFBWUE7Z0JBQzNELEdBQUdtQixXQUFXO1lBQ2xCO1lBQ0FkLFFBQVE7Z0JBQUVFLE9BQU87b0JBQUV1QixPQUFPO29CQUFRQyxRQUFRO2dCQUFPO2dCQUFHekI7WUFBVTtZQUM5RGdCLFlBQVk7Z0JBQUVDLE9BQU87Z0JBQU9DLE1BQU07Z0JBQU1DLGFBQWE7Z0JBQVMsR0FBR0MsY0FBYztZQUFDO1lBQ2hGcEI7WUFDQSxHQUFHcUIsU0FBUztRQUNoQjtJQUNBWCxPQUFPZix1REFBZ0JBO0lBQ3ZCYyxRQUFRYixvREFBYUEsRUFBRUosdURBQVlBLENBQUNLLG9EQUFhQSxFQUFFQztBQUN2RDtBQUU2QiIsInNvdXJjZXMiOlsid2VicGFjazovL2dnbWEvLi9ub2RlX21vZHVsZXMveWV0LWFub3RoZXItcmVhY3QtbGlnaHRib3gvZGlzdC9wbHVnaW5zL2lubGluZS9pbmRleC5qcz84NjhmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExpZ2h0Ym94Um9vdCwgY2xzeCwgY3NzQ2xhc3MsIGNzc1ZhciwgY3JlYXRlTW9kdWxlIH0gZnJvbSAnLi4vLi4vaW5kZXguanMnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQUNUSU9OX0NMT1NFLCBNT0RVTEVfTk9fU0NST0xMLCBNT0RVTEVfUE9SVEFMLCBQTFVHSU5fSU5MSU5FIH0gZnJvbSAnLi4vLi4vdHlwZXMuanMnO1xuXG5mdW5jdGlvbiBJbmxpbmVDb250YWluZXIoeyBpbmxpbmU6IHsgY2xhc3NOYW1lLCBzdHlsZSwgLi4ucmVzdCB9ID0ge30sIHN0eWxlcywgY2hpbGRyZW4gfSkge1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChMaWdodGJveFJvb3QsIHsgY2xhc3NOYW1lOiBjbHN4KGNzc0NsYXNzKFwicmVsYXRpdmVcIiksIGNsYXNzTmFtZSksIHN0eWxlOiB7IFtjc3NWYXIoXCJjb250cm9sbGVyX292ZXJzY3JvbGxfYmVoYXZpb3JcIildOiBcImNvbnRhaW4gYXV0b1wiLCAuLi5zdHlsZXMucm9vdCwgLi4uc3R5bGUgfSwgLi4ucmVzdCB9LCBjaGlsZHJlbikpO1xufVxuXG5mdW5jdGlvbiBJbmxpbmUoeyBhdWdtZW50LCByZXBsYWNlLCByZW1vdmUgfSkge1xuICAgIGF1Z21lbnQoKHsgdG9vbGJhcjogeyBidXR0b25zLCAuLi5yZXN0VG9vbGJhciB9LCBvcGVuLCBjbG9zZSwgY29udHJvbGxlcjogeyBmb2N1cywgYXJpYSwgdG91Y2hBY3Rpb24sIC4uLnJlc3RDb250cm9sbGVyIH0sIGNsYXNzTmFtZSwgLi4ucmVzdFByb3BzIH0pID0+ICh7XG4gICAgICAgIG9wZW46IHRydWUsXG4gICAgICAgIGNsb3NlOiAoKSA9PiB7IH0sXG4gICAgICAgIHRvb2xiYXI6IHtcbiAgICAgICAgICAgIGJ1dHRvbnM6IGJ1dHRvbnMuZmlsdGVyKChidXR0b24pID0+IGJ1dHRvbiAhPT0gQUNUSU9OX0NMT1NFKSxcbiAgICAgICAgICAgIC4uLnJlc3RUb29sYmFyLFxuICAgICAgICB9LFxuICAgICAgICBpbmxpbmU6IHsgc3R5bGU6IHsgd2lkdGg6IFwiMTAwJVwiLCBoZWlnaHQ6IFwiMTAwJVwiIH0sIGNsYXNzTmFtZSB9LFxuICAgICAgICBjb250cm9sbGVyOiB7IGZvY3VzOiBmYWxzZSwgYXJpYTogdHJ1ZSwgdG91Y2hBY3Rpb246IFwicGFuLXlcIiwgLi4ucmVzdENvbnRyb2xsZXIgfSxcbiAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgICAuLi5yZXN0UHJvcHMsXG4gICAgfSkpO1xuICAgIHJlbW92ZShNT0RVTEVfTk9fU0NST0xMKTtcbiAgICByZXBsYWNlKE1PRFVMRV9QT1JUQUwsIGNyZWF0ZU1vZHVsZShQTFVHSU5fSU5MSU5FLCBJbmxpbmVDb250YWluZXIpKTtcbn1cblxuZXhwb3J0IHsgSW5saW5lIGFzIGRlZmF1bHQgfTtcbiJdLCJuYW1lcyI6WyJMaWdodGJveFJvb3QiLCJjbHN4IiwiY3NzQ2xhc3MiLCJjc3NWYXIiLCJjcmVhdGVNb2R1bGUiLCJSZWFjdCIsIkFDVElPTl9DTE9TRSIsIk1PRFVMRV9OT19TQ1JPTEwiLCJNT0RVTEVfUE9SVEFMIiwiUExVR0lOX0lOTElORSIsIklubGluZUNvbnRhaW5lciIsImlubGluZSIsImNsYXNzTmFtZSIsInN0eWxlIiwicmVzdCIsInN0eWxlcyIsImNoaWxkcmVuIiwiY3JlYXRlRWxlbWVudCIsInJvb3QiLCJJbmxpbmUiLCJhdWdtZW50IiwicmVwbGFjZSIsInJlbW92ZSIsInRvb2xiYXIiLCJidXR0b25zIiwicmVzdFRvb2xiYXIiLCJvcGVuIiwiY2xvc2UiLCJjb250cm9sbGVyIiwiZm9jdXMiLCJhcmlhIiwidG91Y2hBY3Rpb24iLCJyZXN0Q29udHJvbGxlciIsInJlc3RQcm9wcyIsImZpbHRlciIsImJ1dHRvbiIsIndpZHRoIiwiaGVpZ2h0IiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/inline/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/share/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/plugins/share/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Share),\n/* harmony export */   isShareSupported: () => (/* binding */ isShareSupported)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/index.js\");\n\n\nconst defaultShareProps = {\n    share: undefined\n};\nconst resolveShareProps = (share)=>({\n        ...defaultShareProps,\n        ...share\n    });\nfunction isShareSupported() {\n    return typeof navigator !== \"undefined\" && Boolean(navigator.canShare);\n}\nconst ShareIcon = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIcon)(\"ShareIcon\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"m16 5-1.42 1.42-1.59-1.59V16h-1.98V4.83L9.42 6.42 8 5l4-4 4 4zm4 5v11c0 1.1-.9 2-2 2H6c-1.11 0-2-.9-2-2V10c0-1.11.89-2 2-2h3v2H6v11h12V10h-3V8h3c1.1 0 2 .89 2 2z\"\n}));\nfunction ShareButton() {\n    const { render, on, share: shareProps } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    const { share: customShare } = resolveShareProps(shareProps);\n    const { currentSlide, currentIndex } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxState)();\n    if (!isShareSupported()) return null;\n    if (render.buttonShare) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, render.buttonShare());\n    }\n    const share = currentSlide && (typeof currentSlide.share === \"object\" && currentSlide.share || typeof currentSlide.share === \"string\" && {\n        url: currentSlide.share\n    } || (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.isImageSlide)(currentSlide) && {\n        url: currentSlide.src\n    }) || undefined;\n    const canShare = customShare ? (currentSlide === null || currentSlide === void 0 ? void 0 : currentSlide.share) !== false : share && navigator.canShare(share);\n    const defaultShare = ()=>{\n        if (share) {\n            navigator.share(share).catch(()=>{});\n        }\n    };\n    const handleShare = ()=>{\n        var _a;\n        if (currentSlide) {\n            (customShare || defaultShare)({\n                slide: currentSlide\n            });\n            (_a = on.share) === null || _a === void 0 ? void 0 : _a.call(on, {\n                index: currentIndex\n            });\n        }\n    };\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.IconButton, {\n        label: \"Share\",\n        icon: ShareIcon,\n        renderIcon: render.iconShare,\n        disabled: !canShare,\n        onClick: handleShare\n    });\n}\nfunction Share({ augment }) {\n    augment(({ toolbar, share, ...rest })=>({\n            toolbar: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addToolbarButton)(toolbar, \"share\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ShareButton, null)),\n            share: resolveShareProps(share),\n            ...rest\n        }));\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveWV0LWFub3RoZXItcmVhY3QtbGlnaHRib3gvZGlzdC9wbHVnaW5zL3NoYXJlL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBK0I7QUFDNkY7QUFFNUgsTUFBTU8sb0JBQW9CO0lBQ3RCQyxPQUFPQztBQUNYO0FBQ0EsTUFBTUMsb0JBQW9CLENBQUNGLFFBQVc7UUFDbEMsR0FBR0QsaUJBQWlCO1FBQ3BCLEdBQUdDLEtBQUs7SUFDWjtBQUVBLFNBQVNHO0lBQ0wsT0FBTyxPQUFPQyxjQUFjLGVBQWVDLFFBQVFELFVBQVVFLFFBQVE7QUFDekU7QUFFQSxNQUFNQyxZQUFZZCxxREFBVUEsQ0FBQywyQkFBYUQsZ0RBQW1CLENBQUMsUUFBUTtJQUFFaUIsR0FBRztBQUFvSztBQUMvTyxTQUFTQztJQUNMLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxFQUFFLEVBQUVaLE9BQU9hLFVBQVUsRUFBRSxHQUFHbkIsMkRBQWdCQTtJQUMxRCxNQUFNLEVBQUVNLE9BQU9jLFdBQVcsRUFBRSxHQUFHWixrQkFBa0JXO0lBQ2pELE1BQU0sRUFBRUUsWUFBWSxFQUFFQyxZQUFZLEVBQUUsR0FBR3JCLDJEQUFnQkE7SUFDdkQsSUFBSSxDQUFDUSxvQkFDRCxPQUFPO0lBQ1gsSUFBSVEsT0FBT00sV0FBVyxFQUFFO1FBQ3BCLHFCQUFPekIsZ0RBQW1CLENBQUNBLDJDQUFjLEVBQUUsTUFBTW1CLE9BQU9NLFdBQVc7SUFDdkU7SUFDQSxNQUFNakIsUUFBUSxnQkFDVCxRQUFRZSxhQUFhZixLQUFLLEtBQUssWUFBWWUsYUFBYWYsS0FBSyxJQUN6RCxPQUFPZSxhQUFhZixLQUFLLEtBQUssWUFBWTtRQUFFbUIsS0FBS0osYUFBYWYsS0FBSztJQUFDLEtBQ3BFSix1REFBWUEsQ0FBQ21CLGlCQUFpQjtRQUFFSSxLQUFLSixhQUFhSyxHQUFHO0lBQUMsQ0FBQyxLQUM1RG5CO0lBQ0osTUFBTUssV0FBV1EsY0FBYyxDQUFDQyxpQkFBaUIsUUFBUUEsaUJBQWlCLEtBQUssSUFBSSxLQUFLLElBQUlBLGFBQWFmLEtBQUssTUFBTSxRQUFRQSxTQUFTSSxVQUFVRSxRQUFRLENBQUNOO0lBQ3hKLE1BQU1xQixlQUFlO1FBQ2pCLElBQUlyQixPQUFPO1lBQ1BJLFVBQVVKLEtBQUssQ0FBQ0EsT0FBT3NCLEtBQUssQ0FBQyxLQUFRO1FBQ3pDO0lBQ0o7SUFDQSxNQUFNQyxjQUFjO1FBQ2hCLElBQUlDO1FBQ0osSUFBSVQsY0FBYztZQUNiRCxDQUFBQSxlQUFlTyxZQUFXLEVBQUc7Z0JBQUVJLE9BQU9WO1lBQWE7WUFDbkRTLENBQUFBLEtBQUtaLEdBQUdaLEtBQUssTUFBTSxRQUFRd0IsT0FBTyxLQUFLLElBQUksS0FBSyxJQUFJQSxHQUFHRSxJQUFJLENBQUNkLElBQUk7Z0JBQUVlLE9BQU9YO1lBQWE7UUFDM0Y7SUFDSjtJQUNBLHFCQUFReEIsZ0RBQW1CLENBQUNLLGlEQUFVQSxFQUFFO1FBQUUrQixPQUFPO1FBQVNDLE1BQU10QjtRQUFXdUIsWUFBWW5CLE9BQU9vQixTQUFTO1FBQUVDLFVBQVUsQ0FBQzFCO1FBQVUyQixTQUFTVjtJQUFZO0FBQ3ZKO0FBRUEsU0FBU1csTUFBTSxFQUFFQyxPQUFPLEVBQUU7SUFDdEJBLFFBQVEsQ0FBQyxFQUFFQyxPQUFPLEVBQUVwQyxLQUFLLEVBQUUsR0FBR3FDLE1BQU0sR0FBTTtZQUN0Q0QsU0FBU3RDLDJEQUFnQkEsQ0FBQ3NDLFNBQVMsdUJBQVM1QyxnREFBbUIsQ0FBQ2tCLGFBQWE7WUFDN0VWLE9BQU9FLGtCQUFrQkY7WUFDekIsR0FBR3FDLElBQUk7UUFDWDtBQUNKO0FBRThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ2dtYS8uL25vZGVfbW9kdWxlcy95ZXQtYW5vdGhlci1yZWFjdC1saWdodGJveC9kaXN0L3BsdWdpbnMvc2hhcmUvaW5kZXguanM/ODQzZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjcmVhdGVJY29uLCB1c2VMaWdodGJveFByb3BzLCB1c2VMaWdodGJveFN0YXRlLCBpc0ltYWdlU2xpZGUsIEljb25CdXR0b24sIGFkZFRvb2xiYXJCdXR0b24gfSBmcm9tICcuLi8uLi9pbmRleC5qcyc7XG5cbmNvbnN0IGRlZmF1bHRTaGFyZVByb3BzID0ge1xuICAgIHNoYXJlOiB1bmRlZmluZWQsXG59O1xuY29uc3QgcmVzb2x2ZVNoYXJlUHJvcHMgPSAoc2hhcmUpID0+ICh7XG4gICAgLi4uZGVmYXVsdFNoYXJlUHJvcHMsXG4gICAgLi4uc2hhcmUsXG59KTtcblxuZnVuY3Rpb24gaXNTaGFyZVN1cHBvcnRlZCgpIHtcbiAgICByZXR1cm4gdHlwZW9mIG5hdmlnYXRvciAhPT0gXCJ1bmRlZmluZWRcIiAmJiBCb29sZWFuKG5hdmlnYXRvci5jYW5TaGFyZSk7XG59XG5cbmNvbnN0IFNoYXJlSWNvbiA9IGNyZWF0ZUljb24oXCJTaGFyZUljb25cIiwgUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwgeyBkOiBcIm0xNiA1LTEuNDIgMS40Mi0xLjU5LTEuNTlWMTZoLTEuOThWNC44M0w5LjQyIDYuNDIgOCA1bDQtNCA0IDR6bTQgNXYxMWMwIDEuMS0uOSAyLTIgMkg2Yy0xLjExIDAtMi0uOS0yLTJWMTBjMC0xLjExLjg5LTIgMi0yaDN2Mkg2djExaDEyVjEwaC0zVjhoM2MxLjEgMCAyIC44OSAyIDJ6XCIgfSkpO1xuZnVuY3Rpb24gU2hhcmVCdXR0b24oKSB7XG4gICAgY29uc3QgeyByZW5kZXIsIG9uLCBzaGFyZTogc2hhcmVQcm9wcyB9ID0gdXNlTGlnaHRib3hQcm9wcygpO1xuICAgIGNvbnN0IHsgc2hhcmU6IGN1c3RvbVNoYXJlIH0gPSByZXNvbHZlU2hhcmVQcm9wcyhzaGFyZVByb3BzKTtcbiAgICBjb25zdCB7IGN1cnJlbnRTbGlkZSwgY3VycmVudEluZGV4IH0gPSB1c2VMaWdodGJveFN0YXRlKCk7XG4gICAgaWYgKCFpc1NoYXJlU3VwcG9ydGVkKCkpXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIGlmIChyZW5kZXIuYnV0dG9uU2hhcmUpIHtcbiAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIHJlbmRlci5idXR0b25TaGFyZSgpKTtcbiAgICB9XG4gICAgY29uc3Qgc2hhcmUgPSAoY3VycmVudFNsaWRlICYmXG4gICAgICAgICgodHlwZW9mIGN1cnJlbnRTbGlkZS5zaGFyZSA9PT0gXCJvYmplY3RcIiAmJiBjdXJyZW50U2xpZGUuc2hhcmUpIHx8XG4gICAgICAgICAgICAodHlwZW9mIGN1cnJlbnRTbGlkZS5zaGFyZSA9PT0gXCJzdHJpbmdcIiAmJiB7IHVybDogY3VycmVudFNsaWRlLnNoYXJlIH0pIHx8XG4gICAgICAgICAgICAoaXNJbWFnZVNsaWRlKGN1cnJlbnRTbGlkZSkgJiYgeyB1cmw6IGN1cnJlbnRTbGlkZS5zcmMgfSkpKSB8fFxuICAgICAgICB1bmRlZmluZWQ7XG4gICAgY29uc3QgY2FuU2hhcmUgPSBjdXN0b21TaGFyZSA/IChjdXJyZW50U2xpZGUgPT09IG51bGwgfHwgY3VycmVudFNsaWRlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjdXJyZW50U2xpZGUuc2hhcmUpICE9PSBmYWxzZSA6IHNoYXJlICYmIG5hdmlnYXRvci5jYW5TaGFyZShzaGFyZSk7XG4gICAgY29uc3QgZGVmYXVsdFNoYXJlID0gKCkgPT4ge1xuICAgICAgICBpZiAoc2hhcmUpIHtcbiAgICAgICAgICAgIG5hdmlnYXRvci5zaGFyZShzaGFyZSkuY2F0Y2goKCkgPT4geyB9KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgY29uc3QgaGFuZGxlU2hhcmUgPSAoKSA9PiB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgaWYgKGN1cnJlbnRTbGlkZSkge1xuICAgICAgICAgICAgKGN1c3RvbVNoYXJlIHx8IGRlZmF1bHRTaGFyZSkoeyBzbGlkZTogY3VycmVudFNsaWRlIH0pO1xuICAgICAgICAgICAgKF9hID0gb24uc2hhcmUpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jYWxsKG9uLCB7IGluZGV4OiBjdXJyZW50SW5kZXggfSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChJY29uQnV0dG9uLCB7IGxhYmVsOiBcIlNoYXJlXCIsIGljb246IFNoYXJlSWNvbiwgcmVuZGVySWNvbjogcmVuZGVyLmljb25TaGFyZSwgZGlzYWJsZWQ6ICFjYW5TaGFyZSwgb25DbGljazogaGFuZGxlU2hhcmUgfSkpO1xufVxuXG5mdW5jdGlvbiBTaGFyZSh7IGF1Z21lbnQgfSkge1xuICAgIGF1Z21lbnQoKHsgdG9vbGJhciwgc2hhcmUsIC4uLnJlc3QgfSkgPT4gKHtcbiAgICAgICAgdG9vbGJhcjogYWRkVG9vbGJhckJ1dHRvbih0b29sYmFyLCBcInNoYXJlXCIsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoU2hhcmVCdXR0b24sIG51bGwpKSxcbiAgICAgICAgc2hhcmU6IHJlc29sdmVTaGFyZVByb3BzKHNoYXJlKSxcbiAgICAgICAgLi4ucmVzdCxcbiAgICB9KSk7XG59XG5cbmV4cG9ydCB7IFNoYXJlIGFzIGRlZmF1bHQsIGlzU2hhcmVTdXBwb3J0ZWQgfTtcbiJdLCJuYW1lcyI6WyJSZWFjdCIsImNyZWF0ZUljb24iLCJ1c2VMaWdodGJveFByb3BzIiwidXNlTGlnaHRib3hTdGF0ZSIsImlzSW1hZ2VTbGlkZSIsIkljb25CdXR0b24iLCJhZGRUb29sYmFyQnV0dG9uIiwiZGVmYXVsdFNoYXJlUHJvcHMiLCJzaGFyZSIsInVuZGVmaW5lZCIsInJlc29sdmVTaGFyZVByb3BzIiwiaXNTaGFyZVN1cHBvcnRlZCIsIm5hdmlnYXRvciIsIkJvb2xlYW4iLCJjYW5TaGFyZSIsIlNoYXJlSWNvbiIsImNyZWF0ZUVsZW1lbnQiLCJkIiwiU2hhcmVCdXR0b24iLCJyZW5kZXIiLCJvbiIsInNoYXJlUHJvcHMiLCJjdXN0b21TaGFyZSIsImN1cnJlbnRTbGlkZSIsImN1cnJlbnRJbmRleCIsImJ1dHRvblNoYXJlIiwiRnJhZ21lbnQiLCJ1cmwiLCJzcmMiLCJkZWZhdWx0U2hhcmUiLCJjYXRjaCIsImhhbmRsZVNoYXJlIiwiX2EiLCJzbGlkZSIsImNhbGwiLCJpbmRleCIsImxhYmVsIiwiaWNvbiIsInJlbmRlckljb24iLCJpY29uU2hhcmUiLCJkaXNhYmxlZCIsIm9uQ2xpY2siLCJTaGFyZSIsImF1Z21lbnQiLCJ0b29sYmFyIiwicmVzdCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/share/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/slideshow/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/plugins/slideshow/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Slideshow)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/index.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../types.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/types.js\");\n\n\n\nconst defaultSlideshowProps = {\n    autoplay: false,\n    delay: 3000,\n    ref: null\n};\nconst resolveSlideshowProps = (slideshow)=>({\n        ...defaultSlideshowProps,\n        ...slideshow\n    });\nconst SlideshowContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useSlideshow = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.makeUseContext)(\"useSlideshow\", \"SlideshowContext\", SlideshowContext);\nfunction SlideshowContextProvider({ slideshow, carousel: { finite }, on, children }) {\n    const { autoplay, delay, ref } = resolveSlideshowProps(slideshow);\n    const wasPlaying = react__WEBPACK_IMPORTED_MODULE_0__.useRef(autoplay);\n    const [playing, setPlaying] = react__WEBPACK_IMPORTED_MODULE_0__.useState(autoplay);\n    const scheduler = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const slideStatus = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const { slides, currentIndex } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxState)();\n    const { setTimeout, clearTimeout } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useTimeouts)();\n    const { subscribe } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEvents)();\n    const { next } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useController)();\n    const disabled = slides.length === 0 || finite && currentIndex === slides.length - 1;\n    const play = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        if (!playing && !disabled) {\n            setPlaying(true);\n        }\n    }, [\n        playing,\n        disabled\n    ]);\n    const pause = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        if (playing) {\n            setPlaying(false);\n        }\n    }, [\n        playing\n    ]);\n    const cancelScheduler = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        clearTimeout(scheduler.current);\n        scheduler.current = undefined;\n    }, [\n        clearTimeout\n    ]);\n    const scheduleNextSlide = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(()=>{\n        cancelScheduler();\n        if (!playing || disabled || slideStatus.current === _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_LOADING || slideStatus.current === _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_PLAYING) {\n            return;\n        }\n        scheduler.current = setTimeout(()=>{\n            if (playing) {\n                slideStatus.current = undefined;\n                next();\n            }\n        }, delay);\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(scheduleNextSlide, [\n        currentIndex,\n        playing,\n        scheduleNextSlide\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (playing && disabled) {\n            setPlaying(false);\n        }\n    }, [\n        currentIndex,\n        playing,\n        disabled\n    ]);\n    const onSlideshowStart = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(()=>{\n        var _a;\n        return (_a = on.slideshowStart) === null || _a === void 0 ? void 0 : _a.call(on);\n    });\n    const onSlideshowStop = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(()=>{\n        var _a;\n        return (_a = on.slideshowStop) === null || _a === void 0 ? void 0 : _a.call(on);\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (playing) {\n            onSlideshowStart();\n        } else if (wasPlaying.current) {\n            onSlideshowStop();\n        }\n        wasPlaying.current = playing;\n    }, [\n        playing,\n        onSlideshowStart,\n        onSlideshowStop\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cleanup)(cancelScheduler, subscribe(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTIVE_SLIDE_LOADING, ()=>{\n            slideStatus.current = _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_LOADING;\n            cancelScheduler();\n        }), subscribe(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTIVE_SLIDE_PLAYING, ()=>{\n            slideStatus.current = _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_PLAYING;\n            cancelScheduler();\n        }), subscribe(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTIVE_SLIDE_ERROR, ()=>{\n            slideStatus.current = _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_ERROR;\n            scheduleNextSlide();\n        }), subscribe(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTIVE_SLIDE_COMPLETE, ()=>{\n            slideStatus.current = _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_COMPLETE;\n            scheduleNextSlide();\n        })), [\n        subscribe,\n        cancelScheduler,\n        scheduleNextSlide\n    ]);\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>({\n            playing,\n            disabled,\n            play,\n            pause\n        }), [\n        playing,\n        disabled,\n        play,\n        pause\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle(ref, ()=>context, [\n        context\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SlideshowContext.Provider, {\n        value: context\n    }, children);\n}\nconst PlayIcon = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIcon)(\"Play\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M8 5v14l11-7z\"\n}));\nconst PauseIcon = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIcon)(\"Pause\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n}));\nfunction SlideshowButton() {\n    const { playing, disabled, play, pause } = useSlideshow();\n    const { render } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    const focusListeners = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLoseFocus)((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useController)().focus, disabled);\n    if (render.buttonSlideshow) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, render.buttonSlideshow({\n            playing,\n            disabled,\n            play,\n            pause\n        }));\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.IconButton, {\n        label: playing ? \"Pause\" : \"Play\",\n        icon: playing ? PauseIcon : PlayIcon,\n        renderIcon: playing ? render.iconSlideshowPause : render.iconSlideshowPlay,\n        onClick: playing ? pause : play,\n        disabled: disabled,\n        ...focusListeners\n    });\n}\nfunction Slideshow({ augment, addModule }) {\n    augment(({ slideshow, toolbar, ...restProps })=>({\n            toolbar: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addToolbarButton)(toolbar, _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_SLIDESHOW, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SlideshowButton, null)),\n            slideshow: resolveSlideshowProps(slideshow),\n            ...restProps\n        }));\n    addModule((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createModule)(_types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_SLIDESHOW, SlideshowContextProvider));\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveWV0LWFub3RoZXItcmVhY3QtbGlnaHRib3gvZGlzdC9wbHVnaW5zL3NsaWRlc2hvdy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQStCO0FBQzZMO0FBQ0k7QUFFaE8sTUFBTXVCLHdCQUF3QjtJQUMxQkMsVUFBVTtJQUNWQyxPQUFPO0lBQ1BDLEtBQUs7QUFDVDtBQUNBLE1BQU1DLHdCQUF3QixDQUFDQyxZQUFlO1FBQzFDLEdBQUdMLHFCQUFxQjtRQUN4QixHQUFHSyxTQUFTO0lBQ2hCO0FBRUEsTUFBTUMsaUNBQW1CN0IsZ0RBQW1CLENBQUM7QUFDN0MsTUFBTStCLGVBQWU5Qix5REFBY0EsQ0FBQyxnQkFBZ0Isb0JBQW9CNEI7QUFDeEUsU0FBU0cseUJBQXlCLEVBQUVKLFNBQVMsRUFBRUssVUFBVSxFQUFFQyxNQUFNLEVBQUUsRUFBRUMsRUFBRSxFQUFFQyxRQUFRLEVBQUU7SUFDL0UsTUFBTSxFQUFFWixRQUFRLEVBQUVDLEtBQUssRUFBRUMsR0FBRyxFQUFFLEdBQUdDLHNCQUFzQkM7SUFDdkQsTUFBTVMsYUFBYXJDLHlDQUFZLENBQUN3QjtJQUNoQyxNQUFNLENBQUNlLFNBQVNDLFdBQVcsR0FBR3hDLDJDQUFjLENBQUN3QjtJQUM3QyxNQUFNa0IsWUFBWTFDLHlDQUFZO0lBQzlCLE1BQU0yQyxjQUFjM0MseUNBQVk7SUFDaEMsTUFBTSxFQUFFNEMsTUFBTSxFQUFFQyxZQUFZLEVBQUUsR0FBRzNDLDJEQUFnQkE7SUFDakQsTUFBTSxFQUFFNEMsVUFBVSxFQUFFQyxZQUFZLEVBQUUsR0FBRzVDLHNEQUFXQTtJQUNoRCxNQUFNLEVBQUU2QyxTQUFTLEVBQUUsR0FBRzVDLG9EQUFTQTtJQUMvQixNQUFNLEVBQUU2QyxJQUFJLEVBQUUsR0FBRzVDLHdEQUFhQTtJQUM5QixNQUFNNkMsV0FBV04sT0FBT08sTUFBTSxLQUFLLEtBQU1qQixVQUFVVyxpQkFBaUJELE9BQU9PLE1BQU0sR0FBRztJQUNwRixNQUFNQyxPQUFPcEQsOENBQWlCLENBQUM7UUFDM0IsSUFBSSxDQUFDdUMsV0FBVyxDQUFDVyxVQUFVO1lBQ3ZCVixXQUFXO1FBQ2Y7SUFDSixHQUFHO1FBQUNEO1FBQVNXO0tBQVM7SUFDdEIsTUFBTUksUUFBUXRELDhDQUFpQixDQUFDO1FBQzVCLElBQUl1QyxTQUFTO1lBQ1RDLFdBQVc7UUFDZjtJQUNKLEdBQUc7UUFBQ0Q7S0FBUTtJQUNaLE1BQU1nQixrQkFBa0J2RCw4Q0FBaUIsQ0FBQztRQUN0QytDLGFBQWFMLFVBQVVjLE9BQU87UUFDOUJkLFVBQVVjLE9BQU8sR0FBR0M7SUFDeEIsR0FBRztRQUFDVjtLQUFhO0lBQ2pCLE1BQU1XLG9CQUFvQnBELDJEQUFnQkEsQ0FBQztRQUN2Q2lEO1FBQ0EsSUFBSSxDQUFDaEIsV0FDRFcsWUFDQVAsWUFBWWEsT0FBTyxLQUFLMUMsMkRBQW9CQSxJQUM1QzZCLFlBQVlhLE9BQU8sS0FBS3pDLDJEQUFvQkEsRUFBRTtZQUM5QztRQUNKO1FBQ0EyQixVQUFVYyxPQUFPLEdBQUdWLFdBQVc7WUFDM0IsSUFBSVAsU0FBUztnQkFDVEksWUFBWWEsT0FBTyxHQUFHQztnQkFDdEJSO1lBQ0o7UUFDSixHQUFHeEI7SUFDUDtJQUNBekIsNENBQWUsQ0FBQzBELG1CQUFtQjtRQUFDYjtRQUFjTjtRQUFTbUI7S0FBa0I7SUFDN0UxRCw0Q0FBZSxDQUFDO1FBQ1osSUFBSXVDLFdBQVdXLFVBQVU7WUFDckJWLFdBQVc7UUFDZjtJQUNKLEdBQUc7UUFBQ0s7UUFBY047UUFBU1c7S0FBUztJQUNwQyxNQUFNVSxtQkFBbUJ0RCwyREFBZ0JBLENBQUM7UUFBUSxJQUFJdUQ7UUFBSSxPQUFPLENBQUNBLEtBQUsxQixHQUFHMkIsY0FBYyxNQUFNLFFBQVFELE9BQU8sS0FBSyxJQUFJLEtBQUssSUFBSUEsR0FBR0UsSUFBSSxDQUFDNUI7SUFBSztJQUM1SSxNQUFNNkIsa0JBQWtCMUQsMkRBQWdCQSxDQUFDO1FBQVEsSUFBSXVEO1FBQUksT0FBTyxDQUFDQSxLQUFLMUIsR0FBRzhCLGFBQWEsTUFBTSxRQUFRSixPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUdFLElBQUksQ0FBQzVCO0lBQUs7SUFDMUluQyw0Q0FBZSxDQUFDO1FBQ1osSUFBSXVDLFNBQVM7WUFDVHFCO1FBQ0osT0FDSyxJQUFJdkIsV0FBV21CLE9BQU8sRUFBRTtZQUN6QlE7UUFDSjtRQUNBM0IsV0FBV21CLE9BQU8sR0FBR2pCO0lBQ3pCLEdBQUc7UUFBQ0E7UUFBU3FCO1FBQWtCSTtLQUFnQjtJQUMvQ2hFLDRDQUFlLENBQUMsSUFBTU8sa0RBQU9BLENBQUNnRCxpQkFBaUJQLFVBQVVoQywyREFBb0JBLEVBQUU7WUFDM0UyQixZQUFZYSxPQUFPLEdBQUcxQywyREFBb0JBO1lBQzFDeUM7UUFDSixJQUFJUCxVQUFVL0IsMkRBQW9CQSxFQUFFO1lBQ2hDMEIsWUFBWWEsT0FBTyxHQUFHekMsMkRBQW9CQTtZQUMxQ3dDO1FBQ0osSUFBSVAsVUFBVTlCLHlEQUFrQkEsRUFBRTtZQUM5QnlCLFlBQVlhLE9BQU8sR0FBR3JDLHlEQUFrQkE7WUFDeEN1QztRQUNKLElBQUlWLFVBQVU1Qiw0REFBcUJBLEVBQUU7WUFDakN1QixZQUFZYSxPQUFPLEdBQUduQyw0REFBcUJBO1lBQzNDcUM7UUFDSixLQUFLO1FBQUNWO1FBQVdPO1FBQWlCRztLQUFrQjtJQUNwRCxNQUFNUSxVQUFVbEUsMENBQWEsQ0FBQyxJQUFPO1lBQUV1QztZQUFTVztZQUFVRTtZQUFNRTtRQUFNLElBQUk7UUFBQ2Y7UUFBU1c7UUFBVUU7UUFBTUU7S0FBTTtJQUMxR3RELHNEQUF5QixDQUFDMEIsS0FBSyxJQUFNd0MsU0FBUztRQUFDQTtLQUFRO0lBQ3ZELHFCQUFPbEUsZ0RBQW1CLENBQUM2QixpQkFBaUJ5QyxRQUFRLEVBQUU7UUFBRUMsT0FBT0w7SUFBUSxHQUFHOUI7QUFDOUU7QUFFQSxNQUFNb0MsV0FBV2hFLHFEQUFVQSxDQUFDLHNCQUFRUixnREFBbUIsQ0FBQyxRQUFRO0lBQUV5RSxHQUFHO0FBQWdCO0FBQ3JGLE1BQU1DLFlBQVlsRSxxREFBVUEsQ0FBQyx1QkFBU1IsZ0RBQW1CLENBQUMsUUFBUTtJQUFFeUUsR0FBRztBQUFrQztBQUN6RyxTQUFTRTtJQUNMLE1BQU0sRUFBRXBDLE9BQU8sRUFBRVcsUUFBUSxFQUFFRSxJQUFJLEVBQUVFLEtBQUssRUFBRSxHQUFHdkI7SUFDM0MsTUFBTSxFQUFFNkMsTUFBTSxFQUFFLEdBQUduRSwyREFBZ0JBO0lBQ25DLE1BQU1vRSxpQkFBaUJuRSx1REFBWUEsQ0FBQ0wsd0RBQWFBLEdBQUd5RSxLQUFLLEVBQUU1QjtJQUMzRCxJQUFJMEIsT0FBT0csZUFBZSxFQUFFO1FBQ3hCLHFCQUFPL0UsZ0RBQW1CLENBQUNBLDJDQUFjLEVBQUUsTUFBTTRFLE9BQU9HLGVBQWUsQ0FBQztZQUFFeEM7WUFBU1c7WUFBVUU7WUFBTUU7UUFBTTtJQUM3RztJQUNBLHFCQUFRdEQsZ0RBQW1CLENBQUNXLGlEQUFVQSxFQUFFO1FBQUVzRSxPQUFPMUMsVUFBVSxVQUFVO1FBQVEyQyxNQUFNM0MsVUFBVW1DLFlBQVlGO1FBQVVXLFlBQVk1QyxVQUFVcUMsT0FBT1Esa0JBQWtCLEdBQUdSLE9BQU9TLGlCQUFpQjtRQUFFQyxTQUFTL0MsVUFBVWUsUUFBUUY7UUFBTUYsVUFBVUE7UUFBVSxHQUFHMkIsY0FBYztJQUFDO0FBQzFRO0FBRUEsU0FBU1UsVUFBVSxFQUFFQyxPQUFPLEVBQUVDLFNBQVMsRUFBRTtJQUNyQ0QsUUFBUSxDQUFDLEVBQUU1RCxTQUFTLEVBQUU4RCxPQUFPLEVBQUUsR0FBR0MsV0FBVyxHQUFNO1lBQy9DRCxTQUFTOUUsMkRBQWdCQSxDQUFDOEUsU0FBU3BFLHVEQUFnQkEsZ0JBQUV0QixnREFBbUIsQ0FBQzJFLGlCQUFpQjtZQUMxRi9DLFdBQVdELHNCQUFzQkM7WUFDakMsR0FBRytELFNBQVM7UUFDaEI7SUFDQUYsVUFBVTVFLHVEQUFZQSxDQUFDUyx1REFBZ0JBLEVBQUVVO0FBQzdDO0FBRWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ2dtYS8uL25vZGVfbW9kdWxlcy95ZXQtYW5vdGhlci1yZWFjdC1saWdodGJveC9kaXN0L3BsdWdpbnMvc2xpZGVzaG93L2luZGV4LmpzP2E0Y2YiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgbWFrZVVzZUNvbnRleHQsIHVzZUxpZ2h0Ym94U3RhdGUsIHVzZVRpbWVvdXRzLCB1c2VFdmVudHMsIHVzZUNvbnRyb2xsZXIsIHVzZUV2ZW50Q2FsbGJhY2ssIGNsZWFudXAsIGNyZWF0ZUljb24sIHVzZUxpZ2h0Ym94UHJvcHMsIHVzZUxvc2VGb2N1cywgSWNvbkJ1dHRvbiwgYWRkVG9vbGJhckJ1dHRvbiwgY3JlYXRlTW9kdWxlIH0gZnJvbSAnLi4vLi4vaW5kZXguanMnO1xuaW1wb3J0IHsgU0xJREVfU1RBVFVTX0xPQURJTkcsIFNMSURFX1NUQVRVU19QTEFZSU5HLCBBQ1RJVkVfU0xJREVfTE9BRElORywgQUNUSVZFX1NMSURFX1BMQVlJTkcsIEFDVElWRV9TTElERV9FUlJPUiwgU0xJREVfU1RBVFVTX0VSUk9SLCBBQ1RJVkVfU0xJREVfQ09NUExFVEUsIFNMSURFX1NUQVRVU19DT01QTEVURSwgUExVR0lOX1NMSURFU0hPVyB9IGZyb20gJy4uLy4uL3R5cGVzLmpzJztcblxuY29uc3QgZGVmYXVsdFNsaWRlc2hvd1Byb3BzID0ge1xuICAgIGF1dG9wbGF5OiBmYWxzZSxcbiAgICBkZWxheTogMzAwMCxcbiAgICByZWY6IG51bGwsXG59O1xuY29uc3QgcmVzb2x2ZVNsaWRlc2hvd1Byb3BzID0gKHNsaWRlc2hvdykgPT4gKHtcbiAgICAuLi5kZWZhdWx0U2xpZGVzaG93UHJvcHMsXG4gICAgLi4uc2xpZGVzaG93LFxufSk7XG5cbmNvbnN0IFNsaWRlc2hvd0NvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KG51bGwpO1xuY29uc3QgdXNlU2xpZGVzaG93ID0gbWFrZVVzZUNvbnRleHQoXCJ1c2VTbGlkZXNob3dcIiwgXCJTbGlkZXNob3dDb250ZXh0XCIsIFNsaWRlc2hvd0NvbnRleHQpO1xuZnVuY3Rpb24gU2xpZGVzaG93Q29udGV4dFByb3ZpZGVyKHsgc2xpZGVzaG93LCBjYXJvdXNlbDogeyBmaW5pdGUgfSwgb24sIGNoaWxkcmVuIH0pIHtcbiAgICBjb25zdCB7IGF1dG9wbGF5LCBkZWxheSwgcmVmIH0gPSByZXNvbHZlU2xpZGVzaG93UHJvcHMoc2xpZGVzaG93KTtcbiAgICBjb25zdCB3YXNQbGF5aW5nID0gUmVhY3QudXNlUmVmKGF1dG9wbGF5KTtcbiAgICBjb25zdCBbcGxheWluZywgc2V0UGxheWluZ10gPSBSZWFjdC51c2VTdGF0ZShhdXRvcGxheSk7XG4gICAgY29uc3Qgc2NoZWR1bGVyID0gUmVhY3QudXNlUmVmKCk7XG4gICAgY29uc3Qgc2xpZGVTdGF0dXMgPSBSZWFjdC51c2VSZWYoKTtcbiAgICBjb25zdCB7IHNsaWRlcywgY3VycmVudEluZGV4IH0gPSB1c2VMaWdodGJveFN0YXRlKCk7XG4gICAgY29uc3QgeyBzZXRUaW1lb3V0LCBjbGVhclRpbWVvdXQgfSA9IHVzZVRpbWVvdXRzKCk7XG4gICAgY29uc3QgeyBzdWJzY3JpYmUgfSA9IHVzZUV2ZW50cygpO1xuICAgIGNvbnN0IHsgbmV4dCB9ID0gdXNlQ29udHJvbGxlcigpO1xuICAgIGNvbnN0IGRpc2FibGVkID0gc2xpZGVzLmxlbmd0aCA9PT0gMCB8fCAoZmluaXRlICYmIGN1cnJlbnRJbmRleCA9PT0gc2xpZGVzLmxlbmd0aCAtIDEpO1xuICAgIGNvbnN0IHBsYXkgPSBSZWFjdC51c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgIGlmICghcGxheWluZyAmJiAhZGlzYWJsZWQpIHtcbiAgICAgICAgICAgIHNldFBsYXlpbmcodHJ1ZSk7XG4gICAgICAgIH1cbiAgICB9LCBbcGxheWluZywgZGlzYWJsZWRdKTtcbiAgICBjb25zdCBwYXVzZSA9IFJlYWN0LnVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgaWYgKHBsYXlpbmcpIHtcbiAgICAgICAgICAgIHNldFBsYXlpbmcoZmFsc2UpO1xuICAgICAgICB9XG4gICAgfSwgW3BsYXlpbmddKTtcbiAgICBjb25zdCBjYW5jZWxTY2hlZHVsZXIgPSBSZWFjdC51c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgIGNsZWFyVGltZW91dChzY2hlZHVsZXIuY3VycmVudCk7XG4gICAgICAgIHNjaGVkdWxlci5jdXJyZW50ID0gdW5kZWZpbmVkO1xuICAgIH0sIFtjbGVhclRpbWVvdXRdKTtcbiAgICBjb25zdCBzY2hlZHVsZU5leHRTbGlkZSA9IHVzZUV2ZW50Q2FsbGJhY2soKCkgPT4ge1xuICAgICAgICBjYW5jZWxTY2hlZHVsZXIoKTtcbiAgICAgICAgaWYgKCFwbGF5aW5nIHx8XG4gICAgICAgICAgICBkaXNhYmxlZCB8fFxuICAgICAgICAgICAgc2xpZGVTdGF0dXMuY3VycmVudCA9PT0gU0xJREVfU1RBVFVTX0xPQURJTkcgfHxcbiAgICAgICAgICAgIHNsaWRlU3RhdHVzLmN1cnJlbnQgPT09IFNMSURFX1NUQVRVU19QTEFZSU5HKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgc2NoZWR1bGVyLmN1cnJlbnQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIGlmIChwbGF5aW5nKSB7XG4gICAgICAgICAgICAgICAgc2xpZGVTdGF0dXMuY3VycmVudCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICBuZXh0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIGRlbGF5KTtcbiAgICB9KTtcbiAgICBSZWFjdC51c2VFZmZlY3Qoc2NoZWR1bGVOZXh0U2xpZGUsIFtjdXJyZW50SW5kZXgsIHBsYXlpbmcsIHNjaGVkdWxlTmV4dFNsaWRlXSk7XG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgaWYgKHBsYXlpbmcgJiYgZGlzYWJsZWQpIHtcbiAgICAgICAgICAgIHNldFBsYXlpbmcoZmFsc2UpO1xuICAgICAgICB9XG4gICAgfSwgW2N1cnJlbnRJbmRleCwgcGxheWluZywgZGlzYWJsZWRdKTtcbiAgICBjb25zdCBvblNsaWRlc2hvd1N0YXJ0ID0gdXNlRXZlbnRDYWxsYmFjaygoKSA9PiB7IHZhciBfYTsgcmV0dXJuIChfYSA9IG9uLnNsaWRlc2hvd1N0YXJ0KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2FsbChvbik7IH0pO1xuICAgIGNvbnN0IG9uU2xpZGVzaG93U3RvcCA9IHVzZUV2ZW50Q2FsbGJhY2soKCkgPT4geyB2YXIgX2E7IHJldHVybiAoX2EgPSBvbi5zbGlkZXNob3dTdG9wKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2FsbChvbik7IH0pO1xuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGlmIChwbGF5aW5nKSB7XG4gICAgICAgICAgICBvblNsaWRlc2hvd1N0YXJ0KCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAod2FzUGxheWluZy5jdXJyZW50KSB7XG4gICAgICAgICAgICBvblNsaWRlc2hvd1N0b3AoKTtcbiAgICAgICAgfVxuICAgICAgICB3YXNQbGF5aW5nLmN1cnJlbnQgPSBwbGF5aW5nO1xuICAgIH0sIFtwbGF5aW5nLCBvblNsaWRlc2hvd1N0YXJ0LCBvblNsaWRlc2hvd1N0b3BdKTtcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4gY2xlYW51cChjYW5jZWxTY2hlZHVsZXIsIHN1YnNjcmliZShBQ1RJVkVfU0xJREVfTE9BRElORywgKCkgPT4ge1xuICAgICAgICBzbGlkZVN0YXR1cy5jdXJyZW50ID0gU0xJREVfU1RBVFVTX0xPQURJTkc7XG4gICAgICAgIGNhbmNlbFNjaGVkdWxlcigpO1xuICAgIH0pLCBzdWJzY3JpYmUoQUNUSVZFX1NMSURFX1BMQVlJTkcsICgpID0+IHtcbiAgICAgICAgc2xpZGVTdGF0dXMuY3VycmVudCA9IFNMSURFX1NUQVRVU19QTEFZSU5HO1xuICAgICAgICBjYW5jZWxTY2hlZHVsZXIoKTtcbiAgICB9KSwgc3Vic2NyaWJlKEFDVElWRV9TTElERV9FUlJPUiwgKCkgPT4ge1xuICAgICAgICBzbGlkZVN0YXR1cy5jdXJyZW50ID0gU0xJREVfU1RBVFVTX0VSUk9SO1xuICAgICAgICBzY2hlZHVsZU5leHRTbGlkZSgpO1xuICAgIH0pLCBzdWJzY3JpYmUoQUNUSVZFX1NMSURFX0NPTVBMRVRFLCAoKSA9PiB7XG4gICAgICAgIHNsaWRlU3RhdHVzLmN1cnJlbnQgPSBTTElERV9TVEFUVVNfQ09NUExFVEU7XG4gICAgICAgIHNjaGVkdWxlTmV4dFNsaWRlKCk7XG4gICAgfSkpLCBbc3Vic2NyaWJlLCBjYW5jZWxTY2hlZHVsZXIsIHNjaGVkdWxlTmV4dFNsaWRlXSk7XG4gICAgY29uc3QgY29udGV4dCA9IFJlYWN0LnVzZU1lbW8oKCkgPT4gKHsgcGxheWluZywgZGlzYWJsZWQsIHBsYXksIHBhdXNlIH0pLCBbcGxheWluZywgZGlzYWJsZWQsIHBsYXksIHBhdXNlXSk7XG4gICAgUmVhY3QudXNlSW1wZXJhdGl2ZUhhbmRsZShyZWYsICgpID0+IGNvbnRleHQsIFtjb250ZXh0XSk7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoU2xpZGVzaG93Q29udGV4dC5Qcm92aWRlciwgeyB2YWx1ZTogY29udGV4dCB9LCBjaGlsZHJlbik7XG59XG5cbmNvbnN0IFBsYXlJY29uID0gY3JlYXRlSWNvbihcIlBsYXlcIiwgUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwgeyBkOiBcIk04IDV2MTRsMTEtN3pcIiB9KSk7XG5jb25zdCBQYXVzZUljb24gPSBjcmVhdGVJY29uKFwiUGF1c2VcIiwgUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwgeyBkOiBcIk02IDE5aDRWNUg2djE0em04LTE0djE0aDRWNWgtNHpcIiB9KSk7XG5mdW5jdGlvbiBTbGlkZXNob3dCdXR0b24oKSB7XG4gICAgY29uc3QgeyBwbGF5aW5nLCBkaXNhYmxlZCwgcGxheSwgcGF1c2UgfSA9IHVzZVNsaWRlc2hvdygpO1xuICAgIGNvbnN0IHsgcmVuZGVyIH0gPSB1c2VMaWdodGJveFByb3BzKCk7XG4gICAgY29uc3QgZm9jdXNMaXN0ZW5lcnMgPSB1c2VMb3NlRm9jdXModXNlQ29udHJvbGxlcigpLmZvY3VzLCBkaXNhYmxlZCk7XG4gICAgaWYgKHJlbmRlci5idXR0b25TbGlkZXNob3cpIHtcbiAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIHJlbmRlci5idXR0b25TbGlkZXNob3coeyBwbGF5aW5nLCBkaXNhYmxlZCwgcGxheSwgcGF1c2UgfSkpO1xuICAgIH1cbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoSWNvbkJ1dHRvbiwgeyBsYWJlbDogcGxheWluZyA/IFwiUGF1c2VcIiA6IFwiUGxheVwiLCBpY29uOiBwbGF5aW5nID8gUGF1c2VJY29uIDogUGxheUljb24sIHJlbmRlckljb246IHBsYXlpbmcgPyByZW5kZXIuaWNvblNsaWRlc2hvd1BhdXNlIDogcmVuZGVyLmljb25TbGlkZXNob3dQbGF5LCBvbkNsaWNrOiBwbGF5aW5nID8gcGF1c2UgOiBwbGF5LCBkaXNhYmxlZDogZGlzYWJsZWQsIC4uLmZvY3VzTGlzdGVuZXJzIH0pKTtcbn1cblxuZnVuY3Rpb24gU2xpZGVzaG93KHsgYXVnbWVudCwgYWRkTW9kdWxlIH0pIHtcbiAgICBhdWdtZW50KCh7IHNsaWRlc2hvdywgdG9vbGJhciwgLi4ucmVzdFByb3BzIH0pID0+ICh7XG4gICAgICAgIHRvb2xiYXI6IGFkZFRvb2xiYXJCdXR0b24odG9vbGJhciwgUExVR0lOX1NMSURFU0hPVywgUmVhY3QuY3JlYXRlRWxlbWVudChTbGlkZXNob3dCdXR0b24sIG51bGwpKSxcbiAgICAgICAgc2xpZGVzaG93OiByZXNvbHZlU2xpZGVzaG93UHJvcHMoc2xpZGVzaG93KSxcbiAgICAgICAgLi4ucmVzdFByb3BzLFxuICAgIH0pKTtcbiAgICBhZGRNb2R1bGUoY3JlYXRlTW9kdWxlKFBMVUdJTl9TTElERVNIT1csIFNsaWRlc2hvd0NvbnRleHRQcm92aWRlcikpO1xufVxuXG5leHBvcnQgeyBTbGlkZXNob3cgYXMgZGVmYXVsdCB9O1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwibWFrZVVzZUNvbnRleHQiLCJ1c2VMaWdodGJveFN0YXRlIiwidXNlVGltZW91dHMiLCJ1c2VFdmVudHMiLCJ1c2VDb250cm9sbGVyIiwidXNlRXZlbnRDYWxsYmFjayIsImNsZWFudXAiLCJjcmVhdGVJY29uIiwidXNlTGlnaHRib3hQcm9wcyIsInVzZUxvc2VGb2N1cyIsIkljb25CdXR0b24iLCJhZGRUb29sYmFyQnV0dG9uIiwiY3JlYXRlTW9kdWxlIiwiU0xJREVfU1RBVFVTX0xPQURJTkciLCJTTElERV9TVEFUVVNfUExBWUlORyIsIkFDVElWRV9TTElERV9MT0FESU5HIiwiQUNUSVZFX1NMSURFX1BMQVlJTkciLCJBQ1RJVkVfU0xJREVfRVJST1IiLCJTTElERV9TVEFUVVNfRVJST1IiLCJBQ1RJVkVfU0xJREVfQ09NUExFVEUiLCJTTElERV9TVEFUVVNfQ09NUExFVEUiLCJQTFVHSU5fU0xJREVTSE9XIiwiZGVmYXVsdFNsaWRlc2hvd1Byb3BzIiwiYXV0b3BsYXkiLCJkZWxheSIsInJlZiIsInJlc29sdmVTbGlkZXNob3dQcm9wcyIsInNsaWRlc2hvdyIsIlNsaWRlc2hvd0NvbnRleHQiLCJjcmVhdGVDb250ZXh0IiwidXNlU2xpZGVzaG93IiwiU2xpZGVzaG93Q29udGV4dFByb3ZpZGVyIiwiY2Fyb3VzZWwiLCJmaW5pdGUiLCJvbiIsImNoaWxkcmVuIiwid2FzUGxheWluZyIsInVzZVJlZiIsInBsYXlpbmciLCJzZXRQbGF5aW5nIiwidXNlU3RhdGUiLCJzY2hlZHVsZXIiLCJzbGlkZVN0YXR1cyIsInNsaWRlcyIsImN1cnJlbnRJbmRleCIsInNldFRpbWVvdXQiLCJjbGVhclRpbWVvdXQiLCJzdWJzY3JpYmUiLCJuZXh0IiwiZGlzYWJsZWQiLCJsZW5ndGgiLCJwbGF5IiwidXNlQ2FsbGJhY2siLCJwYXVzZSIsImNhbmNlbFNjaGVkdWxlciIsImN1cnJlbnQiLCJ1bmRlZmluZWQiLCJzY2hlZHVsZU5leHRTbGlkZSIsInVzZUVmZmVjdCIsIm9uU2xpZGVzaG93U3RhcnQiLCJfYSIsInNsaWRlc2hvd1N0YXJ0IiwiY2FsbCIsIm9uU2xpZGVzaG93U3RvcCIsInNsaWRlc2hvd1N0b3AiLCJjb250ZXh0IiwidXNlTWVtbyIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJjcmVhdGVFbGVtZW50IiwiUHJvdmlkZXIiLCJ2YWx1ZSIsIlBsYXlJY29uIiwiZCIsIlBhdXNlSWNvbiIsIlNsaWRlc2hvd0J1dHRvbiIsInJlbmRlciIsImZvY3VzTGlzdGVuZXJzIiwiZm9jdXMiLCJidXR0b25TbGlkZXNob3ciLCJGcmFnbWVudCIsImxhYmVsIiwiaWNvbiIsInJlbmRlckljb24iLCJpY29uU2xpZGVzaG93UGF1c2UiLCJpY29uU2xpZGVzaG93UGxheSIsIm9uQ2xpY2siLCJTbGlkZXNob3ciLCJhdWdtZW50IiwiYWRkTW9kdWxlIiwidG9vbGJhciIsInJlc3RQcm9wcyIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/slideshow/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/thumbnails/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/plugins/thumbnails/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Thumbnails)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/index.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../types.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/types.js\");\n\n\n\nconst defaultThumbnailsProps = {\n    ref: null,\n    position: \"bottom\",\n    width: 120,\n    height: 80,\n    border: 1,\n    borderRadius: 4,\n    padding: 4,\n    gap: 16,\n    imageFit: \"contain\",\n    vignette: true,\n    hidden: false,\n    showToggle: false\n};\nconst resolveThumbnailsProps = (thumbnails)=>({\n        ...defaultThumbnailsProps,\n        ...thumbnails\n    });\nfunction useThumbnailsProps() {\n    const { thumbnails } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    return resolveThumbnailsProps(thumbnails);\n}\nconst cssPrefix = (value)=>(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.composePrefix)(_types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_THUMBNAILS, value);\nconst cssThumbnailPrefix = (value)=>cssPrefix((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.composePrefix)(\"thumbnail\", value));\nconst VideoThumbnailIcon = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIcon)(\"VideoThumbnail\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}));\nconst UnknownThumbnailIcon = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIcon)(\"UnknownThumbnail\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M23 18V6c0-1.1-.9-2-2-2H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2zM8.5 12.5l2.5 3.01L14.5 11l4.5 6H5l3.5-4.5z\"\n}));\nfunction renderThumbnail({ slide, render, rect, imageFit }) {\n    var _a;\n    const customThumbnail = (_a = render.thumbnail) === null || _a === void 0 ? void 0 : _a.call(render, {\n        slide,\n        render,\n        rect,\n        imageFit\n    });\n    if (customThumbnail) {\n        return customThumbnail;\n    }\n    const imageSlideProps = {\n        render,\n        rect,\n        imageFit\n    };\n    if (slide.thumbnail) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.ImageSlide, {\n            slide: {\n                src: slide.thumbnail\n            },\n            ...imageSlideProps\n        });\n    }\n    if ((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.isImageSlide)(slide)) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.ImageSlide, {\n            slide: slide,\n            ...imageSlideProps\n        });\n    }\n    const thumbnailIconClass = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssThumbnailPrefix(_types_js__WEBPACK_IMPORTED_MODULE_2__.ELEMENT_ICON));\n    if (slide.type === \"video\") {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, slide.poster && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.ImageSlide, {\n            slide: {\n                src: slide.poster\n            },\n            ...imageSlideProps\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(VideoThumbnailIcon, {\n            className: thumbnailIconClass\n        }));\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(UnknownThumbnailIcon, {\n        className: thumbnailIconClass\n    });\n}\nconst activePrefix = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.makeComposePrefix)(\"active\");\nconst fadeInPrefix = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.makeComposePrefix)(\"fadein\");\nconst fadeOutPrefix = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.makeComposePrefix)(\"fadeout\");\nconst placeholderPrefix = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.makeComposePrefix)(\"placeholder\");\nconst DELAY = \"delay\";\nconst DURATION = \"duration\";\nfunction Thumbnail({ slide, onClick, active, fadeIn, fadeOut, placeholder, onLoseFocus }) {\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const { render, styles } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    const { getOwnerDocument } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useDocumentContext)();\n    const { width, height, imageFit } = useThumbnailsProps();\n    const rect = {\n        width,\n        height\n    };\n    const onLoseFocusCallback = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(onLoseFocus);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (fadeOut && getOwnerDocument().activeElement === ref.current) {\n            onLoseFocusCallback();\n        }\n    }, [\n        fadeOut,\n        onLoseFocusCallback,\n        getOwnerDocument\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n        ref: ref,\n        type: \"button\",\n        className: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.clsx)((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FLEX_CENTER), (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssThumbnailPrefix()), active && (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssThumbnailPrefix(activePrefix())), fadeIn && (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssThumbnailPrefix(fadeInPrefix())), fadeOut && (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssThumbnailPrefix(fadeOutPrefix())), placeholder && (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssThumbnailPrefix(placeholderPrefix()))),\n        style: {\n            ...fadeIn ? {\n                [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(fadeInPrefix(DURATION)))]: `${fadeIn.duration}ms`,\n                [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(fadeInPrefix(DELAY)))]: `${fadeIn.delay}ms`\n            } : null,\n            ...fadeOut ? {\n                [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(fadeOutPrefix(DURATION)))]: `${fadeOut.duration}ms`,\n                [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(fadeOutPrefix(DELAY)))]: `${fadeOut.delay}ms`\n            } : null,\n            ...styles.thumbnail\n        },\n        onClick: onClick\n    }, slide && renderThumbnail({\n        slide,\n        render,\n        rect,\n        imageFit\n    }));\n}\nfunction isHorizontal(position) {\n    return [\n        \"top\",\n        \"bottom\"\n    ].includes(position);\n}\nfunction boxSize(thumbnails, dimension) {\n    return dimension + 2 * (thumbnails.border + thumbnails.padding) + thumbnails.gap;\n}\nfunction getThumbnailKey(slide) {\n    const { thumbnail, poster } = slide || {\n        thumbnail: \"placeholder\"\n    };\n    return typeof thumbnail === \"string\" && thumbnail || typeof poster === \"string\" && poster || slide && (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.getSlideKey)(slide) || undefined;\n}\nfunction ThumbnailsTrack({ visible, containerRef }) {\n    const track = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const isRTL = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useRTL)();\n    const { publish, subscribe } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEvents)();\n    const { carousel, styles } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    const { slides, globalIndex, animation } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxState)();\n    const { registerSensors, subscribeSensors } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useSensors)();\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useKeyboardNavigation)(subscribeSensors);\n    const thumbnails = useThumbnailsProps();\n    const { position, width, height, border, borderStyle, borderColor, borderRadius, padding, gap, vignette } = thumbnails;\n    const animationDuration = (animation === null || animation === void 0 ? void 0 : animation.duration) || 0;\n    const offset = animationDuration > 0 && (animation === null || animation === void 0 ? void 0 : animation.increment) || 0;\n    const { prepareAnimation } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useAnimation)(track, (snapshot)=>({\n            keyframes: isHorizontal(position) ? [\n                {\n                    transform: `translateX(${(isRTL ? -1 : 1) * boxSize(thumbnails, width) * offset + snapshot}px)`\n                },\n                {\n                    transform: \"translateX(0)\"\n                }\n            ] : [\n                {\n                    transform: `translateY(${boxSize(thumbnails, height) * offset + snapshot}px)`\n                },\n                {\n                    transform: \"translateY(0)\"\n                }\n            ],\n            duration: animationDuration,\n            easing: animation === null || animation === void 0 ? void 0 : animation.easing\n        }));\n    const handleControllerSwipe = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(()=>{\n        let animationOffset = 0;\n        if (containerRef.current && track.current) {\n            const containerRect = containerRef.current.getBoundingClientRect();\n            const trackRect = track.current.getBoundingClientRect();\n            animationOffset = isHorizontal(position) ? trackRect.left - containerRect.left - (containerRect.width - trackRect.width) / 2 : trackRect.top - containerRect.top - (containerRect.height - trackRect.height) / 2;\n        }\n        prepareAnimation(animationOffset);\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cleanup)(subscribe(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_SWIPE, handleControllerSwipe)), [\n        subscribe,\n        handleControllerSwipe\n    ]);\n    const preload = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.calculatePreload)(carousel, slides);\n    const items = [];\n    if ((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.hasSlides)(slides)) {\n        for(let index = globalIndex - preload - Math.abs(offset); index <= globalIndex + preload + Math.abs(offset); index += 1){\n            const placeholder = carousel.finite && (index < 0 || index > slides.length - 1) || offset < 0 && index < globalIndex - preload || offset > 0 && index > globalIndex + preload;\n            const slide = !placeholder ? (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.getSlide)(slides, index) : null;\n            const key = [\n                `${index}`,\n                getThumbnailKey(slide)\n            ].filter(Boolean).join(\"|\");\n            items.push({\n                key,\n                index,\n                slide\n            });\n        }\n    }\n    const handleClick = (slideIndex)=>()=>{\n            if (slideIndex > globalIndex) {\n                publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT, {\n                    count: slideIndex - globalIndex\n                });\n            } else if (slideIndex < globalIndex) {\n                publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV, {\n                    count: globalIndex - slideIndex\n                });\n            }\n        };\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.clsx)((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssPrefix(\"container\")), (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FLEX_CENTER)),\n        style: {\n            ...!visible ? {\n                display: \"none\"\n            } : null,\n            ...width !== defaultThumbnailsProps.width ? {\n                [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(\"width\"))]: `${width}px`\n            } : null,\n            ...height !== defaultThumbnailsProps.height ? {\n                [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(\"height\"))]: `${height}px`\n            } : null,\n            ...border !== defaultThumbnailsProps.border ? {\n                [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(\"border\"))]: `${border}px`\n            } : null,\n            ...borderStyle ? {\n                [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(\"border_style\"))]: borderStyle\n            } : null,\n            ...borderColor ? {\n                [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(\"border_color\"))]: borderColor\n            } : null,\n            ...borderRadius !== defaultThumbnailsProps.borderRadius ? {\n                [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(\"border_radius\"))]: `${borderRadius}px`\n            } : null,\n            ...padding !== defaultThumbnailsProps.padding ? {\n                [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(\"padding\"))]: `${padding}px`\n            } : null,\n            ...gap !== defaultThumbnailsProps.gap ? {\n                [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(\"gap\"))]: `${gap}px`\n            } : null,\n            ...styles.thumbnailsContainer\n        }\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"nav\", {\n        ref: track,\n        style: styles.thumbnailsTrack,\n        className: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.clsx)((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssPrefix(\"track\")), (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FLEX_CENTER)),\n        tabIndex: -1,\n        ...registerSensors\n    }, items.map(({ key, index, slide })=>{\n        const fadeAnimationDuration = animationDuration / Math.abs(offset || 1);\n        const fadeIn = offset > 0 && index > globalIndex + preload - offset && index <= globalIndex + preload || offset < 0 && index < globalIndex - preload - offset && index >= globalIndex - preload ? {\n            duration: fadeAnimationDuration,\n            delay: ((offset > 0 ? index - (globalIndex + preload - offset) : globalIndex - preload - offset - index) - 1) * fadeAnimationDuration\n        } : undefined;\n        const fadeOut = offset > 0 && index < globalIndex - preload || offset < 0 && index > globalIndex + preload ? {\n            duration: fadeAnimationDuration,\n            delay: (offset > 0 ? offset - (globalIndex - preload - index) : -offset - (index - (globalIndex + preload))) * fadeAnimationDuration\n        } : undefined;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Thumbnail, {\n            key: key,\n            slide: slide,\n            active: index === globalIndex,\n            fadeIn: fadeIn,\n            fadeOut: fadeOut,\n            placeholder: !slide,\n            onClick: handleClick(index),\n            onLoseFocus: ()=>{\n                var _a;\n                return (_a = track.current) === null || _a === void 0 ? void 0 : _a.focus();\n            }\n        });\n    })), vignette && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssPrefix(\"vignette\"))\n    }));\n}\nconst ThumbnailsContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useThumbnails = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.makeUseContext)(\"useThumbnails\", \"ThumbnailsContext\", ThumbnailsContext);\nfunction ThumbnailsContextProvider({ children, ...props }) {\n    const { ref, position, hidden } = resolveThumbnailsProps(props.thumbnails);\n    const [visible, setVisible] = react__WEBPACK_IMPORTED_MODULE_0__.useState(!hidden);\n    const containerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>({\n            visible,\n            show: ()=>setVisible(true),\n            hide: ()=>setVisible(false)\n        }), [\n        visible\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle(ref, ()=>context, [\n        context\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.LightboxPropsProvider, {\n        ...props\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThumbnailsContext.Provider, {\n        value: context\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: containerRef,\n        className: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.clsx)((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssPrefix()), (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssPrefix(`${position}`)))\n    }, [\n        \"start\",\n        \"top\"\n    ].includes(position) && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThumbnailsTrack, {\n        containerRef: containerRef,\n        visible: visible\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssPrefix(\"wrapper\"))\n    }, children), [\n        \"end\",\n        \"bottom\"\n    ].includes(position) && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThumbnailsTrack, {\n        containerRef: containerRef,\n        visible: visible\n    }))));\n}\nconst thumbnailsIcon = ()=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        strokeWidth: 2,\n        stroke: \"currentColor\",\n        strokeLinejoin: \"round\",\n        fill: \"none\",\n        d: \"M3 5l18 0l0 14l-18 0l0-14z\"\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M5 14h4v3h-4zM10 14h4v3h-4zM15 14h4v3h-4z\"\n    }));\nconst ThumbnailsVisible = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIcon)(\"ThumbnailsVisible\", thumbnailsIcon());\nconst ThumbnailsHidden = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIconDisabled)(\"ThumbnailsHidden\", thumbnailsIcon());\nfunction ThumbnailsButton() {\n    const { visible, show, hide } = useThumbnails();\n    const { render } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    if (render.buttonThumbnails) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, render.buttonThumbnails({\n            visible,\n            show,\n            hide\n        }));\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.IconButton, {\n        label: visible ? \"Hide thumbnails\" : \"Show thumbnails\",\n        icon: visible ? ThumbnailsVisible : ThumbnailsHidden,\n        renderIcon: visible ? render.iconThumbnailsVisible : render.iconThumbnailsHidden,\n        onClick: visible ? hide : show\n    });\n}\nfunction Thumbnails({ augment, contains, append, addParent }) {\n    augment(({ thumbnails: thumbnailsProps, toolbar, ...restProps })=>{\n        const thumbnails = resolveThumbnailsProps(thumbnailsProps);\n        return {\n            toolbar: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addToolbarButton)(toolbar, _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_THUMBNAILS, thumbnails.showToggle ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThumbnailsButton, null) : null),\n            thumbnails,\n            ...restProps\n        };\n    });\n    const module = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createModule)(_types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_THUMBNAILS, ThumbnailsContextProvider);\n    if (contains(_types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_FULLSCREEN)) {\n        append(_types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_FULLSCREEN, module);\n    } else {\n        addParent(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_CONTROLLER, module);\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveWV0LWFub3RoZXItcmVhY3QtbGlnaHRib3gvZGlzdC9wbHVnaW5zL3RodW1ibmFpbHMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUErQjtBQUNtWjtBQUNoUjtBQUVsSyxNQUFNcUMseUJBQXlCO0lBQzNCQyxLQUFLO0lBQ0xDLFVBQVU7SUFDVkMsT0FBTztJQUNQQyxRQUFRO0lBQ1JDLFFBQVE7SUFDUkMsY0FBYztJQUNkQyxTQUFTO0lBQ1RDLEtBQUs7SUFDTEMsVUFBVTtJQUNWQyxVQUFVO0lBQ1ZDLFFBQVE7SUFDUkMsWUFBWTtBQUNoQjtBQUNBLE1BQU1DLHlCQUF5QixDQUFDQyxhQUFnQjtRQUM1QyxHQUFHZCxzQkFBc0I7UUFDekIsR0FBR2MsVUFBVTtJQUNqQjtBQUNBLFNBQVNDO0lBQ0wsTUFBTSxFQUFFRCxVQUFVLEVBQUUsR0FBR2xELDJEQUFnQkE7SUFDdkMsT0FBT2lELHVCQUF1QkM7QUFDbEM7QUFFQSxNQUFNRSxZQUFZLENBQUNDLFFBQVVwRCx3REFBYUEsQ0FBQzJCLHdEQUFpQkEsRUFBRXlCO0FBQzlELE1BQU1DLHFCQUFxQixDQUFDRCxRQUFVRCxVQUFVbkQsd0RBQWFBLENBQUMsYUFBYW9EO0FBRTNFLE1BQU1FLHFCQUFxQnJELHFEQUFVQSxDQUFDLGdDQUFrQkgsZ0RBQW1CLENBQUMsUUFBUTtJQUFFMEQsR0FBRztBQUFzSjtBQUMvTyxNQUFNQyx1QkFBdUJ4RCxxREFBVUEsQ0FBQyxrQ0FBb0JILGdEQUFtQixDQUFDLFFBQVE7SUFBRTBELEdBQUc7QUFBMkg7QUFDeE4sU0FBU0UsZ0JBQWdCLEVBQUVDLEtBQUssRUFBRUMsTUFBTSxFQUFFQyxJQUFJLEVBQUVqQixRQUFRLEVBQUU7SUFDdEQsSUFBSWtCO0lBQ0osTUFBTUMsa0JBQWtCLENBQUNELEtBQUtGLE9BQU9JLFNBQVMsTUFBTSxRQUFRRixPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUdHLElBQUksQ0FBQ0wsUUFBUTtR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SSxhQUFhRCx1QkFBdUIySTtRQUMxQyxPQUFPO1lBQ0hDLFNBQVNuSywyREFBZ0JBLENBQUNtSyxTQUFTakssd0RBQWlCQSxFQUFFc0IsV0FBV0YsVUFBVSxpQkFBR2pELGdEQUFtQixDQUFDaUwsa0JBQWtCLFFBQVE7WUFDNUg5SDtZQUNBLEdBQUc0SSxTQUFTO1FBQ2hCO0lBQ0o7SUFDQSxNQUFNQyxTQUFTcEssdURBQVlBLENBQUNDLHdEQUFpQkEsRUFBRWtJO0lBQy9DLElBQUkyQixTQUFTdkosd0RBQWlCQSxHQUFHO1FBQzdCd0osT0FBT3hKLHdEQUFpQkEsRUFBRTZKO0lBQzlCLE9BQ0s7UUFDREosVUFBVXhKLHdEQUFpQkEsRUFBRTRKO0lBQ2pDO0FBQ0o7QUFFaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nZ21hLy4vbm9kZV9tb2R1bGVzL3lldC1hbm90aGVyLXJlYWN0LWxpZ2h0Ym94L2Rpc3QvcGx1Z2lucy90aHVtYm5haWxzL2luZGV4LmpzPzk5YjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlTGlnaHRib3hQcm9wcywgY29tcG9zZVByZWZpeCwgY3JlYXRlSWNvbiwgSW1hZ2VTbGlkZSwgaXNJbWFnZVNsaWRlLCBjc3NDbGFzcywgbWFrZUNvbXBvc2VQcmVmaXgsIHVzZURvY3VtZW50Q29udGV4dCwgdXNlRXZlbnRDYWxsYmFjaywgY2xzeCwgY3NzVmFyLCBnZXRTbGlkZUtleSwgdXNlUlRMLCB1c2VFdmVudHMsIHVzZUxpZ2h0Ym94U3RhdGUsIHVzZVNlbnNvcnMsIHVzZUtleWJvYXJkTmF2aWdhdGlvbiwgdXNlQW5pbWF0aW9uLCBjbGVhbnVwLCBjYWxjdWxhdGVQcmVsb2FkLCBoYXNTbGlkZXMsIGdldFNsaWRlLCBtYWtlVXNlQ29udGV4dCwgTGlnaHRib3hQcm9wc1Byb3ZpZGVyLCBjcmVhdGVJY29uRGlzYWJsZWQsIEljb25CdXR0b24sIGFkZFRvb2xiYXJCdXR0b24sIGNyZWF0ZU1vZHVsZSB9IGZyb20gJy4uLy4uL2luZGV4LmpzJztcbmltcG9ydCB7IFBMVUdJTl9USFVNQk5BSUxTLCBFTEVNRU5UX0lDT04sIENMQVNTX0ZMRVhfQ0VOVEVSLCBBQ1RJT05fU1dJUEUsIEFDVElPTl9ORVhULCBBQ1RJT05fUFJFViwgUExVR0lOX0ZVTExTQ1JFRU4sIE1PRFVMRV9DT05UUk9MTEVSIH0gZnJvbSAnLi4vLi4vdHlwZXMuanMnO1xuXG5jb25zdCBkZWZhdWx0VGh1bWJuYWlsc1Byb3BzID0ge1xuICAgIHJlZjogbnVsbCxcbiAgICBwb3NpdGlvbjogXCJib3R0b21cIixcbiAgICB3aWR0aDogMTIwLFxuICAgIGhlaWdodDogODAsXG4gICAgYm9yZGVyOiAxLFxuICAgIGJvcmRlclJhZGl1czogNCxcbiAgICBwYWRkaW5nOiA0LFxuICAgIGdhcDogMTYsXG4gICAgaW1hZ2VGaXQ6IFwiY29udGFpblwiLFxuICAgIHZpZ25ldHRlOiB0cnVlLFxuICAgIGhpZGRlbjogZmFsc2UsXG4gICAgc2hvd1RvZ2dsZTogZmFsc2UsXG59O1xuY29uc3QgcmVzb2x2ZVRodW1ibmFpbHNQcm9wcyA9ICh0aHVtYm5haWxzKSA9PiAoe1xuICAgIC4uLmRlZmF1bHRUaHVtYm5haWxzUHJvcHMsXG4gICAgLi4udGh1bWJuYWlscyxcbn0pO1xuZnVuY3Rpb24gdXNlVGh1bWJuYWlsc1Byb3BzKCkge1xuICAgIGNvbnN0IHsgdGh1bWJuYWlscyB9ID0gdXNlTGlnaHRib3hQcm9wcygpO1xuICAgIHJldHVybiByZXNvbHZlVGh1bWJuYWlsc1Byb3BzKHRodW1ibmFpbHMpO1xufVxuXG5jb25zdCBjc3NQcmVmaXggPSAodmFsdWUpID0+IGNvbXBvc2VQcmVmaXgoUExVR0lOX1RIVU1CTkFJTFMsIHZhbHVlKTtcbmNvbnN0IGNzc1RodW1ibmFpbFByZWZpeCA9ICh2YWx1ZSkgPT4gY3NzUHJlZml4KGNvbXBvc2VQcmVmaXgoXCJ0aHVtYm5haWxcIiwgdmFsdWUpKTtcblxuY29uc3QgVmlkZW9UaHVtYm5haWxJY29uID0gY3JlYXRlSWNvbihcIlZpZGVvVGh1bWJuYWlsXCIsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIsIHsgZDogXCJNMTAgMTYuNWw2LTQuNS02LTQuNXY5ek0xMiAyQzYuNDggMiAyIDYuNDggMiAxMnM0LjQ4IDEwIDEwIDEwIDEwLTQuNDggMTAtMTBTMTcuNTIgMiAxMiAyem0wIDE4Yy00LjQxIDAtOC0zLjU5LTgtOHMzLjU5LTggOC04IDggMy41OSA4IDgtMy41OSA4LTggOHpcIiB9KSk7XG5jb25zdCBVbmtub3duVGh1bWJuYWlsSWNvbiA9IGNyZWF0ZUljb24oXCJVbmtub3duVGh1bWJuYWlsXCIsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIsIHsgZDogXCJNMjMgMThWNmMwLTEuMS0uOS0yLTItMkgzYy0xLjEgMC0yIC45LTIgMnYxMmMwIDEuMS45IDIgMiAyaDE4YzEuMSAwIDItLjkgMi0yek04LjUgMTIuNWwyLjUgMy4wMUwxNC41IDExbDQuNSA2SDVsMy41LTQuNXpcIiB9KSk7XG5mdW5jdGlvbiByZW5kZXJUaHVtYm5haWwoeyBzbGlkZSwgcmVuZGVyLCByZWN0LCBpbWFnZUZpdCB9KSB7XG4gICAgdmFyIF9hO1xuICAgIGNvbnN0IGN1c3RvbVRodW1ibmFpbCA9IChfYSA9IHJlbmRlci50aHVtYm5haWwpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jYWxsKHJlbmRlciwgeyBzbGlkZSwgcmVuZGVyLCByZWN0LCBpbWFnZUZpdCB9KTtcbiAgICBpZiAoY3VzdG9tVGh1bWJuYWlsKSB7XG4gICAgICAgIHJldHVybiBjdXN0b21UaHVtYm5haWw7XG4gICAgfVxuICAgIGNvbnN0IGltYWdlU2xpZGVQcm9wcyA9IHsgcmVuZGVyLCByZWN0LCBpbWFnZUZpdCB9O1xuICAgIGlmIChzbGlkZS50aHVtYm5haWwpIHtcbiAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW1hZ2VTbGlkZSwgeyBzbGlkZTogeyBzcmM6IHNsaWRlLnRodW1ibmFpbCB9LCAuLi5pbWFnZVNsaWRlUHJvcHMgfSk7XG4gICAgfVxuICAgIGlmIChpc0ltYWdlU2xpZGUoc2xpZGUpKSB7XG4gICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KEltYWdlU2xpZGUsIHsgc2xpZGU6IHNsaWRlLCAuLi5pbWFnZVNsaWRlUHJvcHMgfSk7XG4gICAgfVxuICAgIGNvbnN0IHRodW1ibmFpbEljb25DbGFzcyA9IGNzc0NsYXNzKGNzc1RodW1ibmFpbFByZWZpeChFTEVNRU5UX0lDT04pKTtcbiAgICBpZiAoc2xpZGUudHlwZSA9PT0gXCJ2aWRlb1wiKSB7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCxcbiAgICAgICAgICAgIHNsaWRlLnBvc3RlciAmJiBSZWFjdC5jcmVhdGVFbGVtZW50KEltYWdlU2xpZGUsIHsgc2xpZGU6IHsgc3JjOiBzbGlkZS5wb3N0ZXIgfSwgLi4uaW1hZ2VTbGlkZVByb3BzIH0pLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChWaWRlb1RodW1ibmFpbEljb24sIHsgY2xhc3NOYW1lOiB0aHVtYm5haWxJY29uQ2xhc3MgfSkpKTtcbiAgICB9XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVW5rbm93blRodW1ibmFpbEljb24sIHsgY2xhc3NOYW1lOiB0aHVtYm5haWxJY29uQ2xhc3MgfSk7XG59XG5jb25zdCBhY3RpdmVQcmVmaXggPSBtYWtlQ29tcG9zZVByZWZpeChcImFjdGl2ZVwiKTtcbmNvbnN0IGZhZGVJblByZWZpeCA9IG1ha2VDb21wb3NlUHJlZml4KFwiZmFkZWluXCIpO1xuY29uc3QgZmFkZU91dFByZWZpeCA9IG1ha2VDb21wb3NlUHJlZml4KFwiZmFkZW91dFwiKTtcbmNvbnN0IHBsYWNlaG9sZGVyUHJlZml4ID0gbWFrZUNvbXBvc2VQcmVmaXgoXCJwbGFjZWhvbGRlclwiKTtcbmNvbnN0IERFTEFZID0gXCJkZWxheVwiO1xuY29uc3QgRFVSQVRJT04gPSBcImR1cmF0aW9uXCI7XG5mdW5jdGlvbiBUaHVtYm5haWwoeyBzbGlkZSwgb25DbGljaywgYWN0aXZlLCBmYWRlSW4sIGZhZGVPdXQsIHBsYWNlaG9sZGVyLCBvbkxvc2VGb2N1cyB9KSB7XG4gICAgY29uc3QgcmVmID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICAgIGNvbnN0IHsgcmVuZGVyLCBzdHlsZXMgfSA9IHVzZUxpZ2h0Ym94UHJvcHMoKTtcbiAgICBjb25zdCB7IGdldE93bmVyRG9jdW1lbnQgfSA9IHVzZURvY3VtZW50Q29udGV4dCgpO1xuICAgIGNvbnN0IHsgd2lkdGgsIGhlaWdodCwgaW1hZ2VGaXQgfSA9IHVzZVRodW1ibmFpbHNQcm9wcygpO1xuICAgIGNvbnN0IHJlY3QgPSB7IHdpZHRoLCBoZWlnaHQgfTtcbiAgICBjb25zdCBvbkxvc2VGb2N1c0NhbGxiYWNrID0gdXNlRXZlbnRDYWxsYmFjayhvbkxvc2VGb2N1cyk7XG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgaWYgKGZhZGVPdXQgJiYgZ2V0T3duZXJEb2N1bWVudCgpLmFjdGl2ZUVsZW1lbnQgPT09IHJlZi5jdXJyZW50KSB7XG4gICAgICAgICAgICBvbkxvc2VGb2N1c0NhbGxiYWNrKCk7XG4gICAgICAgIH1cbiAgICB9LCBbZmFkZU91dCwgb25Mb3NlRm9jdXNDYWxsYmFjaywgZ2V0T3duZXJEb2N1bWVudF0pO1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLCB7IHJlZjogcmVmLCB0eXBlOiBcImJ1dHRvblwiLCBjbGFzc05hbWU6IGNsc3goY3NzQ2xhc3MoQ0xBU1NfRkxFWF9DRU5URVIpLCBjc3NDbGFzcyhjc3NUaHVtYm5haWxQcmVmaXgoKSksIGFjdGl2ZSAmJiBjc3NDbGFzcyhjc3NUaHVtYm5haWxQcmVmaXgoYWN0aXZlUHJlZml4KCkpKSwgZmFkZUluICYmIGNzc0NsYXNzKGNzc1RodW1ibmFpbFByZWZpeChmYWRlSW5QcmVmaXgoKSkpLCBmYWRlT3V0ICYmIGNzc0NsYXNzKGNzc1RodW1ibmFpbFByZWZpeChmYWRlT3V0UHJlZml4KCkpKSwgcGxhY2Vob2xkZXIgJiYgY3NzQ2xhc3MoY3NzVGh1bWJuYWlsUHJlZml4KHBsYWNlaG9sZGVyUHJlZml4KCkpKSksIHN0eWxlOiB7XG4gICAgICAgICAgICAuLi4oZmFkZUluXG4gICAgICAgICAgICAgICAgPyB7XG4gICAgICAgICAgICAgICAgICAgIFtjc3NWYXIoY3NzVGh1bWJuYWlsUHJlZml4KGZhZGVJblByZWZpeChEVVJBVElPTikpKV06IGAke2ZhZGVJbi5kdXJhdGlvbn1tc2AsXG4gICAgICAgICAgICAgICAgICAgIFtjc3NWYXIoY3NzVGh1bWJuYWlsUHJlZml4KGZhZGVJblByZWZpeChERUxBWSkpKV06IGAke2ZhZGVJbi5kZWxheX1tc2AsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIDogbnVsbCksXG4gICAgICAgICAgICAuLi4oZmFkZU91dFxuICAgICAgICAgICAgICAgID8ge1xuICAgICAgICAgICAgICAgICAgICBbY3NzVmFyKGNzc1RodW1ibmFpbFByZWZpeChmYWRlT3V0UHJlZml4KERVUkFUSU9OKSkpXTogYCR7ZmFkZU91dC5kdXJhdGlvbn1tc2AsXG4gICAgICAgICAgICAgICAgICAgIFtjc3NWYXIoY3NzVGh1bWJuYWlsUHJlZml4KGZhZGVPdXRQcmVmaXgoREVMQVkpKSldOiBgJHtmYWRlT3V0LmRlbGF5fW1zYCxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgOiBudWxsKSxcbiAgICAgICAgICAgIC4uLnN0eWxlcy50aHVtYm5haWwsXG4gICAgICAgIH0sIG9uQ2xpY2s6IG9uQ2xpY2sgfSwgc2xpZGUgJiYgcmVuZGVyVGh1bWJuYWlsKHsgc2xpZGUsIHJlbmRlciwgcmVjdCwgaW1hZ2VGaXQgfSkpKTtcbn1cblxuZnVuY3Rpb24gaXNIb3Jpem9udGFsKHBvc2l0aW9uKSB7XG4gICAgcmV0dXJuIFtcInRvcFwiLCBcImJvdHRvbVwiXS5pbmNsdWRlcyhwb3NpdGlvbik7XG59XG5mdW5jdGlvbiBib3hTaXplKHRodW1ibmFpbHMsIGRpbWVuc2lvbikge1xuICAgIHJldHVybiBkaW1lbnNpb24gKyAyICogKHRodW1ibmFpbHMuYm9yZGVyICsgdGh1bWJuYWlscy5wYWRkaW5nKSArIHRodW1ibmFpbHMuZ2FwO1xufVxuZnVuY3Rpb24gZ2V0VGh1bWJuYWlsS2V5KHNsaWRlKSB7XG4gICAgY29uc3QgeyB0aHVtYm5haWwsIHBvc3RlciB9ID0gc2xpZGUgfHwgeyB0aHVtYm5haWw6IFwicGxhY2Vob2xkZXJcIiB9O1xuICAgIHJldHVybiAoKHR5cGVvZiB0aHVtYm5haWwgPT09IFwic3RyaW5nXCIgJiYgdGh1bWJuYWlsKSB8fFxuICAgICAgICAodHlwZW9mIHBvc3RlciA9PT0gXCJzdHJpbmdcIiAmJiBwb3N0ZXIpIHx8XG4gICAgICAgIChzbGlkZSAmJiBnZXRTbGlkZUtleShzbGlkZSkpIHx8XG4gICAgICAgIHVuZGVmaW5lZCk7XG59XG5mdW5jdGlvbiBUaHVtYm5haWxzVHJhY2soeyB2aXNpYmxlLCBjb250YWluZXJSZWYgfSkge1xuICAgIGNvbnN0IHRyYWNrID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICAgIGNvbnN0IGlzUlRMID0gdXNlUlRMKCk7XG4gICAgY29uc3QgeyBwdWJsaXNoLCBzdWJzY3JpYmUgfSA9IHVzZUV2ZW50cygpO1xuICAgIGNvbnN0IHsgY2Fyb3VzZWwsIHN0eWxlcyB9ID0gdXNlTGlnaHRib3hQcm9wcygpO1xuICAgIGNvbnN0IHsgc2xpZGVzLCBnbG9iYWxJbmRleCwgYW5pbWF0aW9uIH0gPSB1c2VMaWdodGJveFN0YXRlKCk7XG4gICAgY29uc3QgeyByZWdpc3RlclNlbnNvcnMsIHN1YnNjcmliZVNlbnNvcnMgfSA9IHVzZVNlbnNvcnMoKTtcbiAgICB1c2VLZXlib2FyZE5hdmlnYXRpb24oc3Vic2NyaWJlU2Vuc29ycyk7XG4gICAgY29uc3QgdGh1bWJuYWlscyA9IHVzZVRodW1ibmFpbHNQcm9wcygpO1xuICAgIGNvbnN0IHsgcG9zaXRpb24sIHdpZHRoLCBoZWlnaHQsIGJvcmRlciwgYm9yZGVyU3R5bGUsIGJvcmRlckNvbG9yLCBib3JkZXJSYWRpdXMsIHBhZGRpbmcsIGdhcCwgdmlnbmV0dGUgfSA9IHRodW1ibmFpbHM7XG4gICAgY29uc3QgYW5pbWF0aW9uRHVyYXRpb24gPSAoYW5pbWF0aW9uID09PSBudWxsIHx8IGFuaW1hdGlvbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogYW5pbWF0aW9uLmR1cmF0aW9uKSB8fCAwO1xuICAgIGNvbnN0IG9mZnNldCA9IChhbmltYXRpb25EdXJhdGlvbiA+IDAgJiYgKGFuaW1hdGlvbiA9PT0gbnVsbCB8fCBhbmltYXRpb24gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGFuaW1hdGlvbi5pbmNyZW1lbnQpKSB8fCAwO1xuICAgIGNvbnN0IHsgcHJlcGFyZUFuaW1hdGlvbiB9ID0gdXNlQW5pbWF0aW9uKHRyYWNrLCAoc25hcHNob3QpID0+ICh7XG4gICAgICAgIGtleWZyYW1lczogaXNIb3Jpem9udGFsKHBvc2l0aW9uKVxuICAgICAgICAgICAgPyBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IGB0cmFuc2xhdGVYKCR7KGlzUlRMID8gLTEgOiAxKSAqIGJveFNpemUodGh1bWJuYWlscywgd2lkdGgpICogb2Zmc2V0ICsgc25hcHNob3R9cHgpYCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVgoMClcIiB9LFxuICAgICAgICAgICAgXVxuICAgICAgICAgICAgOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IGB0cmFuc2xhdGVZKCR7Ym94U2l6ZSh0aHVtYm5haWxzLCBoZWlnaHQpICogb2Zmc2V0ICsgc25hcHNob3R9cHgpYCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVkoMClcIiB9LFxuICAgICAgICAgICAgXSxcbiAgICAgICAgZHVyYXRpb246IGFuaW1hdGlvbkR1cmF0aW9uLFxuICAgICAgICBlYXNpbmc6IGFuaW1hdGlvbiA9PT0gbnVsbCB8fCBhbmltYXRpb24gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGFuaW1hdGlvbi5lYXNpbmcsXG4gICAgfSkpO1xuICAgIGNvbnN0IGhhbmRsZUNvbnRyb2xsZXJTd2lwZSA9IHVzZUV2ZW50Q2FsbGJhY2soKCkgPT4ge1xuICAgICAgICBsZXQgYW5pbWF0aW9uT2Zmc2V0ID0gMDtcbiAgICAgICAgaWYgKGNvbnRhaW5lclJlZi5jdXJyZW50ICYmIHRyYWNrLmN1cnJlbnQpIHtcbiAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5lclJlY3QgPSBjb250YWluZXJSZWYuY3VycmVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgICAgIGNvbnN0IHRyYWNrUmVjdCA9IHRyYWNrLmN1cnJlbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgICBhbmltYXRpb25PZmZzZXQgPSBpc0hvcml6b250YWwocG9zaXRpb24pXG4gICAgICAgICAgICAgICAgPyB0cmFja1JlY3QubGVmdCAtIGNvbnRhaW5lclJlY3QubGVmdCAtIChjb250YWluZXJSZWN0LndpZHRoIC0gdHJhY2tSZWN0LndpZHRoKSAvIDJcbiAgICAgICAgICAgICAgICA6IHRyYWNrUmVjdC50b3AgLSBjb250YWluZXJSZWN0LnRvcCAtIChjb250YWluZXJSZWN0LmhlaWdodCAtIHRyYWNrUmVjdC5oZWlnaHQpIC8gMjtcbiAgICAgICAgfVxuICAgICAgICBwcmVwYXJlQW5pbWF0aW9uKGFuaW1hdGlvbk9mZnNldCk7XG4gICAgfSk7XG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IGNsZWFudXAoc3Vic2NyaWJlKEFDVElPTl9TV0lQRSwgaGFuZGxlQ29udHJvbGxlclN3aXBlKSksIFtzdWJzY3JpYmUsIGhhbmRsZUNvbnRyb2xsZXJTd2lwZV0pO1xuICAgIGNvbnN0IHByZWxvYWQgPSBjYWxjdWxhdGVQcmVsb2FkKGNhcm91c2VsLCBzbGlkZXMpO1xuICAgIGNvbnN0IGl0ZW1zID0gW107XG4gICAgaWYgKGhhc1NsaWRlcyhzbGlkZXMpKSB7XG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gZ2xvYmFsSW5kZXggLSBwcmVsb2FkIC0gTWF0aC5hYnMob2Zmc2V0KTsgaW5kZXggPD0gZ2xvYmFsSW5kZXggKyBwcmVsb2FkICsgTWF0aC5hYnMob2Zmc2V0KTsgaW5kZXggKz0gMSkge1xuICAgICAgICAgICAgY29uc3QgcGxhY2Vob2xkZXIgPSAoY2Fyb3VzZWwuZmluaXRlICYmIChpbmRleCA8IDAgfHwgaW5kZXggPiBzbGlkZXMubGVuZ3RoIC0gMSkpIHx8XG4gICAgICAgICAgICAgICAgKG9mZnNldCA8IDAgJiYgaW5kZXggPCBnbG9iYWxJbmRleCAtIHByZWxvYWQpIHx8XG4gICAgICAgICAgICAgICAgKG9mZnNldCA+IDAgJiYgaW5kZXggPiBnbG9iYWxJbmRleCArIHByZWxvYWQpO1xuICAgICAgICAgICAgY29uc3Qgc2xpZGUgPSAhcGxhY2Vob2xkZXIgPyBnZXRTbGlkZShzbGlkZXMsIGluZGV4KSA6IG51bGw7XG4gICAgICAgICAgICBjb25zdCBrZXkgPSBbYCR7aW5kZXh9YCwgZ2V0VGh1bWJuYWlsS2V5KHNsaWRlKV0uZmlsdGVyKEJvb2xlYW4pLmpvaW4oXCJ8XCIpO1xuICAgICAgICAgICAgaXRlbXMucHVzaCh7IGtleSwgaW5kZXgsIHNsaWRlIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGhhbmRsZUNsaWNrID0gKHNsaWRlSW5kZXgpID0+ICgpID0+IHtcbiAgICAgICAgaWYgKHNsaWRlSW5kZXggPiBnbG9iYWxJbmRleCkge1xuICAgICAgICAgICAgcHVibGlzaChBQ1RJT05fTkVYVCwgeyBjb3VudDogc2xpZGVJbmRleCAtIGdsb2JhbEluZGV4IH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHNsaWRlSW5kZXggPCBnbG9iYWxJbmRleCkge1xuICAgICAgICAgICAgcHVibGlzaChBQ1RJT05fUFJFViwgeyBjb3VudDogZ2xvYmFsSW5kZXggLSBzbGlkZUluZGV4IH0pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IGNsc3goY3NzQ2xhc3MoY3NzUHJlZml4KFwiY29udGFpbmVyXCIpKSwgY3NzQ2xhc3MoQ0xBU1NfRkxFWF9DRU5URVIpKSwgc3R5bGU6IHtcbiAgICAgICAgICAgIC4uLighdmlzaWJsZSA/IHsgZGlzcGxheTogXCJub25lXCIgfSA6IG51bGwpLFxuICAgICAgICAgICAgLi4uKHdpZHRoICE9PSBkZWZhdWx0VGh1bWJuYWlsc1Byb3BzLndpZHRoID8geyBbY3NzVmFyKGNzc1RodW1ibmFpbFByZWZpeChcIndpZHRoXCIpKV06IGAke3dpZHRofXB4YCB9IDogbnVsbCksXG4gICAgICAgICAgICAuLi4oaGVpZ2h0ICE9PSBkZWZhdWx0VGh1bWJuYWlsc1Byb3BzLmhlaWdodFxuICAgICAgICAgICAgICAgID8geyBbY3NzVmFyKGNzc1RodW1ibmFpbFByZWZpeChcImhlaWdodFwiKSldOiBgJHtoZWlnaHR9cHhgIH1cbiAgICAgICAgICAgICAgICA6IG51bGwpLFxuICAgICAgICAgICAgLi4uKGJvcmRlciAhPT0gZGVmYXVsdFRodW1ibmFpbHNQcm9wcy5ib3JkZXJcbiAgICAgICAgICAgICAgICA/IHsgW2Nzc1Zhcihjc3NUaHVtYm5haWxQcmVmaXgoXCJib3JkZXJcIikpXTogYCR7Ym9yZGVyfXB4YCB9XG4gICAgICAgICAgICAgICAgOiBudWxsKSxcbiAgICAgICAgICAgIC4uLihib3JkZXJTdHlsZSA/IHsgW2Nzc1Zhcihjc3NUaHVtYm5haWxQcmVmaXgoXCJib3JkZXJfc3R5bGVcIikpXTogYm9yZGVyU3R5bGUgfSA6IG51bGwpLFxuICAgICAgICAgICAgLi4uKGJvcmRlckNvbG9yID8geyBbY3NzVmFyKGNzc1RodW1ibmFpbFByZWZpeChcImJvcmRlcl9jb2xvclwiKSldOiBib3JkZXJDb2xvciB9IDogbnVsbCksXG4gICAgICAgICAgICAuLi4oYm9yZGVyUmFkaXVzICE9PSBkZWZhdWx0VGh1bWJuYWlsc1Byb3BzLmJvcmRlclJhZGl1c1xuICAgICAgICAgICAgICAgID8geyBbY3NzVmFyKGNzc1RodW1ibmFpbFByZWZpeChcImJvcmRlcl9yYWRpdXNcIikpXTogYCR7Ym9yZGVyUmFkaXVzfXB4YCB9XG4gICAgICAgICAgICAgICAgOiBudWxsKSxcbiAgICAgICAgICAgIC4uLihwYWRkaW5nICE9PSBkZWZhdWx0VGh1bWJuYWlsc1Byb3BzLnBhZGRpbmdcbiAgICAgICAgICAgICAgICA/IHsgW2Nzc1Zhcihjc3NUaHVtYm5haWxQcmVmaXgoXCJwYWRkaW5nXCIpKV06IGAke3BhZGRpbmd9cHhgIH1cbiAgICAgICAgICAgICAgICA6IG51bGwpLFxuICAgICAgICAgICAgLi4uKGdhcCAhPT0gZGVmYXVsdFRodW1ibmFpbHNQcm9wcy5nYXAgPyB7IFtjc3NWYXIoY3NzVGh1bWJuYWlsUHJlZml4KFwiZ2FwXCIpKV06IGAke2dhcH1weGAgfSA6IG51bGwpLFxuICAgICAgICAgICAgLi4uc3R5bGVzLnRodW1ibmFpbHNDb250YWluZXIsXG4gICAgICAgIH0gfSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm5hdlwiLCB7IHJlZjogdHJhY2ssIHN0eWxlOiBzdHlsZXMudGh1bWJuYWlsc1RyYWNrLCBjbGFzc05hbWU6IGNsc3goY3NzQ2xhc3MoY3NzUHJlZml4KFwidHJhY2tcIikpLCBjc3NDbGFzcyhDTEFTU19GTEVYX0NFTlRFUikpLCB0YWJJbmRleDogLTEsIC4uLnJlZ2lzdGVyU2Vuc29ycyB9LCBpdGVtcy5tYXAoKHsga2V5LCBpbmRleCwgc2xpZGUgfSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgZmFkZUFuaW1hdGlvbkR1cmF0aW9uID0gYW5pbWF0aW9uRHVyYXRpb24gLyBNYXRoLmFicyhvZmZzZXQgfHwgMSk7XG4gICAgICAgICAgICBjb25zdCBmYWRlSW4gPSAob2Zmc2V0ID4gMCAmJiBpbmRleCA+IGdsb2JhbEluZGV4ICsgcHJlbG9hZCAtIG9mZnNldCAmJiBpbmRleCA8PSBnbG9iYWxJbmRleCArIHByZWxvYWQpIHx8XG4gICAgICAgICAgICAgICAgKG9mZnNldCA8IDAgJiYgaW5kZXggPCBnbG9iYWxJbmRleCAtIHByZWxvYWQgLSBvZmZzZXQgJiYgaW5kZXggPj0gZ2xvYmFsSW5kZXggLSBwcmVsb2FkKVxuICAgICAgICAgICAgICAgID8ge1xuICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogZmFkZUFuaW1hdGlvbkR1cmF0aW9uLFxuICAgICAgICAgICAgICAgICAgICBkZWxheTogKChvZmZzZXQgPiAwID8gaW5kZXggLSAoZ2xvYmFsSW5kZXggKyBwcmVsb2FkIC0gb2Zmc2V0KSA6IGdsb2JhbEluZGV4IC0gcHJlbG9hZCAtIG9mZnNldCAtIGluZGV4KSAtXG4gICAgICAgICAgICAgICAgICAgICAgICAxKSAqXG4gICAgICAgICAgICAgICAgICAgICAgICBmYWRlQW5pbWF0aW9uRHVyYXRpb24sXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkO1xuICAgICAgICAgICAgY29uc3QgZmFkZU91dCA9IChvZmZzZXQgPiAwICYmIGluZGV4IDwgZ2xvYmFsSW5kZXggLSBwcmVsb2FkKSB8fCAob2Zmc2V0IDwgMCAmJiBpbmRleCA+IGdsb2JhbEluZGV4ICsgcHJlbG9hZClcbiAgICAgICAgICAgICAgICA/IHtcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IGZhZGVBbmltYXRpb25EdXJhdGlvbixcbiAgICAgICAgICAgICAgICAgICAgZGVsYXk6IChvZmZzZXQgPiAwXG4gICAgICAgICAgICAgICAgICAgICAgICA/IG9mZnNldCAtIChnbG9iYWxJbmRleCAtIHByZWxvYWQgLSBpbmRleClcbiAgICAgICAgICAgICAgICAgICAgICAgIDogLW9mZnNldCAtIChpbmRleCAtIChnbG9iYWxJbmRleCArIHByZWxvYWQpKSkgKiBmYWRlQW5pbWF0aW9uRHVyYXRpb24sXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkO1xuICAgICAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFRodW1ibmFpbCwgeyBrZXk6IGtleSwgc2xpZGU6IHNsaWRlLCBhY3RpdmU6IGluZGV4ID09PSBnbG9iYWxJbmRleCwgZmFkZUluOiBmYWRlSW4sIGZhZGVPdXQ6IGZhZGVPdXQsIHBsYWNlaG9sZGVyOiAhc2xpZGUsIG9uQ2xpY2s6IGhhbmRsZUNsaWNrKGluZGV4KSwgb25Mb3NlRm9jdXM6ICgpID0+IHsgdmFyIF9hOyByZXR1cm4gKF9hID0gdHJhY2suY3VycmVudCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmZvY3VzKCk7IH0gfSkpO1xuICAgICAgICB9KSksXG4gICAgICAgIHZpZ25ldHRlICYmIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IGNzc0NsYXNzKGNzc1ByZWZpeChcInZpZ25ldHRlXCIpKSB9KSkpO1xufVxuXG5jb25zdCBUaHVtYm5haWxzQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQobnVsbCk7XG5jb25zdCB1c2VUaHVtYm5haWxzID0gbWFrZVVzZUNvbnRleHQoXCJ1c2VUaHVtYm5haWxzXCIsIFwiVGh1bWJuYWlsc0NvbnRleHRcIiwgVGh1bWJuYWlsc0NvbnRleHQpO1xuZnVuY3Rpb24gVGh1bWJuYWlsc0NvbnRleHRQcm92aWRlcih7IGNoaWxkcmVuLCAuLi5wcm9wcyB9KSB7XG4gICAgY29uc3QgeyByZWYsIHBvc2l0aW9uLCBoaWRkZW4gfSA9IHJlc29sdmVUaHVtYm5haWxzUHJvcHMocHJvcHMudGh1bWJuYWlscyk7XG4gICAgY29uc3QgW3Zpc2libGUsIHNldFZpc2libGVdID0gUmVhY3QudXNlU3RhdGUoIWhpZGRlbik7XG4gICAgY29uc3QgY29udGFpbmVyUmVmID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICAgIGNvbnN0IGNvbnRleHQgPSBSZWFjdC51c2VNZW1vKCgpID0+ICh7XG4gICAgICAgIHZpc2libGUsXG4gICAgICAgIHNob3c6ICgpID0+IHNldFZpc2libGUodHJ1ZSksXG4gICAgICAgIGhpZGU6ICgpID0+IHNldFZpc2libGUoZmFsc2UpLFxuICAgIH0pLCBbdmlzaWJsZV0pO1xuICAgIFJlYWN0LnVzZUltcGVyYXRpdmVIYW5kbGUocmVmLCAoKSA9PiBjb250ZXh0LCBbY29udGV4dF0pO1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChMaWdodGJveFByb3BzUHJvdmlkZXIsIHsgLi4ucHJvcHMgfSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChUaHVtYm5haWxzQ29udGV4dC5Qcm92aWRlciwgeyB2YWx1ZTogY29udGV4dCB9LFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHJlZjogY29udGFpbmVyUmVmLCBjbGFzc05hbWU6IGNsc3goY3NzQ2xhc3MoY3NzUHJlZml4KCkpLCBjc3NDbGFzcyhjc3NQcmVmaXgoYCR7cG9zaXRpb259YCkpKSB9LFxuICAgICAgICAgICAgICAgIFtcInN0YXJ0XCIsIFwidG9wXCJdLmluY2x1ZGVzKHBvc2l0aW9uKSAmJiBSZWFjdC5jcmVhdGVFbGVtZW50KFRodW1ibmFpbHNUcmFjaywgeyBjb250YWluZXJSZWY6IGNvbnRhaW5lclJlZiwgdmlzaWJsZTogdmlzaWJsZSB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBjc3NDbGFzcyhjc3NQcmVmaXgoXCJ3cmFwcGVyXCIpKSB9LCBjaGlsZHJlbiksXG4gICAgICAgICAgICAgICAgW1wiZW5kXCIsIFwiYm90dG9tXCJdLmluY2x1ZGVzKHBvc2l0aW9uKSAmJiBSZWFjdC5jcmVhdGVFbGVtZW50KFRodW1ibmFpbHNUcmFjaywgeyBjb250YWluZXJSZWY6IGNvbnRhaW5lclJlZiwgdmlzaWJsZTogdmlzaWJsZSB9KSkpKSk7XG59XG5cbmNvbnN0IHRodW1ibmFpbHNJY29uID0gKCkgPT4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsXG4gICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwgeyBzdHJva2VXaWR0aDogMiwgc3Ryb2tlOiBcImN1cnJlbnRDb2xvclwiLCBzdHJva2VMaW5lam9pbjogXCJyb3VuZFwiLCBmaWxsOiBcIm5vbmVcIiwgZDogXCJNMyA1bDE4IDBsMCAxNGwtMTggMGwwLTE0elwiIH0pLFxuICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIsIHsgZDogXCJNNSAxNGg0djNoLTR6TTEwIDE0aDR2M2gtNHpNMTUgMTRoNHYzaC00elwiIH0pKSk7XG5jb25zdCBUaHVtYm5haWxzVmlzaWJsZSA9IGNyZWF0ZUljb24oXCJUaHVtYm5haWxzVmlzaWJsZVwiLCB0aHVtYm5haWxzSWNvbigpKTtcbmNvbnN0IFRodW1ibmFpbHNIaWRkZW4gPSBjcmVhdGVJY29uRGlzYWJsZWQoXCJUaHVtYm5haWxzSGlkZGVuXCIsIHRodW1ibmFpbHNJY29uKCkpO1xuZnVuY3Rpb24gVGh1bWJuYWlsc0J1dHRvbigpIHtcbiAgICBjb25zdCB7IHZpc2libGUsIHNob3csIGhpZGUgfSA9IHVzZVRodW1ibmFpbHMoKTtcbiAgICBjb25zdCB7IHJlbmRlciB9ID0gdXNlTGlnaHRib3hQcm9wcygpO1xuICAgIGlmIChyZW5kZXIuYnV0dG9uVGh1bWJuYWlscykge1xuICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCwgcmVuZGVyLmJ1dHRvblRodW1ibmFpbHMoeyB2aXNpYmxlLCBzaG93LCBoaWRlIH0pKTtcbiAgICB9XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KEljb25CdXR0b24sIHsgbGFiZWw6IHZpc2libGUgPyBcIkhpZGUgdGh1bWJuYWlsc1wiIDogXCJTaG93IHRodW1ibmFpbHNcIiwgaWNvbjogdmlzaWJsZSA/IFRodW1ibmFpbHNWaXNpYmxlIDogVGh1bWJuYWlsc0hpZGRlbiwgcmVuZGVySWNvbjogdmlzaWJsZSA/IHJlbmRlci5pY29uVGh1bWJuYWlsc1Zpc2libGUgOiByZW5kZXIuaWNvblRodW1ibmFpbHNIaWRkZW4sIG9uQ2xpY2s6IHZpc2libGUgPyBoaWRlIDogc2hvdyB9KSk7XG59XG5cbmZ1bmN0aW9uIFRodW1ibmFpbHMoeyBhdWdtZW50LCBjb250YWlucywgYXBwZW5kLCBhZGRQYXJlbnQgfSkge1xuICAgIGF1Z21lbnQoKHsgdGh1bWJuYWlsczogdGh1bWJuYWlsc1Byb3BzLCB0b29sYmFyLCAuLi5yZXN0UHJvcHMgfSkgPT4ge1xuICAgICAgICBjb25zdCB0aHVtYm5haWxzID0gcmVzb2x2ZVRodW1ibmFpbHNQcm9wcyh0aHVtYm5haWxzUHJvcHMpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdG9vbGJhcjogYWRkVG9vbGJhckJ1dHRvbih0b29sYmFyLCBQTFVHSU5fVEhVTUJOQUlMUywgdGh1bWJuYWlscy5zaG93VG9nZ2xlID8gUmVhY3QuY3JlYXRlRWxlbWVudChUaHVtYm5haWxzQnV0dG9uLCBudWxsKSA6IG51bGwpLFxuICAgICAgICAgICAgdGh1bWJuYWlscyxcbiAgICAgICAgICAgIC4uLnJlc3RQcm9wcyxcbiAgICAgICAgfTtcbiAgICB9KTtcbiAgICBjb25zdCBtb2R1bGUgPSBjcmVhdGVNb2R1bGUoUExVR0lOX1RIVU1CTkFJTFMsIFRodW1ibmFpbHNDb250ZXh0UHJvdmlkZXIpO1xuICAgIGlmIChjb250YWlucyhQTFVHSU5fRlVMTFNDUkVFTikpIHtcbiAgICAgICAgYXBwZW5kKFBMVUdJTl9GVUxMU0NSRUVOLCBtb2R1bGUpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgYWRkUGFyZW50KE1PRFVMRV9DT05UUk9MTEVSLCBtb2R1bGUpO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgVGh1bWJuYWlscyBhcyBkZWZhdWx0IH07XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VMaWdodGJveFByb3BzIiwiY29tcG9zZVByZWZpeCIsImNyZWF0ZUljb24iLCJJbWFnZVNsaWRlIiwiaXNJbWFnZVNsaWRlIiwiY3NzQ2xhc3MiLCJtYWtlQ29tcG9zZVByZWZpeCIsInVzZURvY3VtZW50Q29udGV4dCIsInVzZUV2ZW50Q2FsbGJhY2siLCJjbHN4IiwiY3NzVmFyIiwiZ2V0U2xpZGVLZXkiLCJ1c2VSVEwiLCJ1c2VFdmVudHMiLCJ1c2VMaWdodGJveFN0YXRlIiwidXNlU2Vuc29ycyIsInVzZUtleWJvYXJkTmF2aWdhdGlvbiIsInVzZUFuaW1hdGlvbiIsImNsZWFudXAiLCJjYWxjdWxhdGVQcmVsb2FkIiwiaGFzU2xpZGVzIiwiZ2V0U2xpZGUiLCJtYWtlVXNlQ29udGV4dCIsIkxpZ2h0Ym94UHJvcHNQcm92aWRlciIsImNyZWF0ZUljb25EaXNhYmxlZCIsIkljb25CdXR0b24iLCJhZGRUb29sYmFyQnV0dG9uIiwiY3JlYXRlTW9kdWxlIiwiUExVR0lOX1RIVU1CTkFJTFMiLCJFTEVNRU5UX0lDT04iLCJDTEFTU19GTEVYX0NFTlRFUiIsIkFDVElPTl9TV0lQRSIsIkFDVElPTl9ORVhUIiwiQUNUSU9OX1BSRVYiLCJQTFVHSU5fRlVMTFNDUkVFTiIsIk1PRFVMRV9DT05UUk9MTEVSIiwiZGVmYXVsdFRodW1ibmFpbHNQcm9wcyIsInJlZiIsInBvc2l0aW9uIiwid2lkdGgiLCJoZWlnaHQiLCJib3JkZXIiLCJib3JkZXJSYWRpdXMiLCJwYWRkaW5nIiwiZ2FwIiwiaW1hZ2VGaXQiLCJ2aWduZXR0ZSIsImhpZGRlbiIsInNob3dUb2dnbGUiLCJyZXNvbHZlVGh1bWJuYWlsc1Byb3BzIiwidGh1bWJuYWlscyIsInVzZVRodW1ibmFpbHNQcm9wcyIsImNzc1ByZWZpeCIsInZhbHVlIiwiY3NzVGh1bWJuYWlsUHJlZml4IiwiVmlkZW9UaHVtYm5haWxJY29uIiwiY3JlYXRlRWxlbWVudCIsImQiLCJVbmtub3duVGh1bWJuYWlsSWNvbiIsInJlbmRlclRodW1ibmFpbCIsInNsaWRlIiwicmVuZGVyIiwicmVjdCIsIl9hIiwiY3VzdG9tVGh1bWJuYWlsIiwidGh1bWJuYWlsIiwiY2FsbCIsImltYWdlU2xpZGVQcm9wcyIsInNyYyIsInRodW1ibmFpbEljb25DbGFzcyIsInR5cGUiLCJGcmFnbWVudCIsInBvc3RlciIsImNsYXNzTmFtZSIsImFjdGl2ZVByZWZpeCIsImZhZGVJblByZWZpeCIsImZhZGVPdXRQcmVmaXgiLCJwbGFjZWhvbGRlclByZWZpeCIsIkRFTEFZIiwiRFVSQVRJT04iLCJUaHVtYm5haWwiLCJvbkNsaWNrIiwiYWN0aXZlIiwiZmFkZUluIiwiZmFkZU91dCIsInBsYWNlaG9sZGVyIiwib25Mb3NlRm9jdXMiLCJ1c2VSZWYiLCJzdHlsZXMiLCJnZXRPd25lckRvY3VtZW50Iiwib25Mb3NlRm9jdXNDYWxsYmFjayIsInVzZUVmZmVjdCIsImFjdGl2ZUVsZW1lbnQiLCJjdXJyZW50Iiwic3R5bGUiLCJkdXJhdGlvbiIsImRlbGF5IiwiaXNIb3Jpem9udGFsIiwiaW5jbHVkZXMiLCJib3hTaXplIiwiZGltZW5zaW9uIiwiZ2V0VGh1bWJuYWlsS2V5IiwidW5kZWZpbmVkIiwiVGh1bWJuYWlsc1RyYWNrIiwidmlzaWJsZSIsImNvbnRhaW5lclJlZiIsInRyYWNrIiwiaXNSVEwiLCJwdWJsaXNoIiwic3Vic2NyaWJlIiwiY2Fyb3VzZWwiLCJzbGlkZXMiLCJnbG9iYWxJbmRleCIsImFuaW1hdGlvbiIsInJlZ2lzdGVyU2Vuc29ycyIsInN1YnNjcmliZVNlbnNvcnMiLCJib3JkZXJTdHlsZSIsImJvcmRlckNvbG9yIiwiYW5pbWF0aW9uRHVyYXRpb24iLCJvZmZzZXQiLCJpbmNyZW1lbnQiLCJwcmVwYXJlQW5pbWF0aW9uIiwic25hcHNob3QiLCJrZXlmcmFtZXMiLCJ0cmFuc2Zvcm0iLCJlYXNpbmciLCJoYW5kbGVDb250cm9sbGVyU3dpcGUiLCJhbmltYXRpb25PZmZzZXQiLCJjb250YWluZXJSZWN0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwidHJhY2tSZWN0IiwibGVmdCIsInRvcCIsInByZWxvYWQiLCJpdGVtcyIsImluZGV4IiwiTWF0aCIsImFicyIsImZpbml0ZSIsImxlbmd0aCIsImtleSIsImZpbHRlciIsIkJvb2xlYW4iLCJqb2luIiwicHVzaCIsImhhbmRsZUNsaWNrIiwic2xpZGVJbmRleCIsImNvdW50IiwiZGlzcGxheSIsInRodW1ibmFpbHNDb250YWluZXIiLCJ0aHVtYm5haWxzVHJhY2siLCJ0YWJJbmRleCIsIm1hcCIsImZhZGVBbmltYXRpb25EdXJhdGlvbiIsImZvY3VzIiwiVGh1bWJuYWlsc0NvbnRleHQiLCJjcmVhdGVDb250ZXh0IiwidXNlVGh1bWJuYWlscyIsIlRodW1ibmFpbHNDb250ZXh0UHJvdmlkZXIiLCJjaGlsZHJlbiIsInByb3BzIiwic2V0VmlzaWJsZSIsInVzZVN0YXRlIiwiY29udGV4dCIsInVzZU1lbW8iLCJzaG93IiwiaGlkZSIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJQcm92aWRlciIsInRodW1ibmFpbHNJY29uIiwic3Ryb2tlV2lkdGgiLCJzdHJva2UiLCJzdHJva2VMaW5lam9pbiIsImZpbGwiLCJUaHVtYm5haWxzVmlzaWJsZSIsIlRodW1ibmFpbHNIaWRkZW4iLCJUaHVtYm5haWxzQnV0dG9uIiwiYnV0dG9uVGh1bWJuYWlscyIsImxhYmVsIiwiaWNvbiIsInJlbmRlckljb24iLCJpY29uVGh1bWJuYWlsc1Zpc2libGUiLCJpY29uVGh1bWJuYWlsc0hpZGRlbiIsIlRodW1ibmFpbHMiLCJhdWdtZW50IiwiY29udGFpbnMiLCJhcHBlbmQiLCJhZGRQYXJlbnQiLCJ0aHVtYm5haWxzUHJvcHMiLCJ0b29sYmFyIiwicmVzdFByb3BzIiwibW9kdWxlIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/thumbnails/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/zoom/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/plugins/zoom/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Zoom)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/index.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../types.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/types.js\");\n\n\n\nconst defaultZoomProps = {\n    maxZoomPixelRatio: 1,\n    zoomInMultiplier: 2,\n    doubleTapDelay: 300,\n    doubleClickDelay: 500,\n    doubleClickMaxStops: 2,\n    keyboardMoveDistance: 50,\n    wheelZoomDistanceFactor: 100,\n    pinchZoomDistanceFactor: 100,\n    scrollToZoom: false\n};\nconst resolveZoomProps = (zoom)=>({\n        ...defaultZoomProps,\n        ...zoom\n    });\nfunction useZoomAnimation(zoom, offsetX, offsetY, zoomWrapperRef) {\n    const zoomAnimation = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const zoomAnimationStart = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const { zoom: zoomAnimationDuration } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)().animation;\n    const reduceMotion = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useMotionPreference)();\n    const playZoomAnimation = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(()=>{\n        var _a, _b, _c;\n        (_a = zoomAnimation.current) === null || _a === void 0 ? void 0 : _a.cancel();\n        zoomAnimation.current = undefined;\n        if (zoomAnimationStart.current && (zoomWrapperRef === null || zoomWrapperRef === void 0 ? void 0 : zoomWrapperRef.current)) {\n            try {\n                zoomAnimation.current = (_c = (_b = zoomWrapperRef.current).animate) === null || _c === void 0 ? void 0 : _c.call(_b, [\n                    {\n                        transform: zoomAnimationStart.current\n                    },\n                    {\n                        transform: `scale(${zoom}) translateX(${offsetX}px) translateY(${offsetY}px)`\n                    }\n                ], {\n                    duration: !reduceMotion ? zoomAnimationDuration !== null && zoomAnimationDuration !== void 0 ? zoomAnimationDuration : 500 : 0,\n                    easing: zoomAnimation.current ? \"ease-out\" : \"ease-in-out\"\n                });\n            } catch (err) {\n                console.error(err);\n            }\n            zoomAnimationStart.current = undefined;\n            if (zoomAnimation.current) {\n                zoomAnimation.current.onfinish = ()=>{\n                    zoomAnimation.current = undefined;\n                };\n            }\n        }\n    });\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(playZoomAnimation, [\n        zoom,\n        offsetX,\n        offsetY,\n        playZoomAnimation\n    ]);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        zoomAnimationStart.current = (zoomWrapperRef === null || zoomWrapperRef === void 0 ? void 0 : zoomWrapperRef.current) ? window.getComputedStyle(zoomWrapperRef.current).transform : undefined;\n    }, [\n        zoomWrapperRef\n    ]);\n}\nfunction useZoomCallback(zoom, disabled) {\n    const { on } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    const onZoomCallback = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(()=>{\n        var _a;\n        if (!disabled) {\n            (_a = on.zoom) === null || _a === void 0 ? void 0 : _a.call(on, {\n                zoom\n            });\n        }\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(onZoomCallback, [\n        zoom,\n        onZoomCallback\n    ]);\n}\nfunction useZoomProps() {\n    const { zoom } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    return resolveZoomProps(zoom);\n}\nfunction useZoomImageRect(slideRect, imageDimensions) {\n    var _a, _b;\n    let imageRect = {\n        width: 0,\n        height: 0\n    };\n    let maxImageRect = {\n        width: 0,\n        height: 0\n    };\n    const { currentSlide } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxState)();\n    const { imageFit } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)().carousel;\n    const { maxZoomPixelRatio } = useZoomProps();\n    if (slideRect && currentSlide) {\n        const slide = {\n            ...currentSlide,\n            ...imageDimensions\n        };\n        if ((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.isImageSlide)(slide)) {\n            const cover = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.isImageFitCover)(slide, imageFit);\n            const width = Math.max(...(((_a = slide.srcSet) === null || _a === void 0 ? void 0 : _a.map((x)=>x.width)) || []).concat(slide.width ? [\n                slide.width\n            ] : []));\n            const height = Math.max(...(((_b = slide.srcSet) === null || _b === void 0 ? void 0 : _b.map((x)=>x.height)) || []).concat(slide.height ? [\n                slide.height\n            ] : []));\n            if (width > 0 && height > 0 && slideRect.width > 0 && slideRect.height > 0) {\n                maxImageRect = cover ? {\n                    width: Math.round(Math.min(width, slideRect.width / slideRect.height * height)),\n                    height: Math.round(Math.min(height, slideRect.height / slideRect.width * width))\n                } : {\n                    width,\n                    height\n                };\n                maxImageRect = {\n                    width: maxImageRect.width * maxZoomPixelRatio,\n                    height: maxImageRect.height * maxZoomPixelRatio\n                };\n                imageRect = cover ? {\n                    width: Math.min(slideRect.width, maxImageRect.width, width),\n                    height: Math.min(slideRect.height, maxImageRect.height, height)\n                } : {\n                    width: Math.round(Math.min(slideRect.width, slideRect.height / height * width, width)),\n                    height: Math.round(Math.min(slideRect.height, slideRect.width / width * height, height))\n                };\n            }\n        }\n    }\n    const maxZoom = imageRect.width ? Math.max((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.round)(maxImageRect.width / imageRect.width, 5), 1) : 1;\n    return {\n        imageRect,\n        maxZoom\n    };\n}\nfunction distance(pointerA, pointerB) {\n    return ((pointerA.clientX - pointerB.clientX) ** 2 + (pointerA.clientY - pointerB.clientY) ** 2) ** 0.5;\n}\nfunction scaleZoom(value, delta, factor = 100, clamp = 2) {\n    return value * Math.min(1 + Math.abs(delta / factor), clamp) ** Math.sign(delta);\n}\nfunction useZoomSensors(zoom, maxZoom, disabled, changeZoom, changeOffsets, zoomWrapperRef) {\n    const activePointers = react__WEBPACK_IMPORTED_MODULE_0__.useRef([]);\n    const lastPointerDown = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const pinchZoomDistance = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const { globalIndex } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxState)();\n    const { getOwnerWindow } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useDocumentContext)();\n    const { containerRef, subscribeSensors } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useController)();\n    const { keyboardMoveDistance, zoomInMultiplier, wheelZoomDistanceFactor, scrollToZoom, doubleTapDelay, doubleClickDelay, doubleClickMaxStops, pinchZoomDistanceFactor } = useZoomProps();\n    const translateCoordinates = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event)=>{\n        if (containerRef.current) {\n            const { pageX, pageY } = event;\n            const { scrollX, scrollY } = getOwnerWindow();\n            const { left, top, width, height } = containerRef.current.getBoundingClientRect();\n            return [\n                pageX - left - scrollX - width / 2,\n                pageY - top - scrollY - height / 2\n            ];\n        }\n        return [];\n    }, [\n        containerRef,\n        getOwnerWindow\n    ]);\n    const onKeyDown = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)((event)=>{\n        const preventDefault = ()=>{\n            event.preventDefault();\n            event.stopPropagation();\n        };\n        if (zoom > 1) {\n            const move = (deltaX, deltaY)=>{\n                preventDefault();\n                changeOffsets(deltaX, deltaY);\n            };\n            if (event.key === \"ArrowDown\") {\n                move(0, keyboardMoveDistance);\n            } else if (event.key === \"ArrowUp\") {\n                move(0, -keyboardMoveDistance);\n            } else if (event.key === \"ArrowLeft\") {\n                move(-keyboardMoveDistance, 0);\n            } else if (event.key === \"ArrowRight\") {\n                move(keyboardMoveDistance, 0);\n            }\n        }\n        const handleChangeZoom = (zoomValue)=>{\n            preventDefault();\n            changeZoom(zoomValue);\n        };\n        const hasMeta = ()=>event.getModifierState(\"Meta\");\n        if (event.key === \"+\" || event.key === \"=\" && hasMeta()) {\n            handleChangeZoom(zoom * zoomInMultiplier);\n        } else if (event.key === \"-\" || event.key === \"_\" && hasMeta()) {\n            handleChangeZoom(zoom / zoomInMultiplier);\n        } else if (event.key === \"0\" && hasMeta()) {\n            handleChangeZoom(1);\n        }\n    });\n    const onWheel = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)((event)=>{\n        if (event.ctrlKey || scrollToZoom) {\n            if (Math.abs(event.deltaY) > Math.abs(event.deltaX)) {\n                event.stopPropagation();\n                changeZoom(scaleZoom(zoom, -event.deltaY, wheelZoomDistanceFactor), true, ...translateCoordinates(event));\n                return;\n            }\n        }\n        if (zoom > 1) {\n            event.stopPropagation();\n            if (!scrollToZoom) {\n                changeOffsets(event.deltaX, event.deltaY);\n            }\n        }\n    });\n    const clearPointer = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event)=>{\n        const pointers = activePointers.current;\n        pointers.splice(0, pointers.length, ...pointers.filter((p)=>p.pointerId !== event.pointerId));\n    }, []);\n    const replacePointer = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event)=>{\n        clearPointer(event);\n        event.persist();\n        activePointers.current.push(event);\n    }, [\n        clearPointer\n    ]);\n    const onPointerDown = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)((event)=>{\n        var _a;\n        const pointers = activePointers.current;\n        if (event.pointerType === \"mouse\" && event.buttons > 1 || !((_a = zoomWrapperRef === null || zoomWrapperRef === void 0 ? void 0 : zoomWrapperRef.current) === null || _a === void 0 ? void 0 : _a.contains(event.target))) {\n            return;\n        }\n        if (zoom > 1) {\n            event.stopPropagation();\n        }\n        const { timeStamp } = event;\n        if (pointers.length === 0 && timeStamp - lastPointerDown.current < (event.pointerType === \"touch\" ? doubleTapDelay : doubleClickDelay)) {\n            lastPointerDown.current = 0;\n            changeZoom(zoom !== maxZoom ? zoom * Math.max(maxZoom ** (1 / doubleClickMaxStops), zoomInMultiplier) : 1, false, ...translateCoordinates(event));\n        } else {\n            lastPointerDown.current = timeStamp;\n        }\n        replacePointer(event);\n        if (pointers.length === 2) {\n            pinchZoomDistance.current = distance(pointers[0], pointers[1]);\n        }\n    });\n    const onPointerMove = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)((event)=>{\n        const pointers = activePointers.current;\n        const activePointer = pointers.find((p)=>p.pointerId === event.pointerId);\n        if (pointers.length === 2 && pinchZoomDistance.current) {\n            event.stopPropagation();\n            replacePointer(event);\n            const currentDistance = distance(pointers[0], pointers[1]);\n            const delta = currentDistance - pinchZoomDistance.current;\n            if (Math.abs(delta) > 0) {\n                changeZoom(scaleZoom(zoom, delta, pinchZoomDistanceFactor), true, ...pointers.map((x)=>translateCoordinates(x)).reduce((acc, coordinate)=>coordinate.map((x, i)=>acc[i] + x / 2)));\n                pinchZoomDistance.current = currentDistance;\n            }\n            return;\n        }\n        if (zoom > 1) {\n            event.stopPropagation();\n            if (activePointer) {\n                if (pointers.length === 1) {\n                    changeOffsets((activePointer.clientX - event.clientX) / zoom, (activePointer.clientY - event.clientY) / zoom);\n                }\n                replacePointer(event);\n            }\n        }\n    });\n    const onPointerUp = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event)=>{\n        const pointers = activePointers.current;\n        if (pointers.length === 2 && pointers.find((p)=>p.pointerId === event.pointerId)) {\n            pinchZoomDistance.current = undefined;\n        }\n        clearPointer(event);\n    }, [\n        clearPointer\n    ]);\n    const cleanupSensors = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        const pointers = activePointers.current;\n        pointers.splice(0, pointers.length);\n        lastPointerDown.current = 0;\n        pinchZoomDistance.current = undefined;\n    }, []);\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.usePointerEvents)(subscribeSensors, onPointerDown, onPointerMove, onPointerUp, disabled);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(cleanupSensors, [\n        globalIndex,\n        cleanupSensors\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (!disabled) {\n            return (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cleanup)(cleanupSensors, subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_KEY_DOWN, onKeyDown), subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_WHEEL, onWheel));\n        }\n        return ()=>{};\n    }, [\n        disabled,\n        subscribeSensors,\n        cleanupSensors,\n        onKeyDown,\n        onWheel\n    ]);\n}\nfunction useZoomState(imageRect, maxZoom, zoomWrapperRef) {\n    const [zoom, setZoom] = react__WEBPACK_IMPORTED_MODULE_0__.useState(1);\n    const [offsetX, setOffsetX] = react__WEBPACK_IMPORTED_MODULE_0__.useState(0);\n    const [offsetY, setOffsetY] = react__WEBPACK_IMPORTED_MODULE_0__.useState(0);\n    const animate = useZoomAnimation(zoom, offsetX, offsetY, zoomWrapperRef);\n    const { currentSlide, globalIndex } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxState)();\n    const { containerRect, slideRect } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useController)();\n    const { zoomInMultiplier } = useZoomProps();\n    const currentSource = currentSlide && (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.isImageSlide)(currentSlide) ? currentSlide.src : undefined;\n    const disabled = !currentSource || !(zoomWrapperRef === null || zoomWrapperRef === void 0 ? void 0 : zoomWrapperRef.current);\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(()=>{\n        setZoom(1);\n        setOffsetX(0);\n        setOffsetY(0);\n    }, [\n        globalIndex,\n        currentSource\n    ]);\n    const changeOffsets = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((dx, dy, targetZoom)=>{\n        const newZoom = targetZoom || zoom;\n        const newOffsetX = offsetX - (dx || 0);\n        const newOffsetY = offsetY - (dy || 0);\n        const maxOffsetX = (imageRect.width * newZoom - slideRect.width) / 2 / newZoom;\n        const maxOffsetY = (imageRect.height * newZoom - slideRect.height) / 2 / newZoom;\n        setOffsetX(Math.min(Math.abs(newOffsetX), Math.max(maxOffsetX, 0)) * Math.sign(newOffsetX));\n        setOffsetY(Math.min(Math.abs(newOffsetY), Math.max(maxOffsetY, 0)) * Math.sign(newOffsetY));\n    }, [\n        zoom,\n        offsetX,\n        offsetY,\n        slideRect,\n        imageRect.width,\n        imageRect.height\n    ]);\n    const changeZoom = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((targetZoom, rapid, dx, dy)=>{\n        const newZoom = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.round)(Math.min(Math.max(targetZoom + 0.001 < maxZoom ? targetZoom : maxZoom, 1), maxZoom), 5);\n        if (newZoom === zoom) return;\n        if (!rapid) {\n            animate();\n        }\n        changeOffsets(dx ? dx * (1 / zoom - 1 / newZoom) : 0, dy ? dy * (1 / zoom - 1 / newZoom) : 0, newZoom);\n        setZoom(newZoom);\n    }, [\n        zoom,\n        maxZoom,\n        changeOffsets,\n        animate\n    ]);\n    const handleControllerRectChange = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(()=>{\n        if (zoom > 1) {\n            if (zoom > maxZoom) {\n                changeZoom(maxZoom, true);\n            }\n            changeOffsets();\n        }\n    });\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(handleControllerRectChange, [\n        containerRect.width,\n        containerRect.height,\n        handleControllerRectChange\n    ]);\n    const zoomIn = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>changeZoom(zoom * zoomInMultiplier), [\n        zoom,\n        zoomInMultiplier,\n        changeZoom\n    ]);\n    const zoomOut = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>changeZoom(zoom / zoomInMultiplier), [\n        zoom,\n        zoomInMultiplier,\n        changeZoom\n    ]);\n    return {\n        zoom,\n        offsetX,\n        offsetY,\n        disabled,\n        changeOffsets,\n        changeZoom,\n        zoomIn,\n        zoomOut\n    };\n}\nconst ZoomControllerContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useZoom = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.makeUseContext)(\"useZoom\", \"ZoomControllerContext\", ZoomControllerContext);\nfunction ZoomContextProvider({ children }) {\n    const [zoomWrapper, setZoomWrapper] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const { slideRect } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useController)();\n    const { imageRect, maxZoom } = useZoomImageRect(slideRect, zoomWrapper === null || zoomWrapper === void 0 ? void 0 : zoomWrapper.imageDimensions);\n    const { zoom, offsetX, offsetY, disabled, changeZoom, changeOffsets, zoomIn, zoomOut } = useZoomState(imageRect, maxZoom, zoomWrapper === null || zoomWrapper === void 0 ? void 0 : zoomWrapper.zoomWrapperRef);\n    useZoomCallback(zoom, disabled);\n    useZoomSensors(zoom, maxZoom, disabled, changeZoom, changeOffsets, zoomWrapper === null || zoomWrapper === void 0 ? void 0 : zoomWrapper.zoomWrapperRef);\n    const zoomRef = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>({\n            zoom,\n            maxZoom,\n            offsetX,\n            offsetY,\n            disabled,\n            zoomIn,\n            zoomOut,\n            changeZoom\n        }), [\n        zoom,\n        maxZoom,\n        offsetX,\n        offsetY,\n        disabled,\n        zoomIn,\n        zoomOut,\n        changeZoom\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle(useZoomProps().ref, ()=>zoomRef, [\n        zoomRef\n    ]);\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>({\n            ...zoomRef,\n            setZoomWrapper\n        }), [\n        zoomRef,\n        setZoomWrapper\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ZoomControllerContext.Provider, {\n        value: context\n    }, children);\n}\nconst ZoomInIcon = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIcon)(\"ZoomIn\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z\"\n})));\nconst ZoomOutIcon = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIcon)(\"ZoomOut\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zM7 9h5v1H7z\"\n}));\nconst ZoomButton = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function ZoomButton({ zoomIn, onLoseFocus }, ref) {\n    const wasEnabled = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const wasFocused = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const { zoom, maxZoom, zoomIn: zoomInCallback, zoomOut: zoomOutCallback, disabled: zoomDisabled } = useZoom();\n    const { render } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    const disabled = zoomDisabled || (zoomIn ? zoom >= maxZoom : zoom <= 1);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (disabled && wasEnabled.current && wasFocused.current) {\n            onLoseFocus();\n        }\n        if (!disabled) {\n            wasEnabled.current = true;\n        }\n    }, [\n        disabled,\n        onLoseFocus\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.IconButton, {\n        ref: ref,\n        disabled: disabled,\n        label: zoomIn ? \"Zoom in\" : \"Zoom out\",\n        icon: zoomIn ? ZoomInIcon : ZoomOutIcon,\n        renderIcon: zoomIn ? render.iconZoomIn : render.iconZoomOut,\n        onClick: zoomIn ? zoomInCallback : zoomOutCallback,\n        onFocus: ()=>{\n            wasFocused.current = true;\n        },\n        onBlur: ()=>{\n            wasFocused.current = false;\n        }\n    });\n});\nfunction ZoomButtonsGroup() {\n    const zoomInRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const zoomOutRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const { focus } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useController)();\n    const focusSibling = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((sibling)=>{\n        var _a, _b;\n        if (!((_a = sibling.current) === null || _a === void 0 ? void 0 : _a.disabled)) {\n            (_b = sibling.current) === null || _b === void 0 ? void 0 : _b.focus();\n        } else {\n            focus();\n        }\n    }, [\n        focus\n    ]);\n    const focusZoomIn = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>focusSibling(zoomInRef), [\n        focusSibling\n    ]);\n    const focusZoomOut = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>focusSibling(zoomOutRef), [\n        focusSibling\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ZoomButton, {\n        zoomIn: true,\n        ref: zoomInRef,\n        onLoseFocus: focusZoomOut\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ZoomButton, {\n        ref: zoomOutRef,\n        onLoseFocus: focusZoomIn\n    }));\n}\nfunction ZoomToolbarControl() {\n    const { render } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    const zoomRef = useZoom();\n    if (render.buttonZoom) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, render.buttonZoom(zoomRef));\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ZoomButtonsGroup, null);\n}\nfunction isResponsiveImageSlide(slide) {\n    var _a;\n    return (((_a = slide.srcSet) === null || _a === void 0 ? void 0 : _a.length) || 0) > 0;\n}\nfunction reducer({ current, preload }, { type, source }) {\n    switch(type){\n        case \"fetch\":\n            if (!current) {\n                return {\n                    current: source\n                };\n            }\n            return {\n                current,\n                preload: source\n            };\n        case \"done\":\n            if (source === preload) {\n                return {\n                    current: source\n                };\n            }\n            return {\n                current,\n                preload\n            };\n        default:\n            throw new Error(_types_js__WEBPACK_IMPORTED_MODULE_2__.UNKNOWN_ACTION_TYPE);\n    }\n}\nfunction ResponsiveImage(props) {\n    var _a, _b;\n    const [{ current, preload }, dispatch] = react__WEBPACK_IMPORTED_MODULE_0__.useReducer(reducer, {});\n    const { slide: image, rect, imageFit, render, interactive } = props;\n    const srcSet = image.srcSet.sort((a, b)=>a.width - b.width);\n    const width = (_a = image.width) !== null && _a !== void 0 ? _a : srcSet[srcSet.length - 1].width;\n    const height = (_b = image.height) !== null && _b !== void 0 ? _b : srcSet[srcSet.length - 1].height;\n    const cover = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.isImageFitCover)(image, imageFit);\n    const maxWidth = Math.max(...srcSet.map((x)=>x.width));\n    const targetWidth = Math.min((cover ? Math.max : Math.min)(rect.width, width * (rect.height / height)), maxWidth);\n    const pixelDensity = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.devicePixelRatio)();\n    const handleResize = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(()=>{\n        var _a;\n        const targetSource = (_a = srcSet.find((x)=>x.width >= targetWidth * pixelDensity)) !== null && _a !== void 0 ? _a : srcSet[srcSet.length - 1];\n        if (!current || srcSet.findIndex((x)=>x.src === current) < srcSet.findIndex((x)=>x === targetSource)) {\n            dispatch({\n                type: \"fetch\",\n                source: targetSource.src\n            });\n        }\n    });\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(handleResize, [\n        rect.width,\n        rect.height,\n        pixelDensity,\n        handleResize\n    ]);\n    const handlePreload = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)((currentPreload)=>dispatch({\n            type: \"done\",\n            source: currentPreload\n        }));\n    const style = {\n        WebkitTransform: !interactive ? \"translateZ(0)\" : \"initial\"\n    };\n    if (!cover) {\n        Object.assign(style, rect.width / rect.height < width / height ? {\n            width: \"100%\",\n            height: \"auto\"\n        } : {\n            width: \"auto\",\n            height: \"100%\"\n        });\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, preload && preload !== current && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.ImageSlide, {\n        key: \"preload\",\n        ...props,\n        slide: {\n            ...image,\n            src: preload,\n            srcSet: undefined\n        },\n        style: {\n            position: \"absolute\",\n            visibility: \"hidden\",\n            ...style\n        },\n        onLoad: ()=>handlePreload(preload),\n        render: {\n            ...render,\n            iconLoading: ()=>null,\n            iconError: ()=>null\n        }\n    }), current && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.ImageSlide, {\n        key: \"current\",\n        ...props,\n        slide: {\n            ...image,\n            src: current,\n            srcSet: undefined\n        },\n        style: style\n    }));\n}\nfunction ZoomWrapper({ render, slide, offset, rect }) {\n    var _a;\n    const [imageDimensions, setImageDimensions] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const zoomWrapperRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const { zoom, maxZoom, offsetX, offsetY, setZoomWrapper } = useZoom();\n    const interactive = zoom > 1;\n    const { carousel, on } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    const { currentIndex } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxState)();\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(()=>{\n        if (offset === 0) {\n            setZoomWrapper({\n                zoomWrapperRef,\n                imageDimensions\n            });\n            return ()=>setZoomWrapper(undefined);\n        }\n        return ()=>{};\n    }, [\n        offset,\n        imageDimensions,\n        setZoomWrapper\n    ]);\n    let rendered = (_a = render.slide) === null || _a === void 0 ? void 0 : _a.call(render, {\n        slide,\n        offset,\n        rect,\n        zoom,\n        maxZoom\n    });\n    if (!rendered && (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.isImageSlide)(slide)) {\n        const slideProps = {\n            slide,\n            offset,\n            rect,\n            render,\n            imageFit: carousel.imageFit,\n            imageProps: carousel.imageProps,\n            onClick: offset === 0 ? ()=>{\n                var _a;\n                return (_a = on.click) === null || _a === void 0 ? void 0 : _a.call(on, {\n                    index: currentIndex\n                });\n            } : undefined\n        };\n        rendered = isResponsiveImageSlide(slide) ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ResponsiveImage, {\n            ...slideProps,\n            slide: slide,\n            interactive: interactive,\n            rect: offset === 0 ? {\n                width: rect.width * zoom,\n                height: rect.height * zoom\n            } : rect\n        }) : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.ImageSlide, {\n            onLoad: (img)=>setImageDimensions({\n                    width: img.naturalWidth,\n                    height: img.naturalHeight\n                }),\n            ...slideProps\n        });\n    }\n    if (!rendered) return null;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: zoomWrapperRef,\n        className: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.clsx)((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FULLSIZE), (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FLEX_CENTER), (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_SLIDE_WRAPPER), interactive && (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_SLIDE_WRAPPER_INTERACTIVE)),\n        style: offset === 0 ? {\n            transform: `scale(${zoom}) translateX(${offsetX}px) translateY(${offsetY}px)`\n        } : undefined\n    }, rendered);\n}\nconst Zoom = ({ augment, addModule })=>{\n    augment(({ zoom: zoomProps, toolbar, render, controller, ...restProps })=>{\n        const zoom = resolveZoomProps(zoomProps);\n        return {\n            zoom,\n            toolbar: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addToolbarButton)(toolbar, _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_ZOOM, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ZoomToolbarControl, null)),\n            render: {\n                ...render,\n                slide: (props)=>{\n                    var _a;\n                    return (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.isImageSlide)(props.slide) ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ZoomWrapper, {\n                        render: render,\n                        ...props\n                    }) : (_a = render.slide) === null || _a === void 0 ? void 0 : _a.call(render, props);\n                }\n            },\n            controller: {\n                ...controller,\n                preventDefaultWheelY: zoom.scrollToZoom\n            },\n            ...restProps\n        };\n    });\n    addModule((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createModule)(_types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_ZOOM, ZoomContextProvider));\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/zoom/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/types.js":
/*!***************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/types.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACTION_CLOSE: () => (/* binding */ ACTION_CLOSE),\n/* harmony export */   ACTION_NEXT: () => (/* binding */ ACTION_NEXT),\n/* harmony export */   ACTION_PREV: () => (/* binding */ ACTION_PREV),\n/* harmony export */   ACTION_SWIPE: () => (/* binding */ ACTION_SWIPE),\n/* harmony export */   ACTIVE_SLIDE_COMPLETE: () => (/* binding */ ACTIVE_SLIDE_COMPLETE),\n/* harmony export */   ACTIVE_SLIDE_ERROR: () => (/* binding */ ACTIVE_SLIDE_ERROR),\n/* harmony export */   ACTIVE_SLIDE_LOADING: () => (/* binding */ ACTIVE_SLIDE_LOADING),\n/* harmony export */   ACTIVE_SLIDE_PLAYING: () => (/* binding */ ACTIVE_SLIDE_PLAYING),\n/* harmony export */   CLASS_FLEX_CENTER: () => (/* binding */ CLASS_FLEX_CENTER),\n/* harmony export */   CLASS_FULLSIZE: () => (/* binding */ CLASS_FULLSIZE),\n/* harmony export */   CLASS_NO_SCROLL: () => (/* binding */ CLASS_NO_SCROLL),\n/* harmony export */   CLASS_NO_SCROLL_PADDING: () => (/* binding */ CLASS_NO_SCROLL_PADDING),\n/* harmony export */   CLASS_SLIDE_WRAPPER: () => (/* binding */ CLASS_SLIDE_WRAPPER),\n/* harmony export */   CLASS_SLIDE_WRAPPER_INTERACTIVE: () => (/* binding */ CLASS_SLIDE_WRAPPER_INTERACTIVE),\n/* harmony export */   ELEMENT_BUTTON: () => (/* binding */ ELEMENT_BUTTON),\n/* harmony export */   ELEMENT_ICON: () => (/* binding */ ELEMENT_ICON),\n/* harmony export */   EVENT_ON_KEY_DOWN: () => (/* binding */ EVENT_ON_KEY_DOWN),\n/* harmony export */   EVENT_ON_KEY_UP: () => (/* binding */ EVENT_ON_KEY_UP),\n/* harmony export */   EVENT_ON_POINTER_CANCEL: () => (/* binding */ EVENT_ON_POINTER_CANCEL),\n/* harmony export */   EVENT_ON_POINTER_DOWN: () => (/* binding */ EVENT_ON_POINTER_DOWN),\n/* harmony export */   EVENT_ON_POINTER_LEAVE: () => (/* binding */ EVENT_ON_POINTER_LEAVE),\n/* harmony export */   EVENT_ON_POINTER_MOVE: () => (/* binding */ EVENT_ON_POINTER_MOVE),\n/* harmony export */   EVENT_ON_POINTER_UP: () => (/* binding */ EVENT_ON_POINTER_UP),\n/* harmony export */   EVENT_ON_WHEEL: () => (/* binding */ EVENT_ON_WHEEL),\n/* harmony export */   IMAGE_FIT_CONTAIN: () => (/* binding */ IMAGE_FIT_CONTAIN),\n/* harmony export */   IMAGE_FIT_COVER: () => (/* binding */ IMAGE_FIT_COVER),\n/* harmony export */   MODULE_CAROUSEL: () => (/* binding */ MODULE_CAROUSEL),\n/* harmony export */   MODULE_CONTROLLER: () => (/* binding */ MODULE_CONTROLLER),\n/* harmony export */   MODULE_NAVIGATION: () => (/* binding */ MODULE_NAVIGATION),\n/* harmony export */   MODULE_NO_SCROLL: () => (/* binding */ MODULE_NO_SCROLL),\n/* harmony export */   MODULE_PORTAL: () => (/* binding */ MODULE_PORTAL),\n/* harmony export */   MODULE_ROOT: () => (/* binding */ MODULE_ROOT),\n/* harmony export */   MODULE_TOOLBAR: () => (/* binding */ MODULE_TOOLBAR),\n/* harmony export */   PLUGIN_CAPTIONS: () => (/* binding */ PLUGIN_CAPTIONS),\n/* harmony export */   PLUGIN_COUNTER: () => (/* binding */ PLUGIN_COUNTER),\n/* harmony export */   PLUGIN_DOWNLOAD: () => (/* binding */ PLUGIN_DOWNLOAD),\n/* harmony export */   PLUGIN_FULLSCREEN: () => (/* binding */ PLUGIN_FULLSCREEN),\n/* harmony export */   PLUGIN_INLINE: () => (/* binding */ PLUGIN_INLINE),\n/* harmony export */   PLUGIN_SHARE: () => (/* binding */ PLUGIN_SHARE),\n/* harmony export */   PLUGIN_SLIDESHOW: () => (/* binding */ PLUGIN_SLIDESHOW),\n/* harmony export */   PLUGIN_THUMBNAILS: () => (/* binding */ PLUGIN_THUMBNAILS),\n/* harmony export */   PLUGIN_ZOOM: () => (/* binding */ PLUGIN_ZOOM),\n/* harmony export */   SLIDE_STATUS_COMPLETE: () => (/* binding */ SLIDE_STATUS_COMPLETE),\n/* harmony export */   SLIDE_STATUS_ERROR: () => (/* binding */ SLIDE_STATUS_ERROR),\n/* harmony export */   SLIDE_STATUS_LOADING: () => (/* binding */ SLIDE_STATUS_LOADING),\n/* harmony export */   SLIDE_STATUS_PLACEHOLDER: () => (/* binding */ SLIDE_STATUS_PLACEHOLDER),\n/* harmony export */   SLIDE_STATUS_PLAYING: () => (/* binding */ SLIDE_STATUS_PLAYING),\n/* harmony export */   UNKNOWN_ACTION_TYPE: () => (/* binding */ UNKNOWN_ACTION_TYPE),\n/* harmony export */   VK_ARROW_LEFT: () => (/* binding */ VK_ARROW_LEFT),\n/* harmony export */   VK_ARROW_RIGHT: () => (/* binding */ VK_ARROW_RIGHT),\n/* harmony export */   VK_ESCAPE: () => (/* binding */ VK_ESCAPE),\n/* harmony export */   activeSlideStatus: () => (/* binding */ activeSlideStatus)\n/* harmony export */ });\nconst MODULE_CAROUSEL = \"carousel\";\nconst MODULE_CONTROLLER = \"controller\";\nconst MODULE_NAVIGATION = \"navigation\";\nconst MODULE_NO_SCROLL = \"no-scroll\";\nconst MODULE_PORTAL = \"portal\";\nconst MODULE_ROOT = \"root\";\nconst MODULE_TOOLBAR = \"toolbar\";\nconst PLUGIN_CAPTIONS = \"captions\";\nconst PLUGIN_COUNTER = \"counter\";\nconst PLUGIN_DOWNLOAD = \"download\";\nconst PLUGIN_FULLSCREEN = \"fullscreen\";\nconst PLUGIN_INLINE = \"inline\";\nconst PLUGIN_SHARE = \"share\";\nconst PLUGIN_SLIDESHOW = \"slideshow\";\nconst PLUGIN_THUMBNAILS = \"thumbnails\";\nconst PLUGIN_ZOOM = \"zoom\";\nconst SLIDE_STATUS_LOADING = \"loading\";\nconst SLIDE_STATUS_PLAYING = \"playing\";\nconst SLIDE_STATUS_ERROR = \"error\";\nconst SLIDE_STATUS_COMPLETE = \"complete\";\nconst SLIDE_STATUS_PLACEHOLDER = \"placeholder\";\nconst activeSlideStatus = (status)=>`active-slide-${status}`;\nconst ACTIVE_SLIDE_LOADING = activeSlideStatus(SLIDE_STATUS_LOADING);\nconst ACTIVE_SLIDE_PLAYING = activeSlideStatus(SLIDE_STATUS_PLAYING);\nconst ACTIVE_SLIDE_ERROR = activeSlideStatus(SLIDE_STATUS_ERROR);\nconst ACTIVE_SLIDE_COMPLETE = activeSlideStatus(SLIDE_STATUS_COMPLETE);\nconst CLASS_FULLSIZE = \"fullsize\";\nconst CLASS_FLEX_CENTER = \"flex_center\";\nconst CLASS_NO_SCROLL = \"no_scroll\";\nconst CLASS_NO_SCROLL_PADDING = \"no_scroll_padding\";\nconst CLASS_SLIDE_WRAPPER = \"slide_wrapper\";\nconst CLASS_SLIDE_WRAPPER_INTERACTIVE = \"slide_wrapper_interactive\";\nconst ACTION_PREV = \"prev\";\nconst ACTION_NEXT = \"next\";\nconst ACTION_SWIPE = \"swipe\";\nconst ACTION_CLOSE = \"close\";\nconst EVENT_ON_POINTER_DOWN = \"onPointerDown\";\nconst EVENT_ON_POINTER_MOVE = \"onPointerMove\";\nconst EVENT_ON_POINTER_UP = \"onPointerUp\";\nconst EVENT_ON_POINTER_LEAVE = \"onPointerLeave\";\nconst EVENT_ON_POINTER_CANCEL = \"onPointerCancel\";\nconst EVENT_ON_KEY_DOWN = \"onKeyDown\";\nconst EVENT_ON_KEY_UP = \"onKeyUp\";\nconst EVENT_ON_WHEEL = \"onWheel\";\nconst VK_ESCAPE = \"Escape\";\nconst VK_ARROW_LEFT = \"ArrowLeft\";\nconst VK_ARROW_RIGHT = \"ArrowRight\";\nconst ELEMENT_BUTTON = \"button\";\nconst ELEMENT_ICON = \"icon\";\nconst IMAGE_FIT_CONTAIN = \"contain\";\nconst IMAGE_FIT_COVER = \"cover\";\nconst UNKNOWN_ACTION_TYPE = \"Unknown action type\";\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveWV0LWFub3RoZXItcmVhY3QtbGlnaHRib3gvZGlzdC90eXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsTUFBTUEsa0JBQWtCO0FBQ3hCLE1BQU1DLG9CQUFvQjtBQUMxQixNQUFNQyxvQkFBb0I7QUFDMUIsTUFBTUMsbUJBQW1CO0FBQ3pCLE1BQU1DLGdCQUFnQjtBQUN0QixNQUFNQyxjQUFjO0FBQ3BCLE1BQU1DLGlCQUFpQjtBQUN2QixNQUFNQyxrQkFBa0I7QUFDeEIsTUFBTUMsaUJBQWlCO0FBQ3ZCLE1BQU1DLGtCQUFrQjtBQUN4QixNQUFNQyxvQkFBb0I7QUFDMUIsTUFBTUMsZ0JBQWdCO0FBQ3RCLE1BQU1DLGVBQWU7QUFDckIsTUFBTUMsbUJBQW1CO0FBQ3pCLE1BQU1DLG9CQUFvQjtBQUMxQixNQUFNQyxjQUFjO0FBQ3BCLE1BQU1DLHVCQUF1QjtBQUM3QixNQUFNQyx1QkFBdUI7QUFDN0IsTUFBTUMscUJBQXFCO0FBQzNCLE1BQU1DLHdCQUF3QjtBQUM5QixNQUFNQywyQkFBMkI7QUFDakMsTUFBTUMsb0JBQW9CLENBQUNDLFNBQVcsQ0FBQyxhQUFhLEVBQUVBLE9BQU8sQ0FBQztBQUM5RCxNQUFNQyx1QkFBdUJGLGtCQUFrQkw7QUFDL0MsTUFBTVEsdUJBQXVCSCxrQkFBa0JKO0FBQy9DLE1BQU1RLHFCQUFxQkosa0JBQWtCSDtBQUM3QyxNQUFNUSx3QkFBd0JMLGtCQUFrQkY7QUFDaEQsTUFBTVEsaUJBQWlCO0FBQ3ZCLE1BQU1DLG9CQUFvQjtBQUMxQixNQUFNQyxrQkFBa0I7QUFDeEIsTUFBTUMsMEJBQTBCO0FBQ2hDLE1BQU1DLHNCQUFzQjtBQUM1QixNQUFNQyxrQ0FBa0M7QUFDeEMsTUFBTUMsY0FBYztBQUNwQixNQUFNQyxjQUFjO0FBQ3BCLE1BQU1DLGVBQWU7QUFDckIsTUFBTUMsZUFBZTtBQUNyQixNQUFNQyx3QkFBd0I7QUFDOUIsTUFBTUMsd0JBQXdCO0FBQzlCLE1BQU1DLHNCQUFzQjtBQUM1QixNQUFNQyx5QkFBeUI7QUFDL0IsTUFBTUMsMEJBQTBCO0FBQ2hDLE1BQU1DLG9CQUFvQjtBQUMxQixNQUFNQyxrQkFBa0I7QUFDeEIsTUFBTUMsaUJBQWlCO0FBQ3ZCLE1BQU1DLFlBQVk7QUFDbEIsTUFBTUMsZ0JBQWdCO0FBQ3RCLE1BQU1DLGlCQUFpQjtBQUN2QixNQUFNQyxpQkFBaUI7QUFDdkIsTUFBTUMsZUFBZTtBQUNyQixNQUFNQyxvQkFBb0I7QUFDMUIsTUFBTUMsa0JBQWtCO0FBQ3hCLE1BQU1DLHNCQUFzQjtBQUVvN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nZ21hLy4vbm9kZV9tb2R1bGVzL3lldC1hbm90aGVyLXJlYWN0LWxpZ2h0Ym94L2Rpc3QvdHlwZXMuanM/YzJlNyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBNT0RVTEVfQ0FST1VTRUwgPSBcImNhcm91c2VsXCI7XG5jb25zdCBNT0RVTEVfQ09OVFJPTExFUiA9IFwiY29udHJvbGxlclwiO1xuY29uc3QgTU9EVUxFX05BVklHQVRJT04gPSBcIm5hdmlnYXRpb25cIjtcbmNvbnN0IE1PRFVMRV9OT19TQ1JPTEwgPSBcIm5vLXNjcm9sbFwiO1xuY29uc3QgTU9EVUxFX1BPUlRBTCA9IFwicG9ydGFsXCI7XG5jb25zdCBNT0RVTEVfUk9PVCA9IFwicm9vdFwiO1xuY29uc3QgTU9EVUxFX1RPT0xCQVIgPSBcInRvb2xiYXJcIjtcbmNvbnN0IFBMVUdJTl9DQVBUSU9OUyA9IFwiY2FwdGlvbnNcIjtcbmNvbnN0IFBMVUdJTl9DT1VOVEVSID0gXCJjb3VudGVyXCI7XG5jb25zdCBQTFVHSU5fRE9XTkxPQUQgPSBcImRvd25sb2FkXCI7XG5jb25zdCBQTFVHSU5fRlVMTFNDUkVFTiA9IFwiZnVsbHNjcmVlblwiO1xuY29uc3QgUExVR0lOX0lOTElORSA9IFwiaW5saW5lXCI7XG5jb25zdCBQTFVHSU5fU0hBUkUgPSBcInNoYXJlXCI7XG5jb25zdCBQTFVHSU5fU0xJREVTSE9XID0gXCJzbGlkZXNob3dcIjtcbmNvbnN0IFBMVUdJTl9USFVNQk5BSUxTID0gXCJ0aHVtYm5haWxzXCI7XG5jb25zdCBQTFVHSU5fWk9PTSA9IFwiem9vbVwiO1xuY29uc3QgU0xJREVfU1RBVFVTX0xPQURJTkcgPSBcImxvYWRpbmdcIjtcbmNvbnN0IFNMSURFX1NUQVRVU19QTEFZSU5HID0gXCJwbGF5aW5nXCI7XG5jb25zdCBTTElERV9TVEFUVVNfRVJST1IgPSBcImVycm9yXCI7XG5jb25zdCBTTElERV9TVEFUVVNfQ09NUExFVEUgPSBcImNvbXBsZXRlXCI7XG5jb25zdCBTTElERV9TVEFUVVNfUExBQ0VIT0xERVIgPSBcInBsYWNlaG9sZGVyXCI7XG5jb25zdCBhY3RpdmVTbGlkZVN0YXR1cyA9IChzdGF0dXMpID0+IGBhY3RpdmUtc2xpZGUtJHtzdGF0dXN9YDtcbmNvbnN0IEFDVElWRV9TTElERV9MT0FESU5HID0gYWN0aXZlU2xpZGVTdGF0dXMoU0xJREVfU1RBVFVTX0xPQURJTkcpO1xuY29uc3QgQUNUSVZFX1NMSURFX1BMQVlJTkcgPSBhY3RpdmVTbGlkZVN0YXR1cyhTTElERV9TVEFUVVNfUExBWUlORyk7XG5jb25zdCBBQ1RJVkVfU0xJREVfRVJST1IgPSBhY3RpdmVTbGlkZVN0YXR1cyhTTElERV9TVEFUVVNfRVJST1IpO1xuY29uc3QgQUNUSVZFX1NMSURFX0NPTVBMRVRFID0gYWN0aXZlU2xpZGVTdGF0dXMoU0xJREVfU1RBVFVTX0NPTVBMRVRFKTtcbmNvbnN0IENMQVNTX0ZVTExTSVpFID0gXCJmdWxsc2l6ZVwiO1xuY29uc3QgQ0xBU1NfRkxFWF9DRU5URVIgPSBcImZsZXhfY2VudGVyXCI7XG5jb25zdCBDTEFTU19OT19TQ1JPTEwgPSBcIm5vX3Njcm9sbFwiO1xuY29uc3QgQ0xBU1NfTk9fU0NST0xMX1BBRERJTkcgPSBcIm5vX3Njcm9sbF9wYWRkaW5nXCI7XG5jb25zdCBDTEFTU19TTElERV9XUkFQUEVSID0gXCJzbGlkZV93cmFwcGVyXCI7XG5jb25zdCBDTEFTU19TTElERV9XUkFQUEVSX0lOVEVSQUNUSVZFID0gXCJzbGlkZV93cmFwcGVyX2ludGVyYWN0aXZlXCI7XG5jb25zdCBBQ1RJT05fUFJFViA9IFwicHJldlwiO1xuY29uc3QgQUNUSU9OX05FWFQgPSBcIm5leHRcIjtcbmNvbnN0IEFDVElPTl9TV0lQRSA9IFwic3dpcGVcIjtcbmNvbnN0IEFDVElPTl9DTE9TRSA9IFwiY2xvc2VcIjtcbmNvbnN0IEVWRU5UX09OX1BPSU5URVJfRE9XTiA9IFwib25Qb2ludGVyRG93blwiO1xuY29uc3QgRVZFTlRfT05fUE9JTlRFUl9NT1ZFID0gXCJvblBvaW50ZXJNb3ZlXCI7XG5jb25zdCBFVkVOVF9PTl9QT0lOVEVSX1VQID0gXCJvblBvaW50ZXJVcFwiO1xuY29uc3QgRVZFTlRfT05fUE9JTlRFUl9MRUFWRSA9IFwib25Qb2ludGVyTGVhdmVcIjtcbmNvbnN0IEVWRU5UX09OX1BPSU5URVJfQ0FOQ0VMID0gXCJvblBvaW50ZXJDYW5jZWxcIjtcbmNvbnN0IEVWRU5UX09OX0tFWV9ET1dOID0gXCJvbktleURvd25cIjtcbmNvbnN0IEVWRU5UX09OX0tFWV9VUCA9IFwib25LZXlVcFwiO1xuY29uc3QgRVZFTlRfT05fV0hFRUwgPSBcIm9uV2hlZWxcIjtcbmNvbnN0IFZLX0VTQ0FQRSA9IFwiRXNjYXBlXCI7XG5jb25zdCBWS19BUlJPV19MRUZUID0gXCJBcnJvd0xlZnRcIjtcbmNvbnN0IFZLX0FSUk9XX1JJR0hUID0gXCJBcnJvd1JpZ2h0XCI7XG5jb25zdCBFTEVNRU5UX0JVVFRPTiA9IFwiYnV0dG9uXCI7XG5jb25zdCBFTEVNRU5UX0lDT04gPSBcImljb25cIjtcbmNvbnN0IElNQUdFX0ZJVF9DT05UQUlOID0gXCJjb250YWluXCI7XG5jb25zdCBJTUFHRV9GSVRfQ09WRVIgPSBcImNvdmVyXCI7XG5jb25zdCBVTktOT1dOX0FDVElPTl9UWVBFID0gXCJVbmtub3duIGFjdGlvbiB0eXBlXCI7XG5cbmV4cG9ydCB7IEFDVElPTl9DTE9TRSwgQUNUSU9OX05FWFQsIEFDVElPTl9QUkVWLCBBQ1RJT05fU1dJUEUsIEFDVElWRV9TTElERV9DT01QTEVURSwgQUNUSVZFX1NMSURFX0VSUk9SLCBBQ1RJVkVfU0xJREVfTE9BRElORywgQUNUSVZFX1NMSURFX1BMQVlJTkcsIENMQVNTX0ZMRVhfQ0VOVEVSLCBDTEFTU19GVUxMU0laRSwgQ0xBU1NfTk9fU0NST0xMLCBDTEFTU19OT19TQ1JPTExfUEFERElORywgQ0xBU1NfU0xJREVfV1JBUFBFUiwgQ0xBU1NfU0xJREVfV1JBUFBFUl9JTlRFUkFDVElWRSwgRUxFTUVOVF9CVVRUT04sIEVMRU1FTlRfSUNPTiwgRVZFTlRfT05fS0VZX0RPV04sIEVWRU5UX09OX0tFWV9VUCwgRVZFTlRfT05fUE9JTlRFUl9DQU5DRUwsIEVWRU5UX09OX1BPSU5URVJfRE9XTiwgRVZFTlRfT05fUE9JTlRFUl9MRUFWRSwgRVZFTlRfT05fUE9JTlRFUl9NT1ZFLCBFVkVOVF9PTl9QT0lOVEVSX1VQLCBFVkVOVF9PTl9XSEVFTCwgSU1BR0VfRklUX0NPTlRBSU4sIElNQUdFX0ZJVF9DT1ZFUiwgTU9EVUxFX0NBUk9VU0VMLCBNT0RVTEVfQ09OVFJPTExFUiwgTU9EVUxFX05BVklHQVRJT04sIE1PRFVMRV9OT19TQ1JPTEwsIE1PRFVMRV9QT1JUQUwsIE1PRFVMRV9ST09ULCBNT0RVTEVfVE9PTEJBUiwgUExVR0lOX0NBUFRJT05TLCBQTFVHSU5fQ09VTlRFUiwgUExVR0lOX0RPV05MT0FELCBQTFVHSU5fRlVMTFNDUkVFTiwgUExVR0lOX0lOTElORSwgUExVR0lOX1NIQVJFLCBQTFVHSU5fU0xJREVTSE9XLCBQTFVHSU5fVEhVTUJOQUlMUywgUExVR0lOX1pPT00sIFNMSURFX1NUQVRVU19DT01QTEVURSwgU0xJREVfU1RBVFVTX0VSUk9SLCBTTElERV9TVEFUVVNfTE9BRElORywgU0xJREVfU1RBVFVTX1BMQUNFSE9MREVSLCBTTElERV9TVEFUVVNfUExBWUlORywgVU5LTk9XTl9BQ1RJT05fVFlQRSwgVktfQVJST1dfTEVGVCwgVktfQVJST1dfUklHSFQsIFZLX0VTQ0FQRSwgYWN0aXZlU2xpZGVTdGF0dXMgfTtcbiJdLCJuYW1lcyI6WyJNT0RVTEVfQ0FST1VTRUwiLCJNT0RVTEVfQ09OVFJPTExFUiIsIk1PRFVMRV9OQVZJR0FUSU9OIiwiTU9EVUxFX05PX1NDUk9MTCIsIk1PRFVMRV9QT1JUQUwiLCJNT0RVTEVfUk9PVCIsIk1PRFVMRV9UT09MQkFSIiwiUExVR0lOX0NBUFRJT05TIiwiUExVR0lOX0NPVU5URVIiLCJQTFVHSU5fRE9XTkxPQUQiLCJQTFVHSU5fRlVMTFNDUkVFTiIsIlBMVUdJTl9JTkxJTkUiLCJQTFVHSU5fU0hBUkUiLCJQTFVHSU5fU0xJREVTSE9XIiwiUExVR0lOX1RIVU1CTkFJTFMiLCJQTFVHSU5fWk9PTSIsIlNMSURFX1NUQVRVU19MT0FESU5HIiwiU0xJREVfU1RBVFVTX1BMQVlJTkciLCJTTElERV9TVEFUVVNfRVJST1IiLCJTTElERV9TVEFUVVNfQ09NUExFVEUiLCJTTElERV9TVEFUVVNfUExBQ0VIT0xERVIiLCJhY3RpdmVTbGlkZVN0YXR1cyIsInN0YXR1cyIsIkFDVElWRV9TTElERV9MT0FESU5HIiwiQUNUSVZFX1NMSURFX1BMQVlJTkciLCJBQ1RJVkVfU0xJREVfRVJST1IiLCJBQ1RJVkVfU0xJREVfQ09NUExFVEUiLCJDTEFTU19GVUxMU0laRSIsIkNMQVNTX0ZMRVhfQ0VOVEVSIiwiQ0xBU1NfTk9fU0NST0xMIiwiQ0xBU1NfTk9fU0NST0xMX1BBRERJTkciLCJDTEFTU19TTElERV9XUkFQUEVSIiwiQ0xBU1NfU0xJREVfV1JBUFBFUl9JTlRFUkFDVElWRSIsIkFDVElPTl9QUkVWIiwiQUNUSU9OX05FWFQiLCJBQ1RJT05fU1dJUEUiLCJBQ1RJT05fQ0xPU0UiLCJFVkVOVF9PTl9QT0lOVEVSX0RPV04iLCJFVkVOVF9PTl9QT0lOVEVSX01PVkUiLCJFVkVOVF9PTl9QT0lOVEVSX1VQIiwiRVZFTlRfT05fUE9JTlRFUl9MRUFWRSIsIkVWRU5UX09OX1BPSU5URVJfQ0FOQ0VMIiwiRVZFTlRfT05fS0VZX0RPV04iLCJFVkVOVF9PTl9LRVlfVVAiLCJFVkVOVF9PTl9XSEVFTCIsIlZLX0VTQ0FQRSIsIlZLX0FSUk9XX0xFRlQiLCJWS19BUlJPV19SSUdIVCIsIkVMRU1FTlRfQlVUVE9OIiwiRUxFTUVOVF9JQ09OIiwiSU1BR0VfRklUX0NPTlRBSU4iLCJJTUFHRV9GSVRfQ09WRVIiLCJVTktOT1dOX0FDVElPTl9UWVBFIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/types.js\n");

/***/ })

};
;